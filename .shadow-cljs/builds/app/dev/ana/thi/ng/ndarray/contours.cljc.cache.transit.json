["^ ","~:output",["^ ","~:js","goog.provide('thi.ng.ndarray.contours');\ngoog.require('cljs.core');\ngoog.require('thi.ng.ndarray.core');\ngoog.require('thi.ng.typedarrays.core');\nthi.ng.ndarray.contours.level_crossing = (function thi$ng$ndarray$contours$level_crossing(offset,a,b,level){\nvar da = (a - level);\nvar db = (b - level);\nif((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((da >= 0.0),(db >= 0.0))))){\nreturn (offset + (0.5 + (0.5 * ((da + db) / (da - db)))));\n} else {\nreturn null;\n}\n});\nthi.ng.ndarray.contours.level_crossings1d = (function thi$ng$ndarray$contours$level_crossings1d(mat,shape,level){\nvar iter__4523__auto__ = (function thi$ng$ndarray$contours$level_crossings1d_$_iter__48822(s__48823){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__48823__$1 = s__48823;\nwhile(true){\nvar temp__5735__auto__ = cljs.core.seq(s__48823__$1);\nif(temp__5735__auto__){\nvar s__48823__$2 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__48823__$2)){\nvar c__4521__auto__ = cljs.core.chunk_first(s__48823__$2);\nvar size__4522__auto__ = cljs.core.count(c__4521__auto__);\nvar b__48825 = cljs.core.chunk_buffer(size__4522__auto__);\nif((function (){var i__48824 = (0);\nwhile(true){\nif((i__48824 < size__4522__auto__)){\nvar x = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4521__auto__,i__48824);\nvar x_SINGLEQUOTE_ = thi.ng.ndarray.contours.level_crossing(x,thi.ng.ndarray.core.get_at.cljs$core$IFn$_invoke$arity$2(mat,x),thi.ng.ndarray.core.get_at.cljs$core$IFn$_invoke$arity$2(mat,(x + (1))),level);\nif(cljs.core.truth_(x_SINGLEQUOTE_)){\ncljs.core.chunk_append(b__48825,x_SINGLEQUOTE_);\n\nvar G__48901 = (i__48824 + (1));\ni__48824 = G__48901;\ncontinue;\n} else {\nvar G__48902 = (i__48824 + (1));\ni__48824 = G__48902;\ncontinue;\n}\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__48825),thi$ng$ndarray$contours$level_crossings1d_$_iter__48822(cljs.core.chunk_rest(s__48823__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__48825),null);\n}\n} else {\nvar x = cljs.core.first(s__48823__$2);\nvar x_SINGLEQUOTE_ = thi.ng.ndarray.contours.level_crossing(x,thi.ng.ndarray.core.get_at.cljs$core$IFn$_invoke$arity$2(mat,x),thi.ng.ndarray.core.get_at.cljs$core$IFn$_invoke$arity$2(mat,(x + (1))),level);\nif(cljs.core.truth_(x_SINGLEQUOTE_)){\nreturn cljs.core.cons(x_SINGLEQUOTE_,thi$ng$ndarray$contours$level_crossings1d_$_iter__48822(cljs.core.rest(s__48823__$2)));\n} else {\nvar G__48903 = cljs.core.rest(s__48823__$2);\ns__48823__$1 = G__48903;\ncontinue;\n}\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__4523__auto__(cljs.core.range.cljs$core$IFn$_invoke$arity$1((((typeof shape === 'number')?shape:cljs.core.first(shape)) - (1))));\n});\nthi.ng.ndarray.contours.level_crossings2d_x = (function thi$ng$ndarray$contours$level_crossings2d_x(var_args){\nvar G__48828 = arguments.length;\nswitch (G__48828) {\ncase 2:\nreturn thi.ng.ndarray.contours.level_crossings2d_x.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn thi.ng.ndarray.contours.level_crossings2d_x.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.ndarray.contours.level_crossings2d_x.cljs$core$IFn$_invoke$arity$2 = (function (mat,level){\nreturn thi.ng.ndarray.contours.level_crossings2d_x.cljs$core$IFn$_invoke$arity$3(mat,thi.ng.ndarray.core.shape(mat),level);\n});\n\nthi.ng.ndarray.contours.level_crossings2d_x.cljs$core$IFn$_invoke$arity$3 = (function (mat,p__48829,level){\nvar vec__48830 = p__48829;\nvar sy = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48830,(0),null);\nvar sx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48830,(1),null);\nreturn cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(((function (vec__48830,sy,sx){\nreturn (function (y){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (vec__48830,sy,sx){\nreturn (function (p1__48826_SHARP_){\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[y,p1__48826_SHARP_],null));\n});})(vec__48830,sy,sx))\n,thi.ng.ndarray.contours.level_crossings1d(thi.ng.ndarray.core.pick.cljs$core$IFn$_invoke$arity$3(mat,y,null),sx,level));\n});})(vec__48830,sy,sx))\n,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.range.cljs$core$IFn$_invoke$arity$1(sy)], 0));\n});\n\nthi.ng.ndarray.contours.level_crossings2d_x.cljs$lang$maxFixedArity = 3;\n\nthi.ng.ndarray.contours.level_crossings2d_y = (function thi$ng$ndarray$contours$level_crossings2d_y(var_args){\nvar G__48836 = arguments.length;\nswitch (G__48836) {\ncase 2:\nreturn thi.ng.ndarray.contours.level_crossings2d_y.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn thi.ng.ndarray.contours.level_crossings2d_y.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.ndarray.contours.level_crossings2d_y.cljs$core$IFn$_invoke$arity$2 = (function (mat,level){\nreturn thi.ng.ndarray.contours.level_crossings2d_y.cljs$core$IFn$_invoke$arity$3(mat,thi.ng.ndarray.core.shape(mat),level);\n});\n\nthi.ng.ndarray.contours.level_crossings2d_y.cljs$core$IFn$_invoke$arity$3 = (function (mat,p__48837,level){\nvar vec__48838 = p__48837;\nvar sy = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48838,(0),null);\nvar sx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48838,(1),null);\nreturn cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(((function (vec__48838,sy,sx){\nreturn (function (x){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (vec__48838,sy,sx){\nreturn (function (p1__48834_SHARP_){\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__48834_SHARP_,x],null));\n});})(vec__48838,sy,sx))\n,thi.ng.ndarray.contours.level_crossings1d(thi.ng.ndarray.core.pick.cljs$core$IFn$_invoke$arity$3(mat,null,x),sy,level));\n});})(vec__48838,sy,sx))\n,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.range.cljs$core$IFn$_invoke$arity$1(sx)], 0));\n});\n\nthi.ng.ndarray.contours.level_crossings2d_y.cljs$lang$maxFixedArity = 3;\n\nthi.ng.ndarray.contours.level_crossings2d = (function thi$ng$ndarray$contours$level_crossings2d(var_args){\nvar G__48842 = arguments.length;\nswitch (G__48842) {\ncase 2:\nreturn thi.ng.ndarray.contours.level_crossings2d.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn thi.ng.ndarray.contours.level_crossings2d.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.ndarray.contours.level_crossings2d.cljs$core$IFn$_invoke$arity$2 = (function (mat,level){\nreturn thi.ng.ndarray.contours.level_crossings2d.cljs$core$IFn$_invoke$arity$3(mat,thi.ng.ndarray.core.shape(mat),level);\n});\n\nthi.ng.ndarray.contours.level_crossings2d.cljs$core$IFn$_invoke$arity$3 = (function (mat,shape,level){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(thi.ng.ndarray.contours.level_crossings2d_x.cljs$core$IFn$_invoke$arity$3(mat,shape,level),thi.ng.ndarray.contours.level_crossings2d_y.cljs$core$IFn$_invoke$arity$3(mat,shape,level));\n});\n\nthi.ng.ndarray.contours.level_crossings2d.cljs$lang$maxFixedArity = 3;\n\nthi.ng.ndarray.contours.level_crossings3d_x = (function thi$ng$ndarray$contours$level_crossings3d_x(var_args){\nvar G__48845 = arguments.length;\nswitch (G__48845) {\ncase 2:\nreturn thi.ng.ndarray.contours.level_crossings3d_x.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn thi.ng.ndarray.contours.level_crossings3d_x.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.ndarray.contours.level_crossings3d_x.cljs$core$IFn$_invoke$arity$2 = (function (mat,level){\nreturn thi.ng.ndarray.contours.level_crossings3d_x.cljs$core$IFn$_invoke$arity$3(mat,thi.ng.ndarray.core.shape(mat),level);\n});\n\nthi.ng.ndarray.contours.level_crossings3d_x.cljs$core$IFn$_invoke$arity$3 = (function (mat,p__48846,level){\nvar vec__48847 = p__48846;\nvar sz = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48847,(0),null);\nvar sy = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48847,(1),null);\nvar sx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48847,(2),null);\nreturn cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(((function (vec__48847,sz,sy,sx){\nreturn (function (z){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (vec__48847,sz,sy,sx){\nreturn (function (p1__48843_SHARP_){\nreturn cljs.core.cons(z,p1__48843_SHARP_);\n});})(vec__48847,sz,sy,sx))\n,thi.ng.ndarray.contours.level_crossings2d_x.cljs$core$IFn$_invoke$arity$3(thi.ng.ndarray.core.pick.cljs$core$IFn$_invoke$arity$4(mat,z,null,null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sy,sx], null),level));\n});})(vec__48847,sz,sy,sx))\n,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.range.cljs$core$IFn$_invoke$arity$1(sz)], 0));\n});\n\nthi.ng.ndarray.contours.level_crossings3d_x.cljs$lang$maxFixedArity = 3;\n\nthi.ng.ndarray.contours.level_crossings3d_y = (function thi$ng$ndarray$contours$level_crossings3d_y(var_args){\nvar G__48852 = arguments.length;\nswitch (G__48852) {\ncase 2:\nreturn thi.ng.ndarray.contours.level_crossings3d_y.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn thi.ng.ndarray.contours.level_crossings3d_y.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.ndarray.contours.level_crossings3d_y.cljs$core$IFn$_invoke$arity$2 = (function (mat,level){\nreturn thi.ng.ndarray.contours.level_crossings3d_y.cljs$core$IFn$_invoke$arity$3(mat,thi.ng.ndarray.core.shape(mat),level);\n});\n\nthi.ng.ndarray.contours.level_crossings3d_y.cljs$core$IFn$_invoke$arity$3 = (function (mat,p__48853,level){\nvar vec__48854 = p__48853;\nvar sz = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48854,(0),null);\nvar sy = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48854,(1),null);\nvar sx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48854,(2),null);\nreturn cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(((function (vec__48854,sz,sy,sx){\nreturn (function (z){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (vec__48854,sz,sy,sx){\nreturn (function (p1__48850_SHARP_){\nreturn cljs.core.cons(z,p1__48850_SHARP_);\n});})(vec__48854,sz,sy,sx))\n,thi.ng.ndarray.contours.level_crossings2d_y.cljs$core$IFn$_invoke$arity$3(thi.ng.ndarray.core.pick.cljs$core$IFn$_invoke$arity$4(mat,z,null,null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sy,sx], null),level));\n});})(vec__48854,sz,sy,sx))\n,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.range.cljs$core$IFn$_invoke$arity$1(sz)], 0));\n});\n\nthi.ng.ndarray.contours.level_crossings3d_y.cljs$lang$maxFixedArity = 3;\n\nthi.ng.ndarray.contours.level_crossings3d_z = (function thi$ng$ndarray$contours$level_crossings3d_z(var_args){\nvar G__48859 = arguments.length;\nswitch (G__48859) {\ncase 2:\nreturn thi.ng.ndarray.contours.level_crossings3d_z.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn thi.ng.ndarray.contours.level_crossings3d_z.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.ndarray.contours.level_crossings3d_z.cljs$core$IFn$_invoke$arity$2 = (function (mat,level){\nreturn thi.ng.ndarray.contours.level_crossings3d_z.cljs$core$IFn$_invoke$arity$3(mat,thi.ng.ndarray.core.shape(mat),level);\n});\n\nthi.ng.ndarray.contours.level_crossings3d_z.cljs$core$IFn$_invoke$arity$3 = (function (mat,p__48860,level){\nvar vec__48861 = p__48860;\nvar sz = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48861,(0),null);\nvar sy = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48861,(1),null);\nvar sx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48861,(2),null);\nreturn cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(((function (vec__48861,sz,sy,sx){\nreturn (function (x){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (vec__48861,sz,sy,sx){\nreturn (function (p1__48857_SHARP_){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__48857_SHARP_,x);\n});})(vec__48861,sz,sy,sx))\n,thi.ng.ndarray.contours.level_crossings2d_y.cljs$core$IFn$_invoke$arity$3(thi.ng.ndarray.core.pick.cljs$core$IFn$_invoke$arity$4(mat,null,null,x),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sz,sy], null),level));\n});})(vec__48861,sz,sy,sx))\n,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.range.cljs$core$IFn$_invoke$arity$1(sx)], 0));\n});\n\nthi.ng.ndarray.contours.level_crossings3d_z.cljs$lang$maxFixedArity = 3;\n\nthi.ng.ndarray.contours.level_crossings3d = (function thi$ng$ndarray$contours$level_crossings3d(var_args){\nvar G__48866 = arguments.length;\nswitch (G__48866) {\ncase 2:\nreturn thi.ng.ndarray.contours.level_crossings3d.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn thi.ng.ndarray.contours.level_crossings3d.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.ndarray.contours.level_crossings3d.cljs$core$IFn$_invoke$arity$2 = (function (mat,level){\nreturn thi.ng.ndarray.contours.level_crossings3d.cljs$core$IFn$_invoke$arity$3(mat,thi.ng.ndarray.core.shape(mat),level);\n});\n\nthi.ng.ndarray.contours.level_crossings3d.cljs$core$IFn$_invoke$arity$3 = (function (mat,shape,level){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(thi.ng.ndarray.contours.level_crossings3d_x.cljs$core$IFn$_invoke$arity$3(mat,shape,level),thi.ng.ndarray.contours.level_crossings3d_y.cljs$core$IFn$_invoke$arity$3(mat,shape,level),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([thi.ng.ndarray.contours.level_crossings3d_z.cljs$core$IFn$_invoke$arity$3(mat,shape,level)], 0));\n});\n\nthi.ng.ndarray.contours.level_crossings3d.cljs$lang$maxFixedArity = 3;\n\nthi.ng.ndarray.contours.edge_index_2d = new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(2),(0)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),(0)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),(0)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0)], null),null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(3),(0)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(2),(0)], null),null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),(0)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(3),(0)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(2),(0)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(3),(0)], null),null], null);\nthi.ng.ndarray.contours.next_edges_2d = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(-1),(0)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),(0)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(-1)], null)], null);\nthi.ng.ndarray.contours.set_border_2d = (function thi$ng$ndarray$contours$set_border_2d(mat,x){\nvar vec__48867 = thi.ng.ndarray.core.shape(mat);\nvar h = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48867,(0),null);\nvar w = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48867,(1),null);\nvar h_SINGLEQUOTE_ = (h - (1));\nvar w_SINGLEQUOTE_ = (w - (1));\nvar l = thi.ng.ndarray.core.pick.cljs$core$IFn$_invoke$arity$3(mat,null,(0));\nvar r = thi.ng.ndarray.core.pick.cljs$core$IFn$_invoke$arity$3(mat,null,w_SINGLEQUOTE_);\nvar t = thi.ng.ndarray.core.pick.cljs$core$IFn$_invoke$arity$3(mat,(0),null);\nvar b = thi.ng.ndarray.core.pick.cljs$core$IFn$_invoke$arity$3(mat,h_SINGLEQUOTE_,null);\nvar i_48967 = w_SINGLEQUOTE_;\nwhile(true){\nif((i_48967 >= (0))){\nthi.ng.ndarray.core.set_at.cljs$core$IFn$_invoke$arity$3(t,i_48967,x);\n\nthi.ng.ndarray.core.set_at.cljs$core$IFn$_invoke$arity$3(b,i_48967,x);\n\nvar G__48969 = (i_48967 - (1));\ni_48967 = G__48969;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar i_48970 = h_SINGLEQUOTE_;\nwhile(true){\nif((i_48970 >= (0))){\nthi.ng.ndarray.core.set_at.cljs$core$IFn$_invoke$arity$3(l,i_48970,x);\n\nthi.ng.ndarray.core.set_at.cljs$core$IFn$_invoke$arity$3(r,i_48970,x);\n\nvar G__48971 = (i_48970 - (1));\ni_48970 = G__48971;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn mat;\n});\nthi.ng.ndarray.contours.encode_crossings_2d = (function thi$ng$ndarray$contours$encode_crossings_2d(src,isoval){\nvar out = thi.ng.ndarray.core.ndarray.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"int8\",\"int8\",-1834023920),thi.ng.typedarrays.core.int8(thi.ng.ndarray.core.size(src)),thi.ng.ndarray.core.shape(src));\nvar iso_QMARK_ = ((function (out){\nreturn (function (y,x,m){\nif((thi.ng.ndarray.core.get_at.cljs$core$IFn$_invoke$arity$3(src,y,x) < isoval)){\nreturn m;\n} else {\nreturn (0);\n}\n});})(out))\n;\nvar pos = thi.ng.ndarray.core.position_seq(thi.ng.ndarray.core.truncate_h.cljs$core$IFn$_invoke$arity$3(src,(-1),(-1)));\nwhile(true){\nif(cljs.core.truth_(pos)){\nvar vec__48870 = cljs.core.first(pos);\nvar y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48870,(0),null);\nvar x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48870,(1),null);\nvar x_SINGLEQUOTE_ = (x + (1));\nvar y_SINGLEQUOTE_ = (y + (1));\nthi.ng.ndarray.core.set_at.cljs$core$IFn$_invoke$arity$4(out,y,x,(((iso_QMARK_(y,x,(8)) | iso_QMARK_(y,x_SINGLEQUOTE_,(4))) | iso_QMARK_(y_SINGLEQUOTE_,x_SINGLEQUOTE_,(2))) | iso_QMARK_(y_SINGLEQUOTE_,x,(1))));\n\nvar G__48992 = cljs.core.next(pos);\npos = G__48992;\ncontinue;\n} else {\nreturn out;\n}\nbreak;\n}\n});\nthi.ng.ndarray.contours.mean_cell_value_2d = (function thi$ng$ndarray$contours$mean_cell_value_2d(src,y,x){\nreturn (((thi.ng.ndarray.core.get_at.cljs$core$IFn$_invoke$arity$3(src,y,x) + thi.ng.ndarray.core.get_at.cljs$core$IFn$_invoke$arity$3(src,y,(x + (1)))) + (thi.ng.ndarray.core.get_at.cljs$core$IFn$_invoke$arity$3(src,(y + (1)),x) + thi.ng.ndarray.core.get_at.cljs$core$IFn$_invoke$arity$3(src,(y + (1)),(x + (1))))) * 0.25);\n});\nthi.ng.ndarray.contours.process_saddle5 = (function thi$ng$ndarray$contours$process_saddle5(src,y,x,iso,from){\nif((thi.ng.ndarray.contours.mean_cell_value_2d(src,y,x) > iso)){\nif(((3) === from)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(2),(4)], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(1)], null);\n}\n} else {\nif(((3) === from)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(13)], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(2),(7)], null);\n}\n}\n});\nthi.ng.ndarray.contours.process_saddle10 = (function thi$ng$ndarray$contours$process_saddle10(src,y,x,iso,from){\nif((thi.ng.ndarray.contours.mean_cell_value_2d(src,y,x) > iso)){\nif(((0) === from)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(3),(2)], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),(8)], null);\n}\n} else {\nif(((2) === from)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(3),(11)], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),(14)], null);\n}\n}\n});\nthi.ng.ndarray.contours.mix2d = (function thi$ng$ndarray$contours$mix2d(src,y1,x1,y2,x2,iso){\nvar a = thi.ng.ndarray.core.get_at.cljs$core$IFn$_invoke$arity$3(src,y1,x1);\nvar b = thi.ng.ndarray.core.get_at.cljs$core$IFn$_invoke$arity$3(src,y2,x2);\nif((a === b)){\nreturn (0);\n} else {\nreturn ((a - iso) / (a - b));\n}\n});\nthi.ng.ndarray.contours.contour_vertex_2d = (function thi$ng$ndarray$contours$contour_vertex_2d(src,y,x,to,iso){\nvar x_SINGLEQUOTE_ = (x + (1));\nvar y_SINGLEQUOTE_ = (y + (1));\nvar G__48874 = (to | (0));\nswitch (G__48874) {\ncase (0):\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y,(x + thi.ng.ndarray.contours.mix2d(src,y,x,y,x_SINGLEQUOTE_,iso))], null);\n\nbreak;\ncase (1):\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(y + thi.ng.ndarray.contours.mix2d(src,y,x_SINGLEQUOTE_,y_SINGLEQUOTE_,x_SINGLEQUOTE_,iso)),x_SINGLEQUOTE_], null);\n\nbreak;\ncase (2):\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y_SINGLEQUOTE_,(x + thi.ng.ndarray.contours.mix2d(src,y_SINGLEQUOTE_,x,y_SINGLEQUOTE_,x_SINGLEQUOTE_,iso))], null);\n\nbreak;\ncase (3):\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(y + thi.ng.ndarray.contours.mix2d(src,y,x,y_SINGLEQUOTE_,x,iso)),x], null);\n\nbreak;\ndefault:\nreturn null;\n\n}\n});\nthi.ng.ndarray.contours.find_contours_2d = (function thi$ng$ndarray$contours$find_contours_2d(src,isoval){\nvar vec__48875 = thi.ng.ndarray.core.shape(src);\nvar h_SINGLEQUOTE_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48875,(0),null);\nvar w_SINGLEQUOTE_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48875,(1),null);\nvar h_SINGLEQUOTE___$1 = (h_SINGLEQUOTE_ - (1));\nvar w_SINGLEQUOTE___$1 = (w_SINGLEQUOTE_ - (1));\nvar coded = thi.ng.ndarray.contours.encode_crossings_2d(src,isoval);\nvar contours = cljs.core.volatile_BANG_(cljs.core.transient$(cljs.core.PersistentVector.EMPTY));\nvar pos = thi.ng.ndarray.core.position_seq(coded);\nvar curr = cljs.core.transient$(cljs.core.PersistentVector.EMPTY);\nvar to = null;\nvar p = null;\nwhile(true){\nif(cljs.core.truth_(pos)){\nvar from = to;\nvar vec__48890 = (cljs.core.truth_(p)?p:cljs.core.first(pos));\nvar y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48890,(0),null);\nvar x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48890,(1),null);\nif((((x >= w_SINGLEQUOTE___$1)) || ((y >= h_SINGLEQUOTE___$1)))){\nvar G__49031 = cljs.core.next(pos);\nvar G__49032 = curr;\nvar G__49033 = to;\nvar G__49034 = null;\npos = G__49031;\ncurr = G__49032;\nto = G__49033;\np = G__49034;\ncontinue;\n} else {\nvar id = thi.ng.ndarray.core.get_at.cljs$core$IFn$_invoke$arity$3(coded,y,x);\nvar vec__48893 = (function (){var G__48896 = (id | (0));\nswitch (G__48896) {\ncase (5):\nreturn thi.ng.ndarray.contours.process_saddle5(src,y,x,isoval,from);\n\nbreak;\ncase (10):\nreturn thi.ng.ndarray.contours.process_saddle10(src,y,x,isoval,from);\n\nbreak;\ndefault:\nvar G__48897 = (id | (0));\nreturn (thi.ng.ndarray.contours.edge_index_2d.cljs$core$IFn$_invoke$arity$1 ? thi.ng.ndarray.contours.edge_index_2d.cljs$core$IFn$_invoke$arity$1(G__48897) : thi.ng.ndarray.contours.edge_index_2d.call(null,G__48897));\n\n}\n})();\nvar to__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48893,(0),null);\nvar clear = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48893,(1),null);\nvar curr__$1 = (cljs.core.truth_((function (){var and__4120__auto__ = (from == null);\nif(and__4120__auto__){\nvar and__4120__auto____$1 = to__$1;\nif(cljs.core.truth_(and__4120__auto____$1)){\nreturn (cljs.core.count(curr) > (0));\n} else {\nreturn and__4120__auto____$1;\n}\n} else {\nreturn and__4120__auto__;\n}\n})())?(function (){\ncontours.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(contours.cljs$core$IDeref$_deref$arity$1(null),cljs.core.persistent_BANG_(curr)));\n\nreturn cljs.core.transient$(cljs.core.PersistentVector.EMPTY);\n})()\n:curr);\nif(cljs.core.truth_(clear)){\nthi.ng.ndarray.core.set_at.cljs$core$IFn$_invoke$arity$4(coded,y,x,clear);\n} else {\n}\n\nif(cljs.core.truth_((function (){var and__4120__auto__ = to__$1;\nif(cljs.core.truth_(and__4120__auto__)){\nreturn (to__$1 >= (0));\n} else {\nreturn and__4120__auto__;\n}\n})())){\nvar vertex = thi.ng.ndarray.contours.contour_vertex_2d(src,y,x,to__$1,isoval);\nvar vec__48898 = (thi.ng.ndarray.contours.next_edges_2d.cljs$core$IFn$_invoke$arity$1 ? thi.ng.ndarray.contours.next_edges_2d.cljs$core$IFn$_invoke$arity$1(to__$1) : thi.ng.ndarray.contours.next_edges_2d.call(null,to__$1));\nvar oy = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48898,(0),null);\nvar ox = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__48898,(1),null);\nvar G__49047 = cljs.core.next(pos);\nvar G__49048 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(curr__$1,vertex);\nvar G__49049 = to__$1;\nvar G__49050 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(y + oy),(x + ox)], null);\npos = G__49047;\ncurr = G__49048;\nto = G__49049;\np = G__49050;\ncontinue;\n} else {\nvar G__49051 = cljs.core.next(pos);\nvar G__49052 = curr__$1;\nvar G__49053 = to__$1;\nvar G__49054 = null;\npos = G__49051;\ncurr = G__49052;\nto = G__49053;\np = G__49054;\ncontinue;\n}\n}\n} else {\nreturn cljs.core.persistent_BANG_(cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(contours),cljs.core.persistent_BANG_(curr)));\n}\nbreak;\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","thi/ng/ndarray/contours.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",28],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$thi.ng.ndarray.contours","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$thi.ng.ndarray.core","^O","~$nd","^O","~$thi.ng.typedarrays.core","^Q","~$a","^Q","~$cljs.core","^R","~$goog","^S"],"~:seen",["^H",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^R","^R"],"~:form",["~#list",["~$ns","^J",["^Y",["^U",["^O","~:as","^P"],["^Q","^[","~$a"]]]]],"~:flags",["^ ","^U",["^H",[]]],"~:js-deps",["^ "],"~:deps",["^S","^R","^O","^Q"]],"^L","^J","~:resource-id",["~:shadow.build.classpath/resource","thi/ng/ndarray/contours.cljc"],"~:compiled-at",1569960345861,"~:resource-name","thi/ng/ndarray/contours.cljc","~:warnings",[],"~:source","(ns thi.ng.ndarray.contours\n  (:require\n   [thi.ng.ndarray.core :as nd]\n   #?(:cljs [thi.ng.typedarrays.core :as a])))\n\n(defn level-crossing\n  [offset a b level]\n  (let [da (- a level)\n        db (- b level)]\n    (if-not (= (>= da 0.0) (>= db 0.0))\n      (+ offset (+ 0.5 (* 0.5 (/ (+ da db) (- da db))))))))\n\n(defn level-crossings1d\n  [mat shape level]\n  (for [x (range (dec (if (number? shape) shape (first shape))))\n        :let [x' (level-crossing x (nd/get-at mat x) (nd/get-at mat (inc x)) level)]\n        :when x']\n    x'))\n\n(defn level-crossings2d-x\n  ([mat level]\n   (level-crossings2d-x mat (nd/shape mat) level))\n  ([mat [sy sx] level]\n   (mapcat\n    (fn [y] (map #(vector y %) (level-crossings1d (nd/pick mat y nil) sx level)))\n    (range sy))))\n\n(defn level-crossings2d-y\n  ([mat level]\n   (level-crossings2d-y mat (nd/shape mat) level))\n  ([mat [sy sx] level]\n   (mapcat\n    (fn [x] (map #(vector % x) (level-crossings1d (nd/pick mat nil x) sy level)))\n    (range sx))))\n\n(defn level-crossings2d\n  ([mat level]\n   (level-crossings2d mat (nd/shape mat) level))\n  ([mat shape level]\n   (concat\n    (level-crossings2d-x mat shape level)\n    (level-crossings2d-y mat shape level))))\n\n(defn level-crossings3d-x\n  ([mat level]\n   (level-crossings3d-x mat (nd/shape mat) level))\n  ([mat [sz sy sx] level]\n   (mapcat\n    (fn [z] (map #(cons z %) (level-crossings2d-x (nd/pick mat z nil nil) [sy sx] level)))\n    (range sz))))\n\n(defn level-crossings3d-y\n  ([mat level]\n   (level-crossings3d-y mat (nd/shape mat) level))\n  ([mat [sz sy sx] level]\n   (mapcat\n    (fn [z] (map #(cons z %) (level-crossings2d-y (nd/pick mat z nil nil) [sy sx] level)))\n    (range sz))))\n\n(defn level-crossings3d-z\n  ([mat level]\n   (level-crossings3d-z mat (nd/shape mat) level))\n  ([mat [sz sy sx] level]\n   (mapcat\n    (fn [x] (map #(conj % x) (level-crossings2d-y (nd/pick mat nil nil x) [sz sy] level)))\n    (range sx))))\n\n(defn level-crossings3d\n  ([mat level]\n   (level-crossings3d mat (nd/shape mat) level))\n  ([mat shape level]\n   (concat\n    (level-crossings3d-x mat shape level)\n    (level-crossings3d-y mat shape level)\n    (level-crossings3d-z mat shape level))))\n\n(def edge-index-2d\n  [nil [2 0] [1 0] [1 0]\n   [0 0] nil [0 0] [0 0]\n   [3 0] [2 0] nil [1 0]\n   [3 0] [2 0] [3 0] nil])\n\n(def next-edges-2d\n  [[-1 0] [0 1] [1 0] [0 -1]])\n\n(defn set-border-2d\n  [mat x]\n  (let [[h w] (nd/shape mat)\n        h' (dec h)\n        w' (dec w)\n        l  (nd/pick mat nil 0)\n        r  (nd/pick mat nil w')\n        t  (nd/pick mat 0 nil)\n        b  (nd/pick mat h' nil)]\n    (loop [i w']\n      (when (>= i 0)\n        (nd/set-at t i x)\n        (nd/set-at b i x)\n        (recur (dec i))))\n    (loop [i h']\n      (when (>= i 0)\n        (nd/set-at l i x)\n        (nd/set-at r i x)\n        (recur (dec i))))\n    mat))\n\n(defn encode-crossings-2d\n  [src isoval]\n  (let [out  (nd/ndarray :int8 (#?(:clj byte-array :cljs a/int8) (nd/size src)) (nd/shape src))\n        iso? (fn [y x m] (if (< (nd/get-at src y x) isoval) m 0))]\n    (loop [pos (nd/position-seq (nd/truncate-h src -1 -1))]\n      (if pos\n        (let [[y x] (first pos)\n              x' (inc x)\n              y' (inc y)]\n          (nd/set-at\n           out y x\n           (-> (iso? y x 0x08)\n               (bit-or (iso? y  x' 0x04))\n               (bit-or (iso? y' x' 0x02))\n               (bit-or (iso? y' x  0x01))))\n          (recur (next pos)))\n        out))))\n\n(defn mean-cell-value-2d\n  [src y x]\n  (* (+ (+ (nd/get-at src y x) (nd/get-at src y (inc x)))\n        (+ (nd/get-at src (inc y) x) (nd/get-at src (inc y) (inc x))))\n     0.25))\n\n(defn process-saddle5\n  [src y x iso from]\n  (if (> (mean-cell-value-2d src y x) iso)\n    (if (== 3 from) [2 0x04] [0 0x01])\n    (if (== 3 from) [0 0x0d] [2 0x07])))\n\n(defn process-saddle10\n  [src y x iso from]\n  (if (> (mean-cell-value-2d src y x) iso)\n    (if (== 0 from) [3 0x02] [1 0x08])\n    (if (== 2 from) [3 0x0b] [1 0x0e])))\n\n(defn mix2d\n  [src y1 x1 y2 x2 iso]\n  (let [a (nd/get-at src y1 x1)\n        b (nd/get-at src y2 x2)]\n    (if (== a b) 0 (/ (- a iso) (- a b)))))\n\n(defn contour-vertex-2d\n  [src y x to iso]\n  (let [x' (inc x) y' (inc y)]\n    (case (int to)\n      0 [y (+ x (mix2d src y x y x' iso))]\n      1 [(+ y (mix2d src y x' y' x' iso)) x']\n      2 [y' (+ x (mix2d src y' x y' x' iso))]\n      3 [(+ y (mix2d src y x y' x iso)) x]\n      nil)))\n\n(defn find-contours-2d\n  [src isoval]\n  (let [[h' w']  (nd/shape src)\n        h'       (dec h')\n        w'       (dec w')\n        coded    (encode-crossings-2d src isoval)\n        contours (volatile! (transient []))]\n    (loop [pos  (nd/position-seq coded)\n           curr (transient [])\n           to   nil\n           p    nil]\n      (if pos\n        (let [from to\n              [y x] (if p p (first pos))]\n          (if (or (>= x w') (>= y h'))\n            (recur (next pos) curr to nil)\n            (let [id         (nd/get-at coded y x)\n                  [to clear] (case (int id)\n                               5 (process-saddle5 src y x isoval from)\n                               10 (process-saddle10 src y x isoval from)\n                               (edge-index-2d (int id)))\n                  curr       (if (and (nil? from) to (pos? (count curr)))\n                               (do (vswap! contours conj! (persistent! curr))\n                                   (transient []))\n                               curr)]\n              (when clear\n                (nd/set-at coded y x clear))\n              (if (and to (>= to 0))\n                (let [vertex  (contour-vertex-2d src y x to isoval)\n                      [oy ox] (next-edges-2d to)]\n                  (recur (next pos) (conj! curr vertex) to [(+ y oy) (+ x ox)]))\n                (recur (next pos) curr to nil)))))\n        (persistent! (conj! @contours (persistent! curr)))))))\n","~:reader-features",["^H",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["thi.ng.ndarray.contours/level-crossing","offset","a","b","level","da","db","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","thi.ng.ndarray.contours/level-crossings1d","mat","shape","iter__4523__auto__","s__48823","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4521__auto__","size__4522__auto__","cljs.core/count","b__48825","cljs.core/chunk-buffer","i__48824","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__48822","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","x","cljs.core.range.cljs$core$IFn$_invoke$arity$1","x'","thi.ng.ndarray.core.get_at.cljs$core$IFn$_invoke$arity$2","var_args","G__48828","thi.ng.ndarray.contours/level-crossings2d-x","js/Error","p__48829","vec__48830","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","thi.ng.ndarray.contours.level_crossings2d_x.cljs$core$IFn$_invoke$arity$3","thi.ng.ndarray.core/shape","sy","sx","cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic","y","p1__48826#","cljs.core.map.cljs$core$IFn$_invoke$arity$2","cljs.core/PersistentVector","thi.ng.ndarray.core.pick.cljs$core$IFn$_invoke$arity$3","G__48836","thi.ng.ndarray.contours/level-crossings2d-y","p__48837","vec__48838","thi.ng.ndarray.contours.level_crossings2d_y.cljs$core$IFn$_invoke$arity$3","p1__48834#","G__48842","thi.ng.ndarray.contours/level-crossings2d","thi.ng.ndarray.contours.level_crossings2d.cljs$core$IFn$_invoke$arity$3","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","G__48845","thi.ng.ndarray.contours/level-crossings3d-x","p__48846","vec__48847","thi.ng.ndarray.contours.level_crossings3d_x.cljs$core$IFn$_invoke$arity$3","sz","z","p1__48843#","thi.ng.ndarray.core.pick.cljs$core$IFn$_invoke$arity$4","G__48852","thi.ng.ndarray.contours/level-crossings3d-y","p__48853","vec__48854","thi.ng.ndarray.contours.level_crossings3d_y.cljs$core$IFn$_invoke$arity$3","p1__48850#","G__48859","thi.ng.ndarray.contours/level-crossings3d-z","p__48860","vec__48861","thi.ng.ndarray.contours.level_crossings3d_z.cljs$core$IFn$_invoke$arity$3","p1__48857#","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","G__48866","thi.ng.ndarray.contours/level-crossings3d","thi.ng.ndarray.contours.level_crossings3d.cljs$core$IFn$_invoke$arity$3","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic","thi.ng.ndarray.contours/edge-index-2d","thi.ng.ndarray.contours/next-edges-2d","thi.ng.ndarray.contours/set-border-2d","vec__48867","h","w","h'","w'","l","r","t","i","thi.ng.ndarray.core.set_at.cljs$core$IFn$_invoke$arity$3","thi.ng.ndarray.contours/encode-crossings-2d","src","isoval","out","thi.ng.ndarray.core.ndarray.cljs$core$IFn$_invoke$arity$3","thi.ng.typedarrays.core/int8","thi.ng.ndarray.core/size","iso?","m","thi.ng.ndarray.core.get_at.cljs$core$IFn$_invoke$arity$3","pos","thi.ng.ndarray.core/position-seq","thi.ng.ndarray.core.truncate_h.cljs$core$IFn$_invoke$arity$3","vec__48870","y'","thi.ng.ndarray.core.set_at.cljs$core$IFn$_invoke$arity$4","cljs.core/next","thi.ng.ndarray.contours/mean-cell-value-2d","thi.ng.ndarray.contours/process-saddle5","iso","from","thi.ng.ndarray.contours/process-saddle10","thi.ng.ndarray.contours/mix2d","y1","x1","y2","x2","thi.ng.ndarray.contours/contour-vertex-2d","to","G__48874","thi.ng.ndarray.contours/find-contours-2d","vec__48875","coded","contours","cljs.core/volatile!","cljs.core/transient","curr","p","vec__48890","vec__48893","id","clear","G__48896","G__48897","and__4120__auto__","cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2","cljs.core/persistent!","vec__48898","vertex","oy","ox","cljs.core/deref","cljs.core/chunk-first"]]],"~:cache-keys",["~#cmap",[["^14","thi/ng/ndarray/core.cljc"],[1569959625759,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^H",[]],"~:deps-syms",["^S","^R","^Q","~$thi.ng.math.core"]]],["^14","thi/ng/typedarrays/core.cljs"],[1569959626548,"^1A",["^ ","^1B",null,"^1C",["^H",[]],"^1D",["^S","^R"]]],["^14","goog/math/math.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^H",[]],"^1D",["^S","~$goog.array","~$goog.asserts"]]],["^14","goog/array/array.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^H",[]],"^1D",["^S","^1G"]]],["^14","goog/debug/error.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^H",[]],"^1D",["^S"]]],["^14","goog/dom/nodetype.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^H",[]],"^1D",["^S"]]],["^14","thi/ng/math/core.cljc"],[1569959625673,"^1A",["^ ","^1B",null,"^1C",["^H",[]],"^1D",["^S","^R"]]],["^14","goog/object/object.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^H",[]],"^1D",["^S"]]],"~:SHADOW-TIMESTAMP",[1569627608000,1556316222000],["^14","goog/math/long.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^H",[]],"^1D",["^S","^1G","~$goog.reflect"]]],["^14","thi/ng/ndarray/contours.cljc"],[1569959625759,"^1A",["^ ","^1B",null,"^1C",["^H",[]],"^1D",["^S","^R","^O","^Q"]]],["^14","goog/string/internal.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^H",[]],"^1D",["^S"]]],["^14","goog/functions/functions.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^H",[]],"^1D",["^S"]]],["^14","goog/structs/map.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^H",[]],"^1D",["^S","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^14","goog/asserts/asserts.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^H",[]],"^1D",["^S","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^14","goog/uri/uri.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^H",[]],"^1D",["^S","^1F","^1G","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^14","goog/base.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^H",[]],"^1D",[]]],["^14","goog/structs/structs.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^H",[]],"^1D",["^S","^1F","~$goog.object"]]],["^14","goog/string/string.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^H",[]],"^1D",["^S","~$goog.string.internal"]]],["^14","goog/reflect/reflect.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^H",[]],"^1D",["^S"]]],["^14","goog/string/stringbuffer.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^H",[]],"^1D",["^S"]]],["^14","goog/iter/iter.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^H",[]],"^1D",["^S","^1F","^1G","~$goog.functions","~$goog.math"]]],["^14","cljs/core.cljs"],[1556316222100,"^1A",["^ ","^1B",null,"^1C",["^H",[]],"^1D",["~$goog.math.Long","~$goog.math.Integer","^1N","^1T","^1F","~$goog.Uri","~$goog.string.StringBuffer"]]],["^14","goog/math/integer.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^H",[]],"^1D",["^S"]]],["^14","goog/uri/utils.js"],[1559507890775,"^1A",["^ ","^1B",null,"^1C",["^H",[]],"^1D",["^S","^1F","^1G","^1N"]]]]],"~:clj-info",["^ ","jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/default_data_readers.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/inspect.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/reader_types.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/thi/ng/math/0.2.1/math-0.2.1.jar!/thi/ng/math/macros.clj",1569959625000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/thi/ng/ndarray/0.3.2/ndarray-0.3.2.jar!/thi/ng/ndarray/macros.clj",1569959625000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/errors.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1556312825000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1556316222000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","thi/ng/ndarray/contours.cljc","^7",1,"^8",5,"^9",1,"^:",28],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",null,"^G",["^H",[]],"^I","^J","^M",null,"^N",["^ ","^O","^O","^P","^O","^Q","^Q","~$a","^Q","^R","^R","^S","^S"],"^T",["^H",["^U"]],"~:shadow/js-access-global",["^H",["Error"]],"^V",null,"~:defs",["^ ","~$contour-vertex-2d",["^ ","~:protocol-inline",null,"^5",["^ ","^6","thi/ng/ndarray/contours.cljc","^7",149,"^8",7,"^9",149,"^:",24,"~:arglists",["^Y",["~$quote",["^Y",[["~$src","~$y","~$x","~$to","~$iso"]]]]]],"^I","~$thi.ng.ndarray.contours/contour-vertex-2d","^6","thi/ng/ndarray/contours.cljc","^:",24,"~:method-params",["^Y",[["^2R","~$y","~$x","^2S","^2T"]]],"~:protocol-impl",null,"~:arglists-meta",["^Y",[null,null]],"^8",1,"~:variadic?",false,"^7",149,"^9",149,"~:max-fixed-arity",5,"~:fn-var",true,"^2P",["^Y",["^2Q",["^Y",[["^2R","~$y","~$x","^2S","^2T"]]]]]],"~$mix2d",["^ ","^2O",null,"^5",["^ ","^6","thi/ng/ndarray/contours.cljc","^7",143,"^8",7,"^9",143,"^:",12,"^2P",["^Y",["^2Q",["^Y",[["^2R","~$y1","~$x1","~$y2","~$x2","^2T"]]]]]],"^I","~$thi.ng.ndarray.contours/mix2d","^6","thi/ng/ndarray/contours.cljc","^:",12,"^2V",["^Y",[["^2R","^31","^32","^33","^34","^2T"]]],"^2W",null,"^2X",["^Y",[null,null]],"^8",1,"^2Y",false,"^7",143,"~:ret-tag","~$number","^9",143,"^2Z",6,"^2[",true,"^2P",["^Y",["^2Q",["^Y",[["^2R","^31","^32","^33","^34","^2T"]]]]]],"~$edge-index-2d",["^ ","^I","~$thi.ng.ndarray.contours/edge-index-2d","^6","thi/ng/ndarray/contours.cljc","^7",77,"^8",1,"^9",77,"^:",19,"^5",["^ ","^6","thi/ng/ndarray/contours.cljc","^7",77,"^8",6,"^9",77,"^:",19],"~:tag","~$cljs.core/IVector"],"~$level-crossings2d",["^ ","^2O",null,"^5",["^ ","^6","thi/ng/ndarray/contours.cljc","^7",36,"^8",7,"^9",36,"^:",24,"^2P",["^Y",["^2Q",["^Y",[["~$mat","~$level"],["^3=","~$shape","^3>"]]]]],"~:top-fn",["^ ","^2Y",false,"~:fixed-arity",3,"^2Z",3,"^2V",["^Y",[["^3=","^3>"],["^3=","^3?","^3>"]]],"^2P",["^Y",[["^3=","^3>"],["^3=","^3?","^3>"]]],"^2X",["^Y",[null,null]]]],"^I","~$thi.ng.ndarray.contours/level-crossings2d","^6","thi/ng/ndarray/contours.cljc","^:",24,"^3@",["^ ","^2Y",false,"^3A",3,"^2Z",3,"^2V",["^Y",[["^3=","^3>"],["^3=","^3?","^3>"]]],"^2P",["^Y",[["^3=","^3>"],["^3=","^3?","^3>"]]],"^2X",["^Y",[null,null]]],"^2V",["^Y",[["^3=","^3>"],["^3=","^3?","^3>"]]],"^2W",null,"^3A",3,"^2X",["^Y",[null,null]],"^8",1,"^2Y",false,"~:methods",[["^ ","^3A",2,"^2Y",false,"^3:","~$any"],["^ ","^3A",3,"^2Y",false,"^3:","~$cljs.core/LazySeq"]],"^7",36,"^9",36,"^2Z",3,"^2[",true,"^2P",["^Y",[["^3=","^3>"],["^3=","^3?","^3>"]]]],"~$process-saddle10",["^ ","^2O",null,"^5",["^ ","^6","thi/ng/ndarray/contours.cljc","^7",137,"^8",7,"^9",137,"^:",23,"^2P",["^Y",["^2Q",["^Y",[["^2R","~$y","~$x","^2T","~$from"]]]]]],"^I","~$thi.ng.ndarray.contours/process-saddle10","^6","thi/ng/ndarray/contours.cljc","^:",23,"^2V",["^Y",[["^2R","~$y","~$x","^2T","^3G"]]],"^2W",null,"^2X",["^Y",[null,null]],"^8",1,"^2Y",false,"^7",137,"^36","^3;","^9",137,"^2Z",5,"^2[",true,"^2P",["^Y",["^2Q",["^Y",[["^2R","~$y","~$x","^2T","^3G"]]]]]],"~$level-crossings1d",["^ ","^2O",null,"^5",["^ ","^6","thi/ng/ndarray/contours.cljc","^7",13,"^8",7,"^9",13,"^:",24,"^2P",["^Y",["^2Q",["^Y",[["^3=","^3?","^3>"]]]]]],"^I","~$thi.ng.ndarray.contours/level-crossings1d","^6","thi/ng/ndarray/contours.cljc","^:",24,"^2V",["^Y",[["^3=","^3?","^3>"]]],"^2W",null,"^2X",["^Y",[null,null]],"^8",1,"^2Y",false,"^7",13,"^36","^3E","^9",13,"^2Z",3,"^2[",true,"^2P",["^Y",["^2Q",["^Y",[["^3=","^3?","^3>"]]]]]],"~$level-crossing",["^ ","^2O",null,"^5",["^ ","^6","thi/ng/ndarray/contours.cljc","^7",6,"^8",7,"^9",6,"^:",21,"^2P",["^Y",["^2Q",["^Y",[["~$offset","~$a","~$b","^3>"]]]]]],"^I","~$thi.ng.ndarray.contours/level-crossing","^6","thi/ng/ndarray/contours.cljc","^:",21,"^2V",["^Y",[["^3L","~$a","~$b","^3>"]]],"^2W",null,"^2X",["^Y",[null,null]],"^8",1,"^2Y",false,"^7",6,"^36",["^H",["^37","~$clj-nil"]],"^9",6,"^2Z",4,"^2[",true,"^2P",["^Y",["^2Q",["^Y",[["^3L","~$a","~$b","^3>"]]]]]],"~$encode-crossings-2d",["^ ","^2O",null,"^5",["^ ","^6","thi/ng/ndarray/contours.cljc","^7",107,"^8",7,"^9",107,"^:",26,"^2P",["^Y",["^2Q",["^Y",[["^2R","~$isoval"]]]]]],"^I","~$thi.ng.ndarray.contours/encode-crossings-2d","^6","thi/ng/ndarray/contours.cljc","^:",26,"^2V",["^Y",[["^2R","^3P"]]],"^2W",null,"^2X",["^Y",[null,null]],"^8",1,"^2Y",false,"^7",107,"^36","^3D","^9",107,"^2Z",2,"^2[",true,"^2P",["^Y",["^2Q",["^Y",[["^2R","^3P"]]]]]],"~$level-crossings2d-y",["^ ","^2O",null,"^5",["^ ","^6","thi/ng/ndarray/contours.cljc","^7",28,"^8",7,"^9",28,"^:",26,"^2P",["^Y",["^2Q",["^Y",[["^3=","^3>"],["^3=",["~$sy","~$sx"],"^3>"]]]]],"^3@",["^ ","^2Y",false,"^3A",3,"^2Z",3,"^2V",["^Y",[["^3=","^3>"],["^3=",["^3S","^3T"],"^3>"]]],"^2P",["^Y",[["^3=","^3>"],["^3=",["^3S","^3T"],"^3>"]]],"^2X",["^Y",[null,null]]]],"^I","~$thi.ng.ndarray.contours/level-crossings2d-y","^6","thi/ng/ndarray/contours.cljc","^:",26,"^3@",["^ ","^2Y",false,"^3A",3,"^2Z",3,"^2V",["^Y",[["^3=","^3>"],["^3=",["^3S","^3T"],"^3>"]]],"^2P",["^Y",[["^3=","^3>"],["^3=",["^3S","^3T"],"^3>"]]],"^2X",["^Y",[null,null]]],"^2V",["^Y",[["^3=","^3>"],["^3=",["^3S","^3T"],"^3>"]]],"^2W",null,"^3A",3,"^2X",["^Y",[null,null]],"^8",1,"^2Y",false,"^3C",[["^ ","^3A",2,"^2Y",false,"^3:","^3D"],["^ ","^3A",3,"^2Y",false,"^3:","^3D"]],"^7",28,"^9",28,"^2Z",3,"^2[",true,"^2P",["^Y",[["^3=","^3>"],["^3=",["^3S","^3T"],"^3>"]]]],"~$level-crossings2d-x",["^ ","^2O",null,"^5",["^ ","^6","thi/ng/ndarray/contours.cljc","^7",20,"^8",7,"^9",20,"^:",26,"^2P",["^Y",["^2Q",["^Y",[["^3=","^3>"],["^3=",["^3S","^3T"],"^3>"]]]]],"^3@",["^ ","^2Y",false,"^3A",3,"^2Z",3,"^2V",["^Y",[["^3=","^3>"],["^3=",["^3S","^3T"],"^3>"]]],"^2P",["^Y",[["^3=","^3>"],["^3=",["^3S","^3T"],"^3>"]]],"^2X",["^Y",[null,null]]]],"^I","~$thi.ng.ndarray.contours/level-crossings2d-x","^6","thi/ng/ndarray/contours.cljc","^:",26,"^3@",["^ ","^2Y",false,"^3A",3,"^2Z",3,"^2V",["^Y",[["^3=","^3>"],["^3=",["^3S","^3T"],"^3>"]]],"^2P",["^Y",[["^3=","^3>"],["^3=",["^3S","^3T"],"^3>"]]],"^2X",["^Y",[null,null]]],"^2V",["^Y",[["^3=","^3>"],["^3=",["^3S","^3T"],"^3>"]]],"^2W",null,"^3A",3,"^2X",["^Y",[null,null]],"^8",1,"^2Y",false,"^3C",[["^ ","^3A",2,"^2Y",false,"^3:","^3D"],["^ ","^3A",3,"^2Y",false,"^3:","^3D"]],"^7",20,"^9",20,"^2Z",3,"^2[",true,"^2P",["^Y",[["^3=","^3>"],["^3=",["^3S","^3T"],"^3>"]]]],"~$level-crossings3d",["^ ","^2O",null,"^5",["^ ","^6","thi/ng/ndarray/contours.cljc","^7",68,"^8",7,"^9",68,"^:",24,"^2P",["^Y",["^2Q",["^Y",[["^3=","^3>"],["^3=","^3?","^3>"]]]]],"^3@",["^ ","^2Y",false,"^3A",3,"^2Z",3,"^2V",["^Y",[["^3=","^3>"],["^3=","^3?","^3>"]]],"^2P",["^Y",[["^3=","^3>"],["^3=","^3?","^3>"]]],"^2X",["^Y",[null,null]]]],"^I","~$thi.ng.ndarray.contours/level-crossings3d","^6","thi/ng/ndarray/contours.cljc","^:",24,"^3@",["^ ","^2Y",false,"^3A",3,"^2Z",3,"^2V",["^Y",[["^3=","^3>"],["^3=","^3?","^3>"]]],"^2P",["^Y",[["^3=","^3>"],["^3=","^3?","^3>"]]],"^2X",["^Y",[null,null]]],"^2V",["^Y",[["^3=","^3>"],["^3=","^3?","^3>"]]],"^2W",null,"^3A",3,"^2X",["^Y",[null,null]],"^8",1,"^2Y",false,"^3C",[["^ ","^3A",2,"^2Y",false,"^3:","^3D"],["^ ","^3A",3,"^2Y",false,"^3:","^3E"]],"^7",68,"^9",68,"^2Z",3,"^2[",true,"^2P",["^Y",[["^3=","^3>"],["^3=","^3?","^3>"]]]],"~$level-crossings3d-x",["^ ","^2O",null,"^5",["^ ","^6","thi/ng/ndarray/contours.cljc","^7",44,"^8",7,"^9",44,"^:",26,"^2P",["^Y",["^2Q",["^Y",[["^3=","^3>"],["^3=",["~$sz","^3S","^3T"],"^3>"]]]]],"^3@",["^ ","^2Y",false,"^3A",3,"^2Z",3,"^2V",["^Y",[["^3=","^3>"],["^3=",["^3[","^3S","^3T"],"^3>"]]],"^2P",["^Y",[["^3=","^3>"],["^3=",["^3[","^3S","^3T"],"^3>"]]],"^2X",["^Y",[null,null]]]],"^I","~$thi.ng.ndarray.contours/level-crossings3d-x","^6","thi/ng/ndarray/contours.cljc","^:",26,"^3@",["^ ","^2Y",false,"^3A",3,"^2Z",3,"^2V",["^Y",[["^3=","^3>"],["^3=",["^3[","^3S","^3T"],"^3>"]]],"^2P",["^Y",[["^3=","^3>"],["^3=",["^3[","^3S","^3T"],"^3>"]]],"^2X",["^Y",[null,null]]],"^2V",["^Y",[["^3=","^3>"],["^3=",["^3[","^3S","^3T"],"^3>"]]],"^2W",null,"^3A",3,"^2X",["^Y",[null,null]],"^8",1,"^2Y",false,"^3C",[["^ ","^3A",2,"^2Y",false,"^3:","^3D"],["^ ","^3A",3,"^2Y",false,"^3:","^3D"]],"^7",44,"^9",44,"^2Z",3,"^2[",true,"^2P",["^Y",[["^3=","^3>"],["^3=",["^3[","^3S","^3T"],"^3>"]]]],"~$level-crossings3d-y",["^ ","^2O",null,"^5",["^ ","^6","thi/ng/ndarray/contours.cljc","^7",52,"^8",7,"^9",52,"^:",26,"^2P",["^Y",["^2Q",["^Y",[["^3=","^3>"],["^3=",["^3[","^3S","^3T"],"^3>"]]]]],"^3@",["^ ","^2Y",false,"^3A",3,"^2Z",3,"^2V",["^Y",[["^3=","^3>"],["^3=",["^3[","^3S","^3T"],"^3>"]]],"^2P",["^Y",[["^3=","^3>"],["^3=",["^3[","^3S","^3T"],"^3>"]]],"^2X",["^Y",[null,null]]]],"^I","~$thi.ng.ndarray.contours/level-crossings3d-y","^6","thi/ng/ndarray/contours.cljc","^:",26,"^3@",["^ ","^2Y",false,"^3A",3,"^2Z",3,"^2V",["^Y",[["^3=","^3>"],["^3=",["^3[","^3S","^3T"],"^3>"]]],"^2P",["^Y",[["^3=","^3>"],["^3=",["^3[","^3S","^3T"],"^3>"]]],"^2X",["^Y",[null,null]]],"^2V",["^Y",[["^3=","^3>"],["^3=",["^3[","^3S","^3T"],"^3>"]]],"^2W",null,"^3A",3,"^2X",["^Y",[null,null]],"^8",1,"^2Y",false,"^3C",[["^ ","^3A",2,"^2Y",false,"^3:","^3D"],["^ ","^3A",3,"^2Y",false,"^3:","^3D"]],"^7",52,"^9",52,"^2Z",3,"^2[",true,"^2P",["^Y",[["^3=","^3>"],["^3=",["^3[","^3S","^3T"],"^3>"]]]],"~$level-crossings3d-z",["^ ","^2O",null,"^5",["^ ","^6","thi/ng/ndarray/contours.cljc","^7",60,"^8",7,"^9",60,"^:",26,"^2P",["^Y",["^2Q",["^Y",[["^3=","^3>"],["^3=",["^3[","^3S","^3T"],"^3>"]]]]],"^3@",["^ ","^2Y",false,"^3A",3,"^2Z",3,"^2V",["^Y",[["^3=","^3>"],["^3=",["^3[","^3S","^3T"],"^3>"]]],"^2P",["^Y",[["^3=","^3>"],["^3=",["^3[","^3S","^3T"],"^3>"]]],"^2X",["^Y",[null,null]]]],"^I","~$thi.ng.ndarray.contours/level-crossings3d-z","^6","thi/ng/ndarray/contours.cljc","^:",26,"^3@",["^ ","^2Y",false,"^3A",3,"^2Z",3,"^2V",["^Y",[["^3=","^3>"],["^3=",["^3[","^3S","^3T"],"^3>"]]],"^2P",["^Y",[["^3=","^3>"],["^3=",["^3[","^3S","^3T"],"^3>"]]],"^2X",["^Y",[null,null]]],"^2V",["^Y",[["^3=","^3>"],["^3=",["^3[","^3S","^3T"],"^3>"]]],"^2W",null,"^3A",3,"^2X",["^Y",[null,null]],"^8",1,"^2Y",false,"^3C",[["^ ","^3A",2,"^2Y",false,"^3:","^3D"],["^ ","^3A",3,"^2Y",false,"^3:","^3D"]],"^7",60,"^9",60,"^2Z",3,"^2[",true,"^2P",["^Y",[["^3=","^3>"],["^3=",["^3[","^3S","^3T"],"^3>"]]]],"~$process-saddle5",["^ ","^2O",null,"^5",["^ ","^6","thi/ng/ndarray/contours.cljc","^7",131,"^8",7,"^9",131,"^:",22,"^2P",["^Y",["^2Q",["^Y",[["^2R","~$y","~$x","^2T","^3G"]]]]]],"^I","~$thi.ng.ndarray.contours/process-saddle5","^6","thi/ng/ndarray/contours.cljc","^:",22,"^2V",["^Y",[["^2R","~$y","~$x","^2T","^3G"]]],"^2W",null,"^2X",["^Y",[null,null]],"^8",1,"^2Y",false,"^7",131,"^36","^3;","^9",131,"^2Z",5,"^2[",true,"^2P",["^Y",["^2Q",["^Y",[["^2R","~$y","~$x","^2T","^3G"]]]]]],"~$mean-cell-value-2d",["^ ","^2O",null,"^5",["^ ","^6","thi/ng/ndarray/contours.cljc","^7",125,"^8",7,"^9",125,"^:",25,"^2P",["^Y",["^2Q",["^Y",[["^2R","~$y","~$x"]]]]]],"^I","~$thi.ng.ndarray.contours/mean-cell-value-2d","^6","thi/ng/ndarray/contours.cljc","^:",25,"^2V",["^Y",[["^2R","~$y","~$x"]]],"^2W",null,"^2X",["^Y",[null,null]],"^8",1,"^2Y",false,"^7",125,"^36","^37","^9",125,"^2Z",3,"^2[",true,"^2P",["^Y",["^2Q",["^Y",[["^2R","~$y","~$x"]]]]]],"~$set-border-2d",["^ ","^2O",null,"^5",["^ ","^6","thi/ng/ndarray/contours.cljc","^7",86,"^8",7,"^9",86,"^:",20,"^2P",["^Y",["^2Q",["^Y",[["^3=","~$x"]]]]]],"^I","~$thi.ng.ndarray.contours/set-border-2d","^6","thi/ng/ndarray/contours.cljc","^:",20,"^2V",["^Y",[["^3=","~$x"]]],"^2W",null,"^2X",["^Y",[null,null]],"^8",1,"^2Y",false,"^7",86,"^9",86,"^2Z",2,"^2[",true,"^2P",["^Y",["^2Q",["^Y",[["^3=","~$x"]]]]]],"~$next-edges-2d",["^ ","^I","~$thi.ng.ndarray.contours/next-edges-2d","^6","thi/ng/ndarray/contours.cljc","^7",83,"^8",1,"^9",83,"^:",19,"^5",["^ ","^6","thi/ng/ndarray/contours.cljc","^7",83,"^8",6,"^9",83,"^:",19],"^3:","^3;"],"~$find-contours-2d",["^ ","^2O",null,"^5",["^ ","^6","thi/ng/ndarray/contours.cljc","^7",159,"^8",7,"^9",159,"^:",23,"^2P",["^Y",["^2Q",["^Y",[["^2R","^3P"]]]]]],"^I","~$thi.ng.ndarray.contours/find-contours-2d","^6","thi/ng/ndarray/contours.cljc","^:",23,"^2V",["^Y",[["^2R","^3P"]]],"^2W",null,"^2X",["^Y",[null,null]],"^8",1,"^2Y",false,"^7",159,"^36","~$clj","^9",159,"^2Z",2,"^2[",true,"^2P",["^Y",["^2Q",["^Y",[["^2R","^3P"]]]]]]],"^W",["^ ","^R","^R"],"~:cljs.analyzer/constants",["^ ","^T",["^H",["~:int8"]],"~:order",["^4A"]],"^10",["^ ","^U",["^H",[]]],"^11",["^ "],"^12",["^S","^R","^O","^Q"]],"^L","^J","~:ns-specs",["^ "],"~:ns-spec-vars",[],"~:compiler-options",["^1@",[["^4E","~:static-fns"],true,["^4E","~:elide-asserts"],false,["^4E","~:optimize-constants"],null,["^4E","^17"],null,["^4E","~:external-config"],null,["^4E","~:tooling-config"],null,["^4E","~:emit-constants"],null,["^4E","~:load-tests"],null,["^4E","~:form-size-threshold"],null,["^4E","~:infer-externs"],true,["^4E","^19"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^4E","~:fn-invoke-direct"],null,["^4E","~:source-map"],"/dev/null"]]]