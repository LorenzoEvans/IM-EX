["^ ","~:output",["^ ","~:js","goog.provide('thi.ng.geom.utils');\ngoog.require('cljs.core');\ngoog.require('thi.ng.geom.core');\ngoog.require('thi.ng.geom.vector');\ngoog.require('thi.ng.geom.types');\ngoog.require('thi.ng.dstruct.core');\ngoog.require('thi.ng.math.core');\nthi.ng.geom.utils.closest_point_coeff = (function thi$ng$geom$utils$closest_point_coeff(p,a,b){\nvar d = thi.ng.math.core._.cljs$core$IFn$_invoke$arity$2(b,a);\nreturn (thi.ng.math.core.dot.cljs$core$IFn$_invoke$arity$2(thi.ng.math.core._.cljs$core$IFn$_invoke$arity$2(p,a),d) / thi.ng.math.core.mag_squared(d));\n});\nthi.ng.geom.utils.closest_point_on_line = (function thi$ng$geom$utils$closest_point_on_line(p,a,b){\nreturn thi.ng.math.core.mix.cljs$core$IFn$_invoke$arity$3(a,b,thi.ng.geom.utils.closest_point_coeff(p,a,b));\n});\nthi.ng.geom.utils.closest_point_on_segment = (function thi$ng$geom$utils$closest_point_on_segment(p,a,b){\nvar t = thi.ng.geom.utils.closest_point_coeff(p,a,b);\nif((t <= 0.0)){\nreturn a;\n} else {\nif((t >= 1.0)){\nreturn b;\n} else {\nreturn thi.ng.math.core.mix.cljs$core$IFn$_invoke$arity$3(a,b,t);\n}\n}\n});\nthi.ng.geom.utils.closest_point_on_segments = (function thi$ng$geom$utils$closest_point_on_segments(p,segments){\nreturn cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__43936_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(thi.ng.geom.utils.closest_point_on_segment,p,p1__43936_SHARP_);\n})),cljs.core.completing.cljs$core$IFn$_invoke$arity$1((function (a,q){\nvar d_SINGLEQUOTE_ = thi.ng.geom.core.dist_squared(p,q);\nif((d_SINGLEQUOTE_ < (a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1((1)) : a.call(null,(1))))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [q,d_SINGLEQUOTE_], null);\n} else {\nreturn a;\n}\n})),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,thi.ng.math.core.INF_PLUS_], null),segments);\n});\nthi.ng.geom.utils.closest_line_between = (function thi$ng$geom$utils$closest_line_between(a1,b1,a2,b2){\nvar p43 = thi.ng.math.core._.cljs$core$IFn$_invoke$arity$2(b2,a2);\nif(cljs.core.not(thi.ng.geom.vector.V3.thi$ng$math$core$IDeltaEquals$delta_EQ_$arity$3(null,p43,thi.ng.math.core._STAR_eps_STAR_))){\nvar p21 = thi.ng.math.core._.cljs$core$IFn$_invoke$arity$2(b1,a1);\nif(cljs.core.not(thi.ng.geom.vector.V3.thi$ng$math$core$IDeltaEquals$delta_EQ_$arity$3(null,p21,thi.ng.math.core._STAR_eps_STAR_))){\nvar p13 = thi.ng.math.core._.cljs$core$IFn$_invoke$arity$2(a1,a2);\nvar d1343 = thi.ng.math.core.dot.cljs$core$IFn$_invoke$arity$2(p13,p43);\nvar d4321 = thi.ng.math.core.dot.cljs$core$IFn$_invoke$arity$2(p43,p21);\nvar d1321 = thi.ng.math.core.dot.cljs$core$IFn$_invoke$arity$2(p13,p21);\nvar d4343 = thi.ng.math.core.dot.cljs$core$IFn$_invoke$arity$2(p43,p43);\nvar d2121 = thi.ng.math.core.dot.cljs$core$IFn$_invoke$arity$2(p21,p21);\nvar d = ((d2121 * d4343) - (d4321 * d4321));\nif(cljs.core.truth_(thi.ng.math.core.delta_EQ_.cljs$core$IFn$_invoke$arity$3(0.0,d,thi.ng.math.core._STAR_eps_STAR_))){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"parallel\",\"parallel\",-1863607128)], null);\n} else {\nvar n = ((d1343 * d4321) - (d1321 * d4343));\nvar ua = (n / d);\nvar ub = (((d4321 * ua) + d1343) / d4343);\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"intersect\",\"intersect\",-2039792392),new cljs.core.Keyword(null,\"a\",\"a\",-2123407586),thi.ng.math.core.madd(p21,ua,a1),new cljs.core.Keyword(null,\"b\",\"b\",1482224470),thi.ng.math.core.madd(p43,ub,a2),new cljs.core.Keyword(null,\"ua\",\"ua\",834554218),ua,new cljs.core.Keyword(null,\"ub\",\"ub\",-1843904981),ub], null);\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\nthi.ng.geom.utils.dist_STAR_ = (function thi$ng$geom$utils$dist_STAR_(rf){\nreturn (function (c,points){\nvar G__43938 = cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__43937_SHARP_){\nreturn thi.ng.geom.core.dist_squared(c,p1__43937_SHARP_);\n})),rf,(0),points);\nreturn Math.sqrt(G__43938);\n});\n});\nthi.ng.geom.utils.min_dist = thi.ng.geom.utils.dist_STAR_(cljs.core.min);\nthi.ng.geom.utils.max_dist = thi.ng.geom.utils.dist_STAR_(cljs.core.max);\nthi.ng.geom.utils.arc_length_index = (function thi$ng$geom$utils$arc_length_index(points){\nreturn cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__43939_SHARP_){\nreturn thi.ng.geom.core.dist(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(p1__43939_SHARP_,(0)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(p1__43939_SHARP_,(1)));\n})),cljs.core.completing.cljs$core$IFn$_invoke$arity$1((function (a,d){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(a,(cljs.core.peek(a) + d));\n})),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0)], null),cljs.core.partition.cljs$core$IFn$_invoke$arity$3((2),(1),points));\n});\nthi.ng.geom.utils.arc_length = (function thi$ng$geom$utils$arc_length(points){\nreturn thi.ng.dstruct.core.reduce_pairs.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_,thi.ng.geom.core.dist,points);\n});\nthi.ng.geom.utils.centroid = (function thi$ng$geom$utils$centroid(coll){\nvar G__43940 = cljs.core.count(coll);\nswitch (G__43940) {\ncase (0):\nreturn null;\n\nbreak;\ncase (1):\nreturn cljs.core.first(coll);\n\nbreak;\ncase (2):\nreturn thi.ng.math.core.mix.cljs$core$IFn$_invoke$arity$2(cljs.core.first(coll),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,(1)));\n\nbreak;\ndefault:\nvar s = (1.0 / cljs.core.count(coll));\nvar f = ((function (s,G__43940){\nreturn (function (x,_){\nreturn (x * s);\n});})(s,G__43940))\n;\nreturn thi.ng.geom.core.reduce_vector.cljs$core$IFn$_invoke$arity$4(cljs.core.first(coll),cljs.core._PLUS_,f,cljs.core.rest(coll));\n\n}\n});\nthi.ng.geom.utils.center = (function thi$ng$geom$utils$center(var_args){\nvar G__43943 = arguments.length;\nswitch (G__43943) {\ncase 2:\nreturn thi.ng.geom.utils.center.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn thi.ng.geom.utils.center.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.utils.center.cljs$core$IFn$_invoke$arity$2 = (function (c_SINGLEQUOTE_,coll){\nreturn thi.ng.geom.utils.center.cljs$core$IFn$_invoke$arity$3(thi.ng.geom.utils.centroid(coll),c_SINGLEQUOTE_,coll);\n});\n\nthi.ng.geom.utils.center.cljs$core$IFn$_invoke$arity$3 = (function (c,c_SINGLEQUOTE_,coll){\nvar d = thi.ng.math.core._.cljs$core$IFn$_invoke$arity$2(c_SINGLEQUOTE_,c);\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (d){\nreturn (function (p1__43941_SHARP_){\nreturn thi.ng.math.core._PLUS_.cljs$core$IFn$_invoke$arity$2(p1__43941_SHARP_,d);\n});})(d))\n,coll);\n});\n\nthi.ng.geom.utils.center.cljs$lang$maxFixedArity = 3;\n\nthi.ng.geom.utils.scale_size = (function thi$ng$geom$utils$scale_size(var_args){\nvar G__43946 = arguments.length;\nswitch (G__43946) {\ncase 2:\nreturn thi.ng.geom.utils.scale_size.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn thi.ng.geom.utils.scale_size.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.utils.scale_size.cljs$core$IFn$_invoke$arity$2 = (function (s,coll){\nreturn thi.ng.geom.utils.scale_size.cljs$core$IFn$_invoke$arity$3(thi.ng.geom.utils.centroid(coll),s,coll);\n});\n\nthi.ng.geom.utils.scale_size.cljs$core$IFn$_invoke$arity$3 = (function (c,s,coll){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__43944_SHARP_){\nreturn thi.ng.math.core.madd(thi.ng.math.core._.cljs$core$IFn$_invoke$arity$2(p1__43944_SHARP_,c),s,c);\n}),coll);\n});\n\nthi.ng.geom.utils.scale_size.cljs$lang$maxFixedArity = 3;\n\nthi.ng.geom.utils.bounds_STAR_ = (function thi$ng$geom$utils$bounds_STAR_(zero,coll){\nvar c = cljs.core.count(coll);\nif((c > (1))){\nvar vec__43947 = coll;\nvar seq__43948 = cljs.core.seq(vec__43947);\nvar first__43949 = cljs.core.first(seq__43948);\nvar seq__43948__$1 = cljs.core.next(seq__43948);\nvar x = first__43949;\nvar xs = seq__43948__$1;\nvar p = thi.ng.geom.core.reduce_vector.cljs$core$IFn$_invoke$arity$3(x,cljs.core.min,xs);\nvar q = thi.ng.geom.core.reduce_vector.cljs$core$IFn$_invoke$arity$3(x,cljs.core.max,xs);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p,thi.ng.math.core._.cljs$core$IFn$_invoke$arity$2(q,p)], null);\n} else {\nif((c === (1))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(coll),zero], null);\n} else {\nreturn null;\n\n}\n}\n});\nthi.ng.geom.utils.bounding_rect_raw = (function thi$ng$geom$utils$bounding_rect_raw(points){\nreturn thi.ng.geom.utils.bounds_STAR_(thi.ng.geom.vector.V2,points);\n});\nthi.ng.geom.utils.bounding_box_raw = (function thi$ng$geom$utils$bounding_box_raw(points){\nreturn thi.ng.geom.utils.bounds_STAR_(thi.ng.geom.vector.V3,points);\n});\nthi.ng.geom.utils.radial_bounds = (function thi$ng$geom$utils$radial_bounds(ctor,c,r_or_points){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(ctor.cljs$core$IFn$_invoke$arity$1 ? ctor.cljs$core$IFn$_invoke$arity$1(c) : ctor.call(null,c)),((cljs.core.coll_QMARK_(r_or_points))?(thi.ng.geom.utils.max_dist.cljs$core$IFn$_invoke$arity$2 ? thi.ng.geom.utils.max_dist.cljs$core$IFn$_invoke$arity$2(c,r_or_points) : thi.ng.geom.utils.max_dist.call(null,c,r_or_points)):r_or_points)], null);\n});\nthi.ng.geom.utils.axis_bounds = (function thi$ng$geom$utils$axis_bounds(axis,coll){\nvar xs = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__43951_SHARP_){\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(p1__43951_SHARP_,axis);\n}),coll);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(cljs.core.min,xs),cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(cljs.core.max,xs)], null);\n});\nthi.ng.geom.utils.axis_range = (function thi$ng$geom$utils$axis_range(axis,coll){\nreturn (- cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core._,thi.ng.geom.utils.axis_bounds(axis,coll)));\n});\nthi.ng.geom.utils.delta_contains = (function thi$ng$geom$utils$delta_contains(points,p,eps){\nreturn cljs.core.some((function (p1__43952_SHARP_){\nreturn thi.ng.math.core.delta_EQ_.cljs$core$IFn$_invoke$arity$3(p,p1__43952_SHARP_,eps);\n}),points);\n});\nthi.ng.geom.utils.from_barycentric = (function thi$ng$geom$utils$from_barycentric(points,weights){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(thi.ng.math.core._PLUS_,cljs.core.map.cljs$core$IFn$_invoke$arity$3(thi.ng.math.core._STAR_,points,weights));\n});\n/**\n * Takes a seq of points and normalized index (0.0 .. 1.0), returns\n *   interpolated point at position t.\n */\nthi.ng.geom.utils.point_at_index = (function thi$ng$geom$utils$point_at_index(points,t){\nvar n = (cljs.core.count(points) - (1));\nvar t_SINGLEQUOTE_ = (t * n);\nvar ti = (t_SINGLEQUOTE_ | (0));\nif((ti < n)){\nreturn thi.ng.math.core.mix.cljs$core$IFn$_invoke$arity$3(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(points,ti),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(points,(ti + (1))),(t_SINGLEQUOTE_ - ti));\n} else {\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(points,(((ti < (0)))?(0):n));\n}\n});\nthi.ng.geom.utils.point_at_STAR_ = (function thi$ng$geom$utils$point_at_STAR_(points,idx,total,t,i){\nvar ct = (t * total);\nvar i__$1 = ((function (){var i__$1 = i;\nwhile(true){\nif((ct >= (idx.cljs$core$IFn$_invoke$arity$1 ? idx.cljs$core$IFn$_invoke$arity$1(i__$1) : idx.call(null,i__$1)))){\nvar G__44105 = (i__$1 + (1));\ni__$1 = G__44105;\ncontinue;\n} else {\nreturn i__$1;\n}\nbreak;\n}\n})() | (0));\nvar i1 = (i__$1 - (1));\nvar pi = (idx.cljs$core$IFn$_invoke$arity$1 ? idx.cljs$core$IFn$_invoke$arity$1(i1) : idx.call(null,i1));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [thi.ng.math.core.mix.cljs$core$IFn$_invoke$arity$3(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(points,i1),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(points,i__$1),((ct - pi) / ((idx.cljs$core$IFn$_invoke$arity$1 ? idx.cljs$core$IFn$_invoke$arity$1(i__$1) : idx.call(null,i__$1)) - pi))),i__$1], null);\n});\nthi.ng.geom.utils.point_at = (function thi$ng$geom$utils$point_at(var_args){\nvar G__43954 = arguments.length;\nswitch (G__43954) {\ncase 2:\nreturn thi.ng.geom.utils.point_at.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn thi.ng.geom.utils.point_at.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.utils.point_at.cljs$core$IFn$_invoke$arity$2 = (function (t,points){\nreturn thi.ng.geom.utils.point_at.cljs$core$IFn$_invoke$arity$3(t,points,null);\n});\n\nthi.ng.geom.utils.point_at.cljs$core$IFn$_invoke$arity$3 = (function (t,points,idx){\nif(cljs.core.truth_(thi.ng.math.core.in_range_QMARK_.cljs$core$IFn$_invoke$arity$3(0.0,1.0,t))){\nvar n = cljs.core.count(points);\nvar t__$1 = t;\nif(((0) === n)){\nreturn null;\n} else {\nif(((1) === n)){\nreturn cljs.core.first(points);\n} else {\nif((1.0 === t__$1)){\nreturn cljs.core.last(points);\n} else {\nvar idx__$1 = (function (){var or__4131__auto__ = idx;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn thi.ng.geom.utils.arc_length_index(points);\n}\n})();\nreturn cljs.core.first(thi.ng.geom.utils.point_at_STAR_(points,idx__$1,cljs.core.peek(idx__$1),t__$1,(1)));\n\n}\n}\n}\n} else {\nreturn null;\n}\n});\n\nthi.ng.geom.utils.point_at.cljs$lang$maxFixedArity = 3;\n\nthi.ng.geom.utils.sample_uniform_STAR_ = (function thi$ng$geom$utils$sample_uniform_STAR_(udist,include_last_QMARK_,points){\nvar idx = thi.ng.geom.utils.arc_length_index(points);\nvar total = cljs.core.peek(idx);\nvar delta = (udist / total);\nvar samples = (function (){var t = 0.0;\nvar i = (1);\nvar acc = cljs.core.PersistentVector.EMPTY;\nwhile(true){\nif((t < 1.0)){\nvar vec__43959 = thi.ng.geom.utils.point_at_STAR_(points,idx,total,t,i);\nvar p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43959,(0),null);\nvar i__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43959,(1),null);\nvar G__44108 = (t + delta);\nvar G__44109 = (i__$1 | (0));\nvar G__44110 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc,p);\nt = G__44108;\ni = G__44109;\nacc = G__44110;\ncontinue;\n} else {\nreturn acc;\n}\nbreak;\n}\n})();\nif(cljs.core.truth_(include_last_QMARK_)){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(samples,cljs.core.last(points));\n} else {\nreturn samples;\n}\n});\nthi.ng.geom.utils.sample_uniform = (function thi$ng$geom$utils$sample_uniform(udist,include_last_QMARK_,points){\nvar n = cljs.core.count(points);\nif(((0) === n)){\nreturn null;\n} else {\nif(((1) === n)){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(points)], null);\n} else {\nreturn thi.ng.geom.utils.sample_uniform_STAR_(udist,include_last_QMARK_,points);\n\n}\n}\n});\nthi.ng.geom.utils.sample_segment_with_res = (function thi$ng$geom$utils$sample_segment_with_res(a,b,res,include_b_QMARK_){\nvar ls = (function (){var iter__4523__auto__ = (function thi$ng$geom$utils$sample_segment_with_res_$_iter__43966(s__43967){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__43967__$1 = s__43967;\nwhile(true){\nvar temp__5735__auto__ = cljs.core.seq(s__43967__$1);\nif(temp__5735__auto__){\nvar s__43967__$2 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__43967__$2)){\nvar c__4521__auto__ = cljs.core.chunk_first(s__43967__$2);\nvar size__4522__auto__ = cljs.core.count(c__4521__auto__);\nvar b__43970 = cljs.core.chunk_buffer(size__4522__auto__);\nif((function (){var i__43969 = (0);\nwhile(true){\nif((i__43969 < size__4522__auto__)){\nvar t = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4521__auto__,i__43969);\ncljs.core.chunk_append(b__43970,thi.ng.math.core.mix.cljs$core$IFn$_invoke$arity$3(a,b,t));\n\nvar G__44111 = (i__43969 + (1));\ni__43969 = G__44111;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__43970),thi$ng$geom$utils$sample_segment_with_res_$_iter__43966(cljs.core.chunk_rest(s__43967__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__43970),null);\n}\n} else {\nvar t = cljs.core.first(s__43967__$2);\nreturn cljs.core.cons(thi.ng.math.core.mix.cljs$core$IFn$_invoke$arity$3(a,b,t),thi$ng$geom$utils$sample_segment_with_res_$_iter__43966(cljs.core.rest(s__43967__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__4523__auto__(thi.ng.math.core.norm_range(res));\n})();\nif(cljs.core.truth_(include_b_QMARK_)){\nreturn ls;\n} else {\nreturn cljs.core.butlast(ls);\n}\n});\n/**\n * Takes a seq of 4 points in ccw order and 2D vector of normalized UV\n *   coordinates. Applies bilinear interpolation to compute point within\n *   the rect: U is coord along AB/DC edge, V along BC/AD\n */\nthi.ng.geom.utils.map_bilinear = (function thi$ng$geom$utils$map_bilinear(p__43972,p__43973){\nvar vec__43974 = p__43972;\nvar a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43974,(0),null);\nvar b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43974,(1),null);\nvar c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43974,(2),null);\nvar d = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43974,(3),null);\nvar vec__43977 = p__43973;\nvar u = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43977,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43977,(1),null);\nreturn thi.ng.math.core.mix.cljs$core$IFn$_invoke$arity$6(a,b,d,c,u,v);\n});\n/**\n * Takes a seq of 8 points defining a cuboid and vector of normalized\n *   UVW coordinates. Applies trilinear interpolation to compute point\n *   within the cuboid: U is coord along AD/BC edge, V along AE/BF, W\n *   along AB/DC (see above diagram)\n */\nthi.ng.geom.utils.map_trilinear = (function thi$ng$geom$utils$map_trilinear(p__43980,p__43981){\nvar vec__43983 = p__43980;\nvar a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43983,(0),null);\nvar b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43983,(1),null);\nvar c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43983,(2),null);\nvar d = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43983,(3),null);\nvar e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43983,(4),null);\nvar f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43983,(5),null);\nvar g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43983,(6),null);\nvar h = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43983,(7),null);\nvar vec__43986 = p__43981;\nvar u = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43986,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43986,(1),null);\nvar w = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43986,(2),null);\nreturn thi.ng.math.core.mix.cljs$core$IFn$_invoke$arity$3(thi.ng.math.core.mix.cljs$core$IFn$_invoke$arity$6(a,d,e,h,u,v),thi.ng.math.core.mix.cljs$core$IFn$_invoke$arity$6(b,c,f,g,u,v),w);\n});\nthi.ng.geom.utils.tessellate_with_point = (function thi$ng$geom$utils$tessellate_with_point(var_args){\nvar G__43991 = arguments.length;\nswitch (G__43991) {\ncase 1:\nreturn thi.ng.geom.utils.tessellate_with_point.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn thi.ng.geom.utils.tessellate_with_point.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.utils.tessellate_with_point.cljs$core$IFn$_invoke$arity$1 = (function (points){\nreturn thi.ng.geom.utils.tessellate_with_point.cljs$core$IFn$_invoke$arity$2(thi.ng.geom.utils.centroid(points),points);\n});\n\nthi.ng.geom.utils.tessellate_with_point.cljs$core$IFn$_invoke$arity$2 = (function (c,points){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__43989_SHARP_){\nreturn (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[c,cljs.core.first(p1__43989_SHARP_),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(p1__43989_SHARP_,(1))],null));\n}),cljs.core.partition.cljs$core$IFn$_invoke$arity$3((2),(1),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(points,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(points)], null))));\n});\n\nthi.ng.geom.utils.tessellate_with_point.cljs$lang$maxFixedArity = 2;\n\nthi.ng.geom.utils.tessellate_with_first = (function thi$ng$geom$utils$tessellate_with_first(points){\nif((cljs.core.count(points) > (3))){\nvar v0 = cljs.core.first(points);\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (v0){\nreturn (function (p__43993){\nvar vec__43994 = p__43993;\nvar a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43994,(0),null);\nvar b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43994,(1),null);\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [v0,a,b], null);\n});})(v0))\n,cljs.core.partition.cljs$core$IFn$_invoke$arity$3((2),(1),cljs.core.rest(points)));\n} else {\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [points], null);\n}\n});\nthi.ng.geom.utils.tessellate_tri_with_midpoints = (function thi$ng$geom$utils$tessellate_tri_with_midpoints(p__43998){\nvar vec__43999 = p__43998;\nvar a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43999,(0),null);\nvar b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43999,(1),null);\nvar c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__43999,(2),null);\nvar ab = thi.ng.math.core.mix.cljs$core$IFn$_invoke$arity$2(a,b);\nvar bc = thi.ng.math.core.mix.cljs$core$IFn$_invoke$arity$2(b,c);\nvar ca = thi.ng.math.core.mix.cljs$core$IFn$_invoke$arity$2(c,a);\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a,ab,ca], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ab,b,bc], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [bc,c,ca], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ab,bc,ca], null)], null);\n});\nthi.ng.geom.utils.tessellate_3 = (function thi$ng$geom$utils$tessellate_3(points){\nvar pred__44002 = cljs.core._EQ__EQ_;\nvar expr__44003 = cljs.core.count(points);\nif(cljs.core.truth_((pred__44002.cljs$core$IFn$_invoke$arity$2 ? pred__44002.cljs$core$IFn$_invoke$arity$2((3),expr__44003) : pred__44002.call(null,(3),expr__44003)))){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [points], null);\n} else {\nif(cljs.core.truth_((pred__44002.cljs$core$IFn$_invoke$arity$2 ? pred__44002.cljs$core$IFn$_invoke$arity$2((4),expr__44003) : pred__44002.call(null,(4),expr__44003)))){\nvar vec__44005 = points;\nvar a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44005,(0),null);\nvar b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44005,(1),null);\nvar c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44005,(2),null);\nvar d = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44005,(3),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a,b,c], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a,c,d], null)], null);\n} else {\nreturn thi.ng.geom.utils.tessellate_with_point.cljs$core$IFn$_invoke$arity$1(points);\n}\n}\n});\nthi.ng.geom.utils.tessellate_max4 = (function thi$ng$geom$utils$tessellate_max4(points){\nif((cljs.core.count(points) <= (4))){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [points], null);\n} else {\nreturn thi.ng.geom.utils.tessellate_with_point.cljs$core$IFn$_invoke$arity$1(points);\n}\n});\nthi.ng.geom.utils.tessellate_face = (function thi$ng$geom$utils$tessellate_face(tess_fn){\nreturn (function (p__44008){\nvar vec__44009 = p__44008;\nvar verts = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44009,(0),null);\nvar attribs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44009,(1),null);\nvar verts__$1 = (tess_fn.cljs$core$IFn$_invoke$arity$1 ? tess_fn.cljs$core$IFn$_invoke$arity$1(verts) : tess_fn.call(null,verts));\nvar attribs__$1 = cljs.core.reduce_kv(((function (verts__$1,vec__44009,verts,attribs){\nreturn (function (acc,k,v){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(acc,k,(tess_fn.cljs$core$IFn$_invoke$arity$1 ? tess_fn.cljs$core$IFn$_invoke$arity$1(v) : tess_fn.call(null,v)));\n});})(verts__$1,vec__44009,verts,attribs))\n,cljs.core.PersistentArrayMap.EMPTY,attribs);\nreturn cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(((function (verts__$1,attribs__$1,vec__44009,verts,attribs){\nreturn (function (i,verts__$2){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [verts__$2,cljs.core.reduce_kv(((function (verts__$1,attribs__$1,vec__44009,verts,attribs){\nreturn (function (acc,k,v){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(acc,k,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));\n});})(verts__$1,attribs__$1,vec__44009,verts,attribs))\n,cljs.core.PersistentArrayMap.EMPTY,attribs__$1)], null);\n});})(verts__$1,attribs__$1,vec__44009,verts,attribs))\n,verts__$1);\n});\n});\nthi.ng.geom.utils.ortho_normal = (function thi$ng$geom$utils$ortho_normal(var_args){\nvar G__44013 = arguments.length;\nswitch (G__44013) {\ncase 1:\nreturn thi.ng.geom.utils.ortho_normal.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn thi.ng.geom.utils.ortho_normal.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn thi.ng.geom.utils.ortho_normal.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.utils.ortho_normal.cljs$core$IFn$_invoke$arity$1 = (function (p__44015){\nvar vec__44016 = p__44015;\nvar a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44016,(0),null);\nvar b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44016,(1),null);\nvar c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44016,(2),null);\nreturn thi.ng.math.core.normalize.cljs$core$IFn$_invoke$arity$1(thi.ng.math.core.cross(thi.ng.math.core._.cljs$core$IFn$_invoke$arity$2(b,a),thi.ng.math.core._.cljs$core$IFn$_invoke$arity$2(c,a)));\n});\n\nthi.ng.geom.utils.ortho_normal.cljs$core$IFn$_invoke$arity$2 = (function (a,b){\nreturn thi.ng.math.core.normalize.cljs$core$IFn$_invoke$arity$1(thi.ng.math.core.cross(a,b));\n});\n\nthi.ng.geom.utils.ortho_normal.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){\nreturn thi.ng.math.core.normalize.cljs$core$IFn$_invoke$arity$1(thi.ng.math.core.cross(thi.ng.math.core._.cljs$core$IFn$_invoke$arity$2(b,a),thi.ng.math.core._.cljs$core$IFn$_invoke$arity$2(c,a)));\n});\n\nthi.ng.geom.utils.ortho_normal.cljs$lang$maxFixedArity = 3;\n\nthi.ng.geom.utils.norm_sign2 = (function thi$ng$geom$utils$norm_sign2(p__44020,p__44021,p__44022){\nvar vec__44023 = p__44020;\nvar ax = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44023,(0),null);\nvar ay = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44023,(1),null);\nvar vec__44026 = p__44021;\nvar bx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44026,(0),null);\nvar by = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44026,(1),null);\nvar vec__44029 = p__44022;\nvar cx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44029,(0),null);\nvar cy = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44029,(1),null);\nreturn (((bx - ax) * (cy - ay)) - ((cx - ax) * (by - ay)));\n});\nthi.ng.geom.utils.norm_sign3 = (function thi$ng$geom$utils$norm_sign3(a,b,c){\nreturn thi.ng.math.core.mag(thi.ng.math.core.cross(thi.ng.math.core._.cljs$core$IFn$_invoke$arity$2(b,a),thi.ng.math.core._.cljs$core$IFn$_invoke$arity$2(c,a)));\n});\nthi.ng.geom.utils.tri_area2 = (function thi$ng$geom$utils$tri_area2(a,b,c){\nreturn (0.5 * thi.ng.geom.utils.norm_sign2(a,b,c));\n});\nthi.ng.geom.utils.tri_area3 = (function thi$ng$geom$utils$tri_area3(a,b,c){\nreturn (0.5 * thi.ng.geom.utils.norm_sign3(a,b,c));\n});\nthi.ng.geom.utils.clockwise2_QMARK_ = (function thi$ng$geom$utils$clockwise2_QMARK_(a,b,c){\nreturn (thi.ng.geom.utils.norm_sign2(a,b,c) < (0));\n});\nthi.ng.geom.utils.clockwise3_QMARK_ = (function thi$ng$geom$utils$clockwise3_QMARK_(a,b,c,n){\nreturn (thi.ng.math.core.dot.cljs$core$IFn$_invoke$arity$2(thi.ng.math.core.cross(thi.ng.math.core._.cljs$core$IFn$_invoke$arity$2(b,a),thi.ng.math.core._.cljs$core$IFn$_invoke$arity$2(c,a)),n) > (0));\n});\nthi.ng.geom.utils.triangle_barycentric_coords = (function thi$ng$geom$utils$triangle_barycentric_coords(var_args){\nvar G__44034 = arguments.length;\nswitch (G__44034) {\ncase 2:\nreturn thi.ng.geom.utils.triangle_barycentric_coords.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 4:\nreturn thi.ng.geom.utils.triangle_barycentric_coords.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase 6:\nreturn thi.ng.geom.utils.triangle_barycentric_coords.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.utils.triangle_barycentric_coords.cljs$core$IFn$_invoke$arity$2 = (function (p__44035,p){\nvar vec__44036 = p__44035;\nvar a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44036,(0),null);\nvar b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44036,(1),null);\nvar c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44036,(2),null);\nreturn thi.ng.geom.utils.triangle_barycentric_coords.cljs$core$IFn$_invoke$arity$6(a,b,c,p,thi.ng.math.core._.cljs$core$IFn$_invoke$arity$2(b,a),thi.ng.math.core._.cljs$core$IFn$_invoke$arity$2(c,a));\n});\n\nthi.ng.geom.utils.triangle_barycentric_coords.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,p){\nreturn thi.ng.geom.utils.triangle_barycentric_coords.cljs$core$IFn$_invoke$arity$6(a,b,c,p,thi.ng.math.core._.cljs$core$IFn$_invoke$arity$2(b,a),thi.ng.math.core._.cljs$core$IFn$_invoke$arity$2(c,a));\n});\n\nthi.ng.geom.utils.triangle_barycentric_coords.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,p,u,v){\nvar w = thi.ng.math.core._.cljs$core$IFn$_invoke$arity$2(p,a);\nvar uu = thi.ng.math.core.mag_squared(u);\nvar vv = thi.ng.math.core.mag_squared(v);\nvar uv = thi.ng.math.core.dot.cljs$core$IFn$_invoke$arity$2(u,v);\nvar wu = thi.ng.math.core.dot.cljs$core$IFn$_invoke$arity$2(w,u);\nvar wv = thi.ng.math.core.dot.cljs$core$IFn$_invoke$arity$2(w,v);\nvar denom = (1.0 / ((uv * uv) - (uu * vv)));\nvar s = (denom * ((uv * wv) - (vv * wu)));\nvar t = (denom * ((uv * wu) - (uu * wv)));\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1.0 - (s + t)),s,t], null);\n});\n\nthi.ng.geom.utils.triangle_barycentric_coords.cljs$lang$maxFixedArity = 6;\n\nthi.ng.geom.utils.point_in_triangle2_QMARK_ = (function thi$ng$geom$utils$point_in_triangle2_QMARK_(p,a,b,c){\nif(thi.ng.geom.utils.clockwise2_QMARK_(a,b,c)){\nreturn (((thi.ng.geom.utils.norm_sign2(a,c,p) >= 0.0)) && ((thi.ng.geom.utils.norm_sign2(b,a,p) >= 0.0)) && ((thi.ng.geom.utils.norm_sign2(c,b,p) >= 0.0)));\n} else {\nreturn (((thi.ng.geom.utils.norm_sign2(b,c,p) >= 0.0)) && ((thi.ng.geom.utils.norm_sign2(a,b,p) >= 0.0)) && ((thi.ng.geom.utils.norm_sign2(c,a,p) >= 0.0)));\n}\n});\nthi.ng.geom.utils.point_in_triangle3_QMARK_ = (function thi$ng$geom$utils$point_in_triangle3_QMARK_(p,a,b,c){\nvar u = thi.ng.math.core._.cljs$core$IFn$_invoke$arity$2(b,a);\nvar v = thi.ng.math.core._.cljs$core$IFn$_invoke$arity$2(c,a);\nvar n = thi.ng.geom.utils.ortho_normal.cljs$core$IFn$_invoke$arity$2(u,v);\nvar cl = (thi.ng.math.core.dot.cljs$core$IFn$_invoke$arity$2(n,p) - thi.ng.math.core.dot.cljs$core$IFn$_invoke$arity$2(n,a));\nif(cljs.core.truth_(thi.ng.math.core.delta_EQ_.cljs$core$IFn$_invoke$arity$2(0.0,cl))){\nvar vec__44039 = thi.ng.geom.utils.triangle_barycentric_coords.cljs$core$IFn$_invoke$arity$6(a,b,c,p,u,v);\nvar u__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44039,(0),null);\nvar v__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44039,(1),null);\nvar w = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44039,(2),null);\nvar and__4120__auto__ = (u__$1 >= 0.0);\nif(and__4120__auto__){\nvar and__4120__auto____$1 = (w >= 0.0);\nif(and__4120__auto____$1){\nreturn thi.ng.math.core.in_range_QMARK_.cljs$core$IFn$_invoke$arity$3(0.0,1.0,v__$1);\n} else {\nreturn and__4120__auto____$1;\n}\n} else {\nreturn and__4120__auto__;\n}\n} else {\nreturn null;\n}\n});\nthi.ng.geom.utils.tessellating_transducer = (function thi$ng$geom$utils$tessellating_transducer(f){\nreturn cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(thi.ng.geom.utils.tessellate_with_first),cljs.core.map.cljs$core$IFn$_invoke$arity$1(f));\n});\nthi.ng.geom.utils.area_xf = thi.ng.geom.utils.tessellating_transducer((function (p1__44042_SHARP_){\nvar G__44043 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(thi.ng.geom.utils.tri_area3,p1__44042_SHARP_);\nreturn (thi.ng.math.core.abs_STAR_.cljs$core$IFn$_invoke$arity$1 ? thi.ng.math.core.abs_STAR_.cljs$core$IFn$_invoke$arity$1(G__44043) : thi.ng.math.core.abs_STAR_.call(null,G__44043));\n}));\nthi.ng.geom.utils.volume_xf = thi.ng.geom.utils.tessellating_transducer((function (p1__44044_SHARP_){\nreturn thi.ng.math.core.dot.cljs$core$IFn$_invoke$arity$2((p1__44044_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__44044_SHARP_.cljs$core$IFn$_invoke$arity$1((0)) : p1__44044_SHARP_.call(null,(0))),thi.ng.math.core.cross((p1__44044_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__44044_SHARP_.cljs$core$IFn$_invoke$arity$1((1)) : p1__44044_SHARP_.call(null,(1))),(p1__44044_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__44044_SHARP_.cljs$core$IFn$_invoke$arity$1((2)) : p1__44044_SHARP_.call(null,(2)))));\n}));\nthi.ng.geom.utils.total_area_3d = (function thi$ng$geom$utils$total_area_3d(var_args){\nvar G__44046 = arguments.length;\nswitch (G__44046) {\ncase 1:\nreturn thi.ng.geom.utils.total_area_3d.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn thi.ng.geom.utils.total_area_3d.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.utils.total_area_3d.cljs$core$IFn$_invoke$arity$1 = (function (faces){\nreturn cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(thi.ng.geom.utils.area_xf,cljs.core._PLUS_,faces);\n});\n\nthi.ng.geom.utils.total_area_3d.cljs$core$IFn$_invoke$arity$2 = (function (xf,faces){\nreturn cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(xf,thi.ng.geom.utils.area_xf),cljs.core._PLUS_,faces);\n});\n\nthi.ng.geom.utils.total_area_3d.cljs$lang$maxFixedArity = 2;\n\nthi.ng.geom.utils.total_volume = (function thi$ng$geom$utils$total_volume(var_args){\nvar G__44048 = arguments.length;\nswitch (G__44048) {\ncase 1:\nreturn thi.ng.geom.utils.total_volume.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn thi.ng.geom.utils.total_volume.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.utils.total_volume.cljs$core$IFn$_invoke$arity$1 = (function (faces){\nreturn (cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(thi.ng.geom.utils.volume_xf,cljs.core._PLUS_,faces) / 6.0);\n});\n\nthi.ng.geom.utils.total_volume.cljs$core$IFn$_invoke$arity$2 = (function (xf,faces){\nreturn (cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(xf,thi.ng.geom.utils.volume_xf),cljs.core._PLUS_,faces) / 6.0);\n});\n\nthi.ng.geom.utils.total_volume.cljs$lang$maxFixedArity = 2;\n\nthi.ng.geom.utils.bounding_rect = (function thi$ng$geom$utils$bounding_rect(points){\nvar vec__44049 = thi.ng.geom.utils.bounding_rect_raw(points);\nvar p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44049,(0),null);\nvar size = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44049,(1),null);\nif(cljs.core.truth_(p)){\nreturn (new thi.ng.geom.types.Rect2(p,size,null,null,null));\n} else {\nreturn null;\n}\n});\nthi.ng.geom.utils.bounding_box = (function thi$ng$geom$utils$bounding_box(points){\nvar vec__44052 = thi.ng.geom.utils.bounding_box_raw(points);\nvar p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44052,(0),null);\nvar size = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44052,(1),null);\nif(cljs.core.truth_(p)){\nreturn (new thi.ng.geom.types.AABB(p,size,null,null,null));\n} else {\nreturn null;\n}\n});\nthi.ng.geom.utils.bounding_circle = (function thi$ng$geom$utils$bounding_circle(var_args){\nvar G__44056 = arguments.length;\nswitch (G__44056) {\ncase 1:\nreturn thi.ng.geom.utils.bounding_circle.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn thi.ng.geom.utils.bounding_circle.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.utils.bounding_circle.cljs$core$IFn$_invoke$arity$1 = (function (points){\nreturn thi.ng.geom.utils.bounding_circle.cljs$core$IFn$_invoke$arity$2(thi.ng.geom.utils.centroid(points),points);\n});\n\nthi.ng.geom.utils.bounding_circle.cljs$core$IFn$_invoke$arity$2 = (function (c,r_or_points){\nvar vec__44057 = thi.ng.geom.utils.radial_bounds(thi.ng.geom.vector.vec2,c,r_or_points);\nvar c__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44057,(0),null);\nvar r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44057,(1),null);\nreturn (new thi.ng.geom.types.Circle2(c__$1,r,null,null,null));\n});\n\nthi.ng.geom.utils.bounding_circle.cljs$lang$maxFixedArity = 2;\n\nthi.ng.geom.utils.bounding_sphere = (function thi$ng$geom$utils$bounding_sphere(var_args){\nvar G__44062 = arguments.length;\nswitch (G__44062) {\ncase 1:\nreturn thi.ng.geom.utils.bounding_sphere.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn thi.ng.geom.utils.bounding_sphere.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.utils.bounding_sphere.cljs$core$IFn$_invoke$arity$1 = (function (points){\nreturn thi.ng.geom.utils.bounding_sphere.cljs$core$IFn$_invoke$arity$2(thi.ng.geom.utils.centroid(points),points);\n});\n\nthi.ng.geom.utils.bounding_sphere.cljs$core$IFn$_invoke$arity$2 = (function (c,r_or_points){\nvar vec__44063 = thi.ng.geom.utils.radial_bounds(thi.ng.geom.vector.vec3,c,r_or_points);\nvar c__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44063,(0),null);\nvar r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44063,(1),null);\nreturn (new thi.ng.geom.types.Sphere(c__$1,r,null,null,null));\n});\n\nthi.ng.geom.utils.bounding_sphere.cljs$lang$maxFixedArity = 2;\n\n/**\n * Takes a seq of shape entities, calls g/bounds on each and returns\n *   union bounds. Does not support collections of mixed 2d/3d entities.\n */\nthi.ng.geom.utils.coll_bounds = (function thi$ng$geom$utils$coll_bounds(coll){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(thi.ng.math.core.union,cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(thi.ng.geom.core.bounds,coll));\n});\n/**\n * Takes an AABB or rect and seq of shapes, proportionally scales and\n *   repositions all items to fit into given bounds. Returns lazyseq of\n *   transformed entities. Does not support collections of mixed 2D/3D\n *   entities. Use rects as target bounds for 2D colls.\n */\nthi.ng.geom.utils.fit_all_into_bounds = (function thi$ng$geom$utils$fit_all_into_bounds(bounds,coll){\nvar b = thi.ng.geom.utils.coll_bounds(coll);\nvar s = cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(cljs.core.min,thi.ng.math.core.div.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(bounds,new cljs.core.Keyword(null,\"size\",\"size\",1098693007)),cljs.core.get.cljs$core$IFn$_invoke$arity$2(b,new cljs.core.Keyword(null,\"size\",\"size\",1098693007))));\nvar b_SINGLEQUOTE_ = thi.ng.geom.core.center.cljs$core$IFn$_invoke$arity$2(thi.ng.geom.core.scale(b,s),thi.ng.geom.core.centroid(bounds));\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (b,s,b_SINGLEQUOTE_){\nreturn (function (p1__44066_SHARP_){\nreturn thi.ng.geom.core.scale_size(thi.ng.geom.core.center.cljs$core$IFn$_invoke$arity$2(p1__44066_SHARP_,thi.ng.geom.core.unmap_point(b_SINGLEQUOTE_,thi.ng.geom.core.map_point(b,thi.ng.geom.core.centroid(p1__44066_SHARP_)))),s);\n});})(b,s,b_SINGLEQUOTE_))\n,coll);\n});\n/**\n * Takes a target mesh, its add-face fn and a source mesh or face\n *   sequence. Adds faces to target mesh and returns it.\n */\nthi.ng.geom.utils.into_mesh = (function thi$ng$geom$utils$into_mesh(mesh,add_face,mesh_or_faces){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(add_face,mesh,(((((!((mesh_or_faces == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === mesh_or_faces.thi$ng$geom$core$IFaceAccess$))))?true:(((!mesh_or_faces.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(thi.ng.geom.core.IFaceAccess,mesh_or_faces):false)):cljs.core.native_satisfies_QMARK_(thi.ng.geom.core.IFaceAccess,mesh_or_faces)))?thi.ng.geom.core.faces.cljs$core$IFn$_invoke$arity$2(mesh_or_faces,true):mesh_or_faces));\n});\n/**\n * Applies f to all faces of given mesh and adds resulting faces to\n *   new mesh. Thus f should return a seq of raw faces (i.e. each face as\n *   2-elem vector of [verts attribs]. Returns new mesh.\n */\nthi.ng.geom.utils.map_mesh = (function thi$ng$geom$utils$map_mesh(f,mesh){\nreturn thi.ng.geom.core.into(thi.ng.geom.core.clear_STAR_(mesh),cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([thi.ng.geom.core.faces.cljs$core$IFn$_invoke$arity$2(mesh,true)], 0)));\n});\n/**\n * Takes a mesh, its add-face fn and a vertex transformation fn.\n *   Transforms all mesh vertices and returns new mesh.\n */\nthi.ng.geom.utils.transform_mesh = (function thi$ng$geom$utils$transform_mesh(mesh,add_face,tx){\nvar tx__$1 = (((((!((tx == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === tx.thi$ng$geom$core$IVectorTransform$))))?true:(((!tx.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(thi.ng.geom.core.IVectorTransform,tx):false)):cljs.core.native_satisfies_QMARK_(thi.ng.geom.core.IVectorTransform,tx)))?(function (v){\nreturn thi.ng.geom.core.transform_vector(tx,v);\n}):tx);\nvar verts_SINGLEQUOTE_ = cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tx__$1){\nreturn (function (acc,v){\nreturn cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(acc,v,(tx__$1.cljs$core$IFn$_invoke$arity$1 ? tx__$1.cljs$core$IFn$_invoke$arity$1(v) : tx__$1.call(null,v)));\n});})(tx__$1))\n,cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY),thi.ng.geom.core.vertices.cljs$core$IFn$_invoke$arity$1(mesh)));\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tx__$1,verts_SINGLEQUOTE_){\nreturn (function (mesh__$1,p__44069){\nvar vec__44070 = p__44069;\nvar fv = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44070,(0),null);\nvar fa = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__44070,(1),null);\nvar G__44073 = mesh__$1;\nvar G__44074 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(verts_SINGLEQUOTE_,fv),fa], null);\nreturn (add_face.cljs$core$IFn$_invoke$arity$2 ? add_face.cljs$core$IFn$_invoke$arity$2(G__44073,G__44074) : add_face.call(null,G__44073,G__44074));\n});})(tx__$1,verts_SINGLEQUOTE_))\n,thi.ng.geom.core.clear_STAR_(mesh),thi.ng.geom.core.faces.cljs$core$IFn$_invoke$arity$2(mesh,true));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","thi/ng/geom/utils.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",22],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$thi.ng.geom.utils","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$thi.ng.geom.core","^O","~$cljs.core","^P","~$v","~$thi.ng.geom.vector","~$goog","^R","~$thi.ng.math.core","^S","~$m","^S","~$thi.ng.dstruct.core","^T","~$thi.ng.geom.types","^U","^Q","^Q","~$g","^O","~$d","^T"],"~:seen",["^H",["~:require","~:require-macros"]],"~:uses",["^ ","~$Rect2","^U","~$V2","^Q","~$AABB","^U","~$vec3","^Q","~$Sphere","^U","~$Circle2","^U","~$V3","^Q","~$vec2","^Q","~$*eps*","^S"],"^X",["^ ","~$thi.ng.math.macros","^17","~$mm","^17","^P","^P"],"~:form",["~#list",["~$ns","^J",["^1:",["^X",["^17","~:as","^18"]]],["^1:",["^W",["^O","^1<","~$g"],["^Q","^1<","~$v","~:refer",["^15","^11","^[","^14"]],["^U","^1=",["^10","^13","^Z","^12"]],["^T","^1<","~$d"],["^S","^1<","~$m","^1=",["^16"]]]]]],"~:flags",["^ ","^X",["^H",[]],"^W",["^H",[]]],"~:js-deps",["^ "],"~:deps",["^R","^P","^O","^Q","^U","^T","^S"]],"^L","^J","~:resource-id",["~:shadow.build.classpath/resource","thi/ng/geom/utils.cljc"],"~:compiled-at",1569960339850,"~:resource-name","thi/ng/geom/utils.cljc","~:warnings",[],"~:source","(ns thi.ng.geom.utils\n  #?(:cljs\n     (:require-macros\n      [thi.ng.math.macros :as mm]))\n  (:require\n   [thi.ng.geom.core :as g]\n   [thi.ng.geom.vector :as v :refer [vec2 vec3 V2 V3]]\n   #?(:clj [thi.ng.geom.types] :cljs [thi.ng.geom.types :refer [AABB Circle2 Rect2 Sphere]])\n   [thi.ng.dstruct.core :as d]\n   [thi.ng.math.core :as m :refer [*eps*]]\n   #?(:clj [thi.ng.math.macros :as mm]))\n   #?(:clj (:import [thi.ng.geom.types AABB Circle2 Rect2 Sphere])))\n\n(declare tri-area3)\n\n;; Point collection functions\n;; Distance & length\n\n(defn closest-point-coeff\n  [p a b]\n  (let [d (m/- b a)]\n    (/ (m/dot (m/- p a) d) (m/mag-squared d))))\n\n(defn closest-point-on-line\n  [p a b]\n  (m/mix a b (closest-point-coeff p a b)))\n\n(defn closest-point-on-segment\n  [p a b]\n  (let [t (closest-point-coeff p a b)]\n    (if (<= t 0.0) a (if (>= t 1.0) b (m/mix a b t)))))\n\n(defn closest-point-on-segments\n  [p segments]\n  (transduce\n   (map #(apply closest-point-on-segment p %))\n   (completing\n    (fn [a q]\n      (let [d' (g/dist-squared p q)]\n        (if (< d' (a 1)) [q d'] a))))\n   [nil m/INF+]\n   segments))\n\n(defn closest-line-between\n  [a1 b1 a2 b2]\n  (let [p43 (m/- b2 a2)]\n    (if-not (m/delta= V3 p43 *eps*)\n      (let [p21 (m/- b1 a1)]\n        (if-not (m/delta= V3 p21 *eps*)\n          (let [p13   (m/- a1 a2)\n                d1343 (m/dot p13 p43)\n                d4321 (m/dot p43 p21)\n                d1321 (m/dot p13 p21)\n                d4343 (m/dot p43 p43)\n                d2121 (m/dot p21 p21)\n                d     (mm/msub d2121 d4343 d4321 d4321)]\n            (if (m/delta= 0.0 d *eps*)\n              {:type :parallel}\n              (let [n  (mm/msub d1343 d4321 d1321 d4343)\n                    ua (/ n d)\n                    ub (/ (mm/madd d4321 ua d1343) d4343)]\n                {:type :intersect\n                 :a    (m/madd p21 ua a1)\n                 :b    (m/madd p43 ub a2)\n                 :ua   ua\n                 :ub   ub}))))))))\n\n(defn dist*\n  [rf]\n  (fn [c points]\n    (->> points\n         (transduce (map #(g/dist-squared c %)) rf 0)\n         (Math/sqrt))))\n\n(def min-dist (dist* min))\n(def max-dist (dist* max))\n\n(defn arc-length-index\n  [points]\n  (->> points\n       (partition 2 1)\n       (transduce\n        (map #(g/dist (nth % 0) (nth % 1)))\n        (completing (fn [a d] (conj a (+ (peek a) d))))\n        [0])))\n\n(defn arc-length\n  [points]\n  (d/reduce-pairs + g/dist points))\n\n;; Centroid & centering\n\n(defn centroid\n  [coll]\n  (case (count coll)\n    0 nil\n    1 (first coll)\n    2 (m/mix (first coll) (nth coll 1))\n    (let [s (/ 1.0 (count coll))\n          f (fn [x _] (* x s))]\n      (g/reduce-vector (first coll) + f (rest coll)))))\n\n(defn center\n  ([c' coll]\n   (center (centroid coll) c' coll))\n  ([c c' coll]\n   (let [d (m/- c' c)] (mapv #(m/+ % d) coll))))\n\n(defn scale-size\n  ([s coll] (scale-size (centroid coll) s coll))\n  ([c s coll] (mapv #(m/madd (m/- % c) s c) coll)))\n\n;; Bounds\n\n(defn bounds*\n  [zero coll]\n  (let [c (count coll)]\n    (cond\n      (> c 1) (let [[x & xs] coll\n                    p (g/reduce-vector x min xs)\n                    q (g/reduce-vector x max xs)]\n                [p (m/- q p)])\n      (== c 1) [(first coll) zero]\n      :default nil)))\n\n(defn bounding-rect-raw\n  [points]\n  (bounds* V2 points))\n\n(defn bounding-box-raw\n  [points]\n  (bounds* V3 points))\n\n(defn radial-bounds\n  [ctor c r-or-points]\n  [(ctor c)\n   (if (coll? r-or-points)\n     (max-dist c r-or-points)\n     r-or-points)])\n\n(defn axis-bounds\n  [axis coll]\n  (let [xs (mapv #(nth % axis) coll)]\n    [(reduce min xs) (reduce max xs)]))\n\n(defn axis-range\n  [axis coll]\n  (- (apply - (axis-bounds axis coll))))\n\n(defn delta-contains\n  [points p eps]\n  (some #(m/delta= p % eps) points))\n\n;; Sampling\n\n(defn from-barycentric\n  [points weights]\n  (reduce m/+ (map m/* points weights)))\n\n(defn point-at-index\n  \"Takes a seq of points and normalized index (0.0 .. 1.0), returns\n  interpolated point at position t.\"\n  [points t]\n  (let [n  (dec (count points))\n        t' (* t n)\n        ti (int t')]\n    (if (< ti n)\n      (m/mix (nth points ti) (nth points (inc ti)) (- t' ti))\n      (nth points (if (neg? ti) 0 n)))))\n\n(defn point-at*\n  [points idx total t i]\n  (let [ct (* t total)\n        i (int (loop [i i] (if (>= ct (idx i)) (recur (inc i)) i)))\n        i1 (dec i)\n        pi (idx i1)]\n    [(m/mix (nth points i1) (nth points i)\n            (mm/subdiv ct pi (idx i) pi))\n     i]))\n\n(defn point-at\n  ([t points] (point-at t points nil))\n  ([t points idx]\n   (when (m/in-range? 0.0 1.0 t)\n     (let [n (count points)\n           t (double t)]\n       (cond\n         (== 0 n) nil\n         (== 1 n) (first points)\n         (== 1.0 t) (last points)\n         :default\n         (let [idx (or idx (arc-length-index points))]\n           (first (point-at* points idx (peek idx) t 1))))))))\n\n(defn sample-uniform*\n  [udist include-last? points]\n  (let [idx (arc-length-index points)\n        total (peek idx)\n        delta (/ udist total)\n        samples (loop [t 0.0, i 1, acc []]\n                  (if (< t 1.0)\n                    (let [[p i] (point-at* points idx total t i)]\n                      (recur (+ t delta) (int i) (conj acc p)))\n                    acc))]\n    (if include-last?\n      (conj samples (last points))\n      samples)))\n\n(defn sample-uniform\n  [udist include-last? points]\n  (let [n (count points)]\n    (cond\n      (== 0 n) nil\n      (== 1 n) [(first points)]\n      :default (sample-uniform* udist include-last? points))))\n\n(defn sample-segment-with-res\n  [a b res include-b?]\n  (let [ls (for [t (m/norm-range res)] (m/mix a b t))]\n    (if include-b? ls (butlast ls))))\n\n;; Interpolation\n;;\n;; d +----+ c\n;;   |    |\n;;   |    |\n;; a +----+ b\n\n(defn map-bilinear\n  \"Takes a seq of 4 points in ccw order and 2D vector of normalized UV\n  coordinates. Applies bilinear interpolation to compute point within\n  the rect: U is coord along AB/DC edge, V along BC/AD\"\n  [[a b c d] [u v]]\n  (m/mix a b d c u v))\n\n;; e +----+ h\n;;   |\\   :\\\n;;   |f+----+ g\n;;   | |  : |\n;; a +-|--+d|\n;;    \\|   \\|\n;;   b +----+ c\n\n(defn map-trilinear\n  \"Takes a seq of 8 points defining a cuboid and vector of normalized\n  UVW coordinates. Applies trilinear interpolation to compute point\n  within the cuboid: U is coord along AD/BC edge, V along AE/BF, W\n  along AB/DC (see above diagram)\"\n  [[a b c d e f g h] [u v w]]\n  (m/mix (m/mix a d e h u v) (m/mix b c f g u v) w))\n\n;; Tessellation\n\n(defn tessellate-with-point\n  ([points] (tessellate-with-point (centroid points) points))\n  ([c points]\n   (->> [(first points)]\n        (concat points)\n        (partition 2 1)\n        (mapv #(vector c (first %) (nth % 1))))))\n\n(defn tessellate-with-first\n  [points]\n  (if (> (count points) 3)\n    (let [v0 (first points)]\n      (mapv (fn [[a b]] [v0 a b]) (partition 2 1 (rest points))))\n    [points]))\n\n(defn tessellate-tri-with-midpoints\n  [[a b c]]\n  (let [ab (m/mix a b)\n        bc (m/mix b c)\n        ca (m/mix c a)]\n    [[a ab ca] [ab b bc] [bc c ca] [ab bc ca]]))\n\n(defn tessellate-3\n  [points]\n  (condp == (count points)\n    3 [points]\n    4 (let [[a b c d] points] [[a b c] [a c d]])\n    (tessellate-with-point points)))\n\n(defn tessellate-max4\n  [points]\n  (if (<= (count points) 4)\n    [points]\n    (tessellate-with-point points)))\n\n(defn tessellate-face\n  [tess-fn]\n  (fn [[verts attribs]]\n    (let [verts (tess-fn verts)\n          attribs (reduce-kv\n                   (fn [acc k v] (assoc acc k (tess-fn v)))\n                   {} attribs)]\n      (map-indexed\n       (fn [i verts]\n         [verts (reduce-kv (fn [acc k v] (assoc acc k (nth v i))) {} attribs)])\n       verts))))\n\n;; Normals\n\n(defn ortho-normal\n  ([[a b c]] (m/normalize (m/cross (m/- b a) (m/- c a))))\n  ([a b] (m/normalize (m/cross a b)))\n  ([a b c] (m/normalize (m/cross (m/- b a) (m/- c a)))))\n\n;; Triangles\n\n(defn norm-sign2\n  [[ax ay] [bx by] [cx cy]]\n  (- (mm/subm bx ax cy ay) (mm/subm cx ax by ay)))\n\n(defn norm-sign3\n  [a b c] (m/mag (m/cross (m/- b a) (m/- c a))))\n\n(defn tri-area2\n  [a b c] (* 0.5 (norm-sign2 a b c)))\n\n(defn tri-area3\n  [a b c] (* 0.5 (norm-sign3 a b c)))\n\n(defn clockwise2?\n  [a b c] (neg? (norm-sign2 a b c)))\n\n(defn clockwise3?\n  [a b c n] (pos? (m/dot (m/cross (m/- b a) (m/- c a)) n)))\n\n(defn triangle-barycentric-coords\n  ([[a b c] p]\n   (triangle-barycentric-coords a b c p (m/- b a) (m/- c a)))\n  ([a b c p]\n   (triangle-barycentric-coords a b c p (m/- b a) (m/- c a)))\n  ([a b c p u v]\n   (let [w (m/- p a)\n         uu (m/mag-squared u)\n         vv (m/mag-squared v)\n         uv (m/dot u v)\n         wu (m/dot w u)\n         wv (m/dot w v)\n         denom (/ 1.0 (mm/msub uv uv uu vv))\n         s (* denom (mm/msub uv wv vv wu))\n         t (* denom (mm/msub uv wu uu wv))]\n     [(- 1.0 (+ s t)) s t])))\n\n(defn point-in-triangle2?\n  [p a b c]\n  (if (clockwise2? a b c)\n    (and (>= (norm-sign2 a c p) 0.0)\n         (>= (norm-sign2 b a p) 0.0)\n         (>= (norm-sign2 c b p) 0.0))\n    (and (>= (norm-sign2 b c p) 0.0)\n         (>= (norm-sign2 a b p) 0.0)\n         (>= (norm-sign2 c a p) 0.0))))\n\n(defn point-in-triangle3?\n  [p a b c]\n  (let [u (m/- b a)\n        v (m/- c a)\n        n (ortho-normal u v)\n        cl (- (m/dot n p) (m/dot n a))]\n    (if (m/delta= 0.0 cl)\n      (let [[u v w] (triangle-barycentric-coords a b c p u v)]\n        (and (>= u 0.0) (>= w 0.0) (m/in-range? 0.0 1.0 v))))))\n\n;; Area & volume\n;; Volume calculation is using signed volume implementation of Triangle3\n\n(defn- tessellating-transducer\n  [f]\n  (comp\n   (mapcat tessellate-with-first)\n   (map f)))\n\n(def ^:private area-xf\n  (tessellating-transducer #(->> % (apply tri-area3) m/abs*)))\n\n(def ^:private volume-xf\n  (tessellating-transducer #(m/dot (% 0) (m/cross (% 1) (% 2)))))\n\n(defn total-area-3d\n  ([faces] (transduce area-xf + faces))\n  ([xf faces] (transduce (comp xf area-xf) + faces)))\n\n(defn total-volume\n  ([faces] (/ (transduce volume-xf + faces) 6.0))\n  ([xf faces] (/ (transduce (comp xf volume-xf) + faces) 6.0)))\n\n;; Bounds (w/ types)\n\n(defn bounding-rect\n  [points]\n  (let [[p size] (bounding-rect-raw points)]\n    (if p (Rect2. p size))))\n\n(defn bounding-box\n  [points]\n  (let [[p size] (bounding-box-raw points)]\n    (if p (AABB. p size))))\n\n(defn bounding-circle\n  ([points]\n   (bounding-circle (centroid points) points))\n  ([c r-or-points]\n   (let [[c r] (radial-bounds vec2 c r-or-points)]\n     (Circle2. c r))))\n\n(defn bounding-sphere\n  ([points]\n   (bounding-sphere (centroid points) points))\n  ([c r-or-points]\n   (let [[c r] (radial-bounds vec3 c r-or-points)]\n     (Sphere. c r))))\n\n(defn coll-bounds\n  \"Takes a seq of shape entities, calls g/bounds on each and returns\n  union bounds. Does not support collections of mixed 2d/3d entities.\"\n  [coll]\n  (reduce m/union (mapv g/bounds coll)))\n\n(defn fit-all-into-bounds\n  \"Takes an AABB or rect and seq of shapes, proportionally scales and\n  repositions all items to fit into given bounds. Returns lazyseq of\n  transformed entities. Does not support collections of mixed 2D/3D\n  entities. Use rects as target bounds for 2D colls.\"\n  [bounds coll]\n  (let [b (coll-bounds coll)\n        s (reduce min (m/div (get bounds :size) (get b :size)))\n        b' (g/center (g/scale b s) (g/centroid bounds))]\n    (map\n     #(-> %\n          (g/center (g/unmap-point b' (g/map-point b (g/centroid %))))\n          (g/scale-size s))\n     coll)))\n\n;; Meshes\n\n(defn into-mesh\n  \"Takes a target mesh, its add-face fn and a source mesh or face\n  sequence. Adds faces to target mesh and returns it.\"\n  [mesh add-face mesh-or-faces]\n  (reduce\n   add-face\n   mesh\n   (if (satisfies? g/IFaceAccess mesh-or-faces)\n     (g/faces mesh-or-faces true)\n     mesh-or-faces)))\n\n(defn map-mesh\n  \"Applies f to all faces of given mesh and adds resulting faces to\n  new mesh. Thus f should return a seq of raw faces (i.e. each face as\n  2-elem vector of [verts attribs]. Returns new mesh.\"\n  [f mesh] (g/into (g/clear* mesh) (mapcat f (g/faces mesh true))))\n\n;; TODO how to use this w/ IndexedMesh? Faces only store vertex IDs\n(defn transform-mesh\n  \"Takes a mesh, its add-face fn and a vertex transformation fn.\n  Transforms all mesh vertices and returns new mesh.\"\n  [mesh add-face tx]\n  (let [tx     (if (satisfies? g/IVectorTransform tx)\n                 (fn [v] (g/transform-vector tx v))\n                 tx)\n        verts' (->> (g/vertices mesh)\n                    (reduce\n                     (fn [acc v] (assoc! acc v (tx v)))\n                     (transient (hash-map)))\n                    (persistent!))]\n    (reduce\n     (fn [mesh [fv fa]] (add-face mesh [(mapv verts' fv) fa]))\n     (g/clear* mesh) (g/faces mesh true))))\n","~:reader-features",["^H",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["thi.ng.geom.utils/closest-point-coeff","p","a","b","d","thi.ng.math.core._.cljs$core$IFn$_invoke$arity$2","thi.ng.math.core.dot.cljs$core$IFn$_invoke$arity$2","thi.ng.math.core/mag-squared","thi.ng.geom.utils/closest-point-on-line","thi.ng.math.core.mix.cljs$core$IFn$_invoke$arity$3","thi.ng.geom.utils/closest-point-on-segment","t","thi.ng.geom.utils/closest-point-on-segments","segments","cljs.core.transduce.cljs$core$IFn$_invoke$arity$4","p1__43936#","cljs.core.map.cljs$core$IFn$_invoke$arity$1","cljs.core.apply.cljs$core$IFn$_invoke$arity$3","cljs.core.completing.cljs$core$IFn$_invoke$arity$1","q","d'","thi.ng.geom.core/dist-squared","thi.ng.math.core/INF+","thi.ng.geom.utils/closest-line-between","a1","b1","a2","b2","p43","cljs.core/not","thi.ng.geom.vector/V3","thi.ng.math.core/*eps*","p21","p13","d1343","d4321","d1321","d4343","d2121","thi.ng.math.core.delta_EQ_.cljs$core$IFn$_invoke$arity$3","n","ua","ub","thi.ng.math.core/madd","thi.ng.geom.utils/dist*","rf","c","points","p1__43937#","G__43938","Math/sqrt","thi.ng.geom.utils/min-dist","cljs.core/min","thi.ng.geom.utils/max-dist","cljs.core/max","thi.ng.geom.utils/arc-length-index","cljs.core.partition.cljs$core$IFn$_invoke$arity$3","p1__43939#","thi.ng.geom.core/dist","cljs.core.nth.cljs$core$IFn$_invoke$arity$2","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","cljs.core/peek","thi.ng.geom.utils/arc-length","thi.ng.dstruct.core.reduce_pairs.cljs$core$IFn$_invoke$arity$3","cljs.core/+","thi.ng.geom.utils/centroid","coll","G__43940","cljs.core/count","cljs.core/first","thi.ng.math.core.mix.cljs$core$IFn$_invoke$arity$2","s","f","x","_","thi.ng.geom.core.reduce_vector.cljs$core$IFn$_invoke$arity$4","cljs.core/rest","var_args","G__43943","thi.ng.geom.utils/center","js/Error","c'","thi.ng.geom.utils.center.cljs$core$IFn$_invoke$arity$3","p1__43941#","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2","thi.ng.math.core._PLUS_.cljs$core$IFn$_invoke$arity$2","G__43946","thi.ng.geom.utils/scale-size","thi.ng.geom.utils.scale_size.cljs$core$IFn$_invoke$arity$3","p1__43944#","thi.ng.geom.utils/bounds*","zero","vec__43947","seq__43948","cljs.core/seq","first__43949","cljs.core/next","xs","thi.ng.geom.core.reduce_vector.cljs$core$IFn$_invoke$arity$3","thi.ng.geom.utils/bounding-rect-raw","thi.ng.geom.vector/V2","thi.ng.geom.utils/bounding-box-raw","thi.ng.geom.utils/radial-bounds","ctor","r-or-points","cljs.core/coll?","thi.ng.geom.utils/axis-bounds","axis","p1__43951#","cljs.core.reduce.cljs$core$IFn$_invoke$arity$2","thi.ng.geom.utils/axis-range","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/-","thi.ng.geom.utils/delta-contains","eps","p1__43952#","cljs.core/some","thi.ng.geom.utils/from-barycentric","weights","thi.ng.math.core/+","cljs.core.map.cljs$core$IFn$_invoke$arity$3","thi.ng.math.core/*","thi.ng.geom.utils/point-at-index","t'","ti","thi.ng.geom.utils/point-at*","idx","total","i","ct","i1","pi","G__43954","thi.ng.geom.utils/point-at","thi.ng.geom.utils.point_at.cljs$core$IFn$_invoke$arity$3","thi.ng.math.core.in_range_QMARK_.cljs$core$IFn$_invoke$arity$3","cljs.core/last","or__4131__auto__","thi.ng.geom.utils/sample-uniform*","udist","include-last?","delta","samples","acc","vec__43959","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","thi.ng.geom.utils/sample-uniform","thi.ng.geom.utils/sample-segment-with-res","res","include-b?","ls","iter__4523__auto__","s__43967","cljs.core/LazySeq","temp__5735__auto__","cljs.core/chunked-seq?","c__4521__auto__","size__4522__auto__","b__43970","cljs.core/chunk-buffer","i__43969","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__43966","cljs.core/chunk-rest","cljs.core/cons","thi.ng.math.core/norm-range","cljs.core/butlast","p__43972","p__43973","vec__43974","vec__43977","thi.ng.geom.utils/map-bilinear","u","v","thi.ng.math.core.mix.cljs$core$IFn$_invoke$arity$6","p__43980","p__43981","vec__43983","vec__43986","thi.ng.geom.utils/map-trilinear","e","g","h","w","G__43991","thi.ng.geom.utils/tessellate-with-point","thi.ng.geom.utils.tessellate_with_point.cljs$core$IFn$_invoke$arity$2","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","p1__43989#","cljs.core/PersistentVector","thi.ng.geom.utils/tessellate-with-first","v0","p__43993","vec__43994","p__43998","vec__43999","thi.ng.geom.utils/tessellate-tri-with-midpoints","ab","bc","ca","thi.ng.geom.utils/tessellate-3","pred__44002","expr__44003","cljs.core/==","vec__44005","thi.ng.geom.utils.tessellate_with_point.cljs$core$IFn$_invoke$arity$1","thi.ng.geom.utils/tessellate-max4","thi.ng.geom.utils/tessellate-face","tess-fn","p__44008","vec__44009","verts","attribs","cljs.core/reduce-kv","k","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2","G__44013","thi.ng.geom.utils/ortho-normal","p__44015","vec__44016","thi.ng.math.core.normalize.cljs$core$IFn$_invoke$arity$1","thi.ng.math.core/cross","p__44020","p__44021","p__44022","vec__44023","vec__44026","vec__44029","thi.ng.geom.utils/norm-sign2","ax","ay","bx","by","cx","cy","thi.ng.geom.utils/norm-sign3","thi.ng.math.core/mag","thi.ng.geom.utils/tri-area2","thi.ng.geom.utils/tri-area3","thi.ng.geom.utils/clockwise2?","thi.ng.geom.utils/clockwise3?","G__44034","thi.ng.geom.utils/triangle-barycentric-coords","p__44035","vec__44036","thi.ng.geom.utils.triangle_barycentric_coords.cljs$core$IFn$_invoke$arity$6","uu","vv","uv","wu","wv","denom","thi.ng.geom.utils/point-in-triangle2?","thi.ng.geom.utils/point-in-triangle3?","thi.ng.geom.utils.ortho_normal.cljs$core$IFn$_invoke$arity$2","cl","thi.ng.math.core.delta_EQ_.cljs$core$IFn$_invoke$arity$2","vec__44039","and__4120__auto__","thi.ng.geom.utils/tessellating-transducer","cljs.core.comp.cljs$core$IFn$_invoke$arity$2","cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1","thi.ng.geom.utils/area-xf","p1__44042#","G__44043","thi.ng.math.core/abs*","thi.ng.geom.utils/volume-xf","p1__44044#","G__44046","thi.ng.geom.utils/total-area-3d","faces","cljs.core.transduce.cljs$core$IFn$_invoke$arity$3","xf","G__44048","thi.ng.geom.utils/total-volume","thi.ng.geom.utils/bounding-rect","vec__44049","size","thi.ng.geom.types/Rect2","thi.ng.geom.utils/bounding-box","vec__44052","thi.ng.geom.types/AABB","G__44056","thi.ng.geom.utils/bounding-circle","thi.ng.geom.utils.bounding_circle.cljs$core$IFn$_invoke$arity$2","vec__44057","r","thi.ng.geom.vector/vec2","thi.ng.geom.types/Circle2","G__44062","thi.ng.geom.utils/bounding-sphere","thi.ng.geom.utils.bounding_sphere.cljs$core$IFn$_invoke$arity$2","vec__44063","thi.ng.geom.vector/vec3","thi.ng.geom.types/Sphere","thi.ng.geom.utils/coll-bounds","thi.ng.math.core/union","thi.ng.geom.core/bounds","thi.ng.geom.utils/fit-all-into-bounds","bounds","thi.ng.math.core.div.cljs$core$IFn$_invoke$arity$2","cljs.core.get.cljs$core$IFn$_invoke$arity$2","b'","thi.ng.geom.core.center.cljs$core$IFn$_invoke$arity$2","thi.ng.geom.core/scale","thi.ng.geom.core/centroid","p1__44066#","cljs.core.map.cljs$core$IFn$_invoke$arity$2","thi.ng.geom.core/unmap-point","thi.ng.geom.core/map-point","thi.ng.geom.core/scale-size","thi.ng.geom.utils/into-mesh","mesh","add-face","mesh-or-faces","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","cljs.core/PROTOCOL_SENTINEL","cljs.core/native-satisfies?","thi.ng.geom.core/IFaceAccess","thi.ng.geom.core.faces.cljs$core$IFn$_invoke$arity$2","thi.ng.geom.utils/map-mesh","thi.ng.geom.core/into","thi.ng.geom.core/clear*","cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic","thi.ng.geom.utils/transform-mesh","tx","thi.ng.geom.core/IVectorTransform","thi.ng.geom.core/transform-vector","verts'","thi.ng.geom.core.vertices.cljs$core$IFn$_invoke$arity$1","cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3","cljs.core/transient","cljs.core/PersistentHashMap","cljs.core/persistent!","p__44069","vec__44070","fv","fa","G__44073","G__44074","cljs.core/chunk-first"]]],"~:cache-keys",["~#cmap",[["^1B","thi/ng/xerror/core.cljc"],[1569959626590,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^H",[]],"~:deps-syms",["^R","^P"]]],["^1B","goog/math/math.js"],[1559507890775,"^1O",["^ ","^1P",null,"^1Q",["^H",[]],"^1R",["^R","~$goog.array","~$goog.asserts"]]],["^1B","goog/array/array.js"],[1559507890775,"^1O",["^ ","^1P",null,"^1Q",["^H",[]],"^1R",["^R","^1T"]]],["^1B","goog/debug/error.js"],[1559507890775,"^1O",["^ ","^1P",null,"^1Q",["^H",[]],"^1R",["^R"]]],["^1B","goog/dom/nodetype.js"],[1559507890775,"^1O",["^ ","^1P",null,"^1Q",["^H",[]],"^1R",["^R"]]],["^1B","thi/ng/math/core.cljc"],[1569959625673,"^1O",["^ ","^1P",null,"^1Q",["^H",[]],"^1R",["^R","^P"]]],["^1B","goog/object/object.js"],[1559507890775,"^1O",["^ ","^1P",null,"^1Q",["^H",[]],"^1R",["^R"]]],"~:SHADOW-TIMESTAMP",[1569627608000,1556316222000],["^1B","goog/math/long.js"],[1559507890775,"^1O",["^ ","^1P",null,"^1Q",["^H",[]],"^1R",["^R","^1T","~$goog.reflect"]]],["^1B","goog/string/internal.js"],[1559507890775,"^1O",["^ ","^1P",null,"^1Q",["^H",[]],"^1R",["^R"]]],["^1B","goog/functions/functions.js"],[1559507890775,"^1O",["^ ","^1P",null,"^1Q",["^H",[]],"^1R",["^R"]]],["^1B","goog/structs/map.js"],[1559507890775,"^1O",["^ ","^1P",null,"^1Q",["^H",[]],"^1R",["^R","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1B","goog/asserts/asserts.js"],[1559507890775,"^1O",["^ ","^1P",null,"^1Q",["^H",[]],"^1R",["^R","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1B","goog/uri/uri.js"],[1559507890775,"^1O",["^ ","^1P",null,"^1Q",["^H",[]],"^1R",["^R","^1S","^1T","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1B","thi/ng/geom/vector.cljc"],[1569959626067,"^1O",["^ ","^1P",null,"^1Q",["^H",[]],"^1R",["^R","^P","^O","^S","~$thi.ng.dstruct.streams","~$thi.ng.xerror.core"]]],["^1B","thi/ng/dstruct/core.cljc"],[1569959625696,"^1O",["^ ","^1P",null,"^1Q",["^H",[]],"^1R",["^R","^P"]]],["^1B","thi/ng/geom/utils.cljc"],[1569959626067,"^1O",["^ ","^1P",null,"^1Q",["^H",[]],"^1R",["^R","^P","^O","^Q","^U","^T","^S"]]],["^1B","thi/ng/geom/core.cljc"],[1569959626067,"^1O",["^ ","^1P",null,"^1Q",["^H",[]],"^1R",["^R","^P"]]],["^1B","goog/base.js"],[1559507890775,"^1O",["^ ","^1P",null,"^1Q",["^H",[]],"^1R",[]]],["^1B","goog/structs/structs.js"],[1559507890775,"^1O",["^ ","^1P",null,"^1Q",["^H",[]],"^1R",["^R","^1S","~$goog.object"]]],["^1B","thi/ng/dstruct/streams.cljc"],[1569959625696,"^1O",["^ ","^1P",null,"^1Q",["^H",[]],"^1R",["^R","^P","^26"]]],["^1B","goog/string/string.js"],[1559507890775,"^1O",["^ ","^1P",null,"^1Q",["^H",[]],"^1R",["^R","~$goog.string.internal"]]],["^1B","goog/reflect/reflect.js"],[1559507890775,"^1O",["^ ","^1P",null,"^1Q",["^H",[]],"^1R",["^R"]]],["^1B","goog/string/stringbuffer.js"],[1559507890775,"^1O",["^ ","^1P",null,"^1Q",["^H",[]],"^1R",["^R"]]],["^1B","goog/iter/iter.js"],[1559507890775,"^1O",["^ ","^1P",null,"^1Q",["^H",[]],"^1R",["^R","^1S","^1T","~$goog.functions","~$goog.math"]]],["^1B","thi/ng/geom/types.cljc"],[1569959626067,"^1O",["^ ","^1P",null,"^1Q",["^H",[]],"^1R",["^R","^P","^Q"]]],["^1B","cljs/core.cljs"],[1556316222100,"^1O",["^ ","^1P",null,"^1Q",["^H",[]],"^1R",["~$goog.math.Long","~$goog.math.Integer","^1[","^27","^1S","~$goog.Uri","~$goog.string.StringBuffer"]]],["^1B","goog/math/integer.js"],[1559507890775,"^1O",["^ ","^1P",null,"^1Q",["^H",[]],"^1R",["^R"]]],["^1B","goog/uri/utils.js"],[1559507890775,"^1O",["^ ","^1P",null,"^1Q",["^H",[]],"^1R",["^R","^1S","^1T","^1["]]]]],"~:clj-info",["^ ","jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/default_data_readers.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/thi/ng/dstruct/0.2.1/dstruct-0.2.1.jar!/thi/ng/dstruct/core.cljc",1569959625000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/thi/ng/geom/1.0.0-RC3/geom-1.0.0-RC3.jar!/thi/ng/geom/macros/vector.clj",1569959626000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/inspect.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/reader_types.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/thi/ng/math/0.2.1/math-0.2.1.jar!/thi/ng/math/macros.clj",1569959625000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/errors.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/thi/ng/xerror/0.1.0/xerror-0.1.0.jar!/thi/ng/xerror/core.cljc",1569959626000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1556312825000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1556316222000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",1,"^8",5,"^9",1,"^:",22],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",null,"^G",["^H",[]],"^I","^J","^M",null,"^N",["^ ","^O","^O","^P","^P","~$v","^Q","^R","^R","^S","^S","~$m","^S","^T","^T","^U","^U","^Q","^Q","~$g","^O","~$d","^T"],"^V",["^H",["^W","^X"]],"~:shadow/js-access-global",["^H",["Error"]],"^Y",["^ ","^Z","^U","^[","^Q","^10","^U","^11","^Q","^12","^U","^13","^U","^14","^Q","^15","^Q","^16","^S"],"~:defs",["^ ","~$sample-uniform*",["^ ","~:protocol-inline",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",195,"^8",7,"^9",195,"^:",22,"~:arglists",["^1:",["~$quote",["^1:",[["~$udist","~$include-last?","~$points"]]]]]],"^I","~$thi.ng.geom.utils/sample-uniform*","^6","thi/ng/geom/utils.cljc","^:",22,"~:method-params",["^1:",[["^37","^38","^39"]]],"~:protocol-impl",null,"~:arglists-meta",["^1:",[null,null]],"^8",1,"~:variadic?",false,"^7",195,"~:ret-tag",["^H",["~$clj","~$cljs.core/IVector"]],"^9",195,"~:max-fixed-arity",3,"~:fn-var",true,"^35",["^1:",["^36",["^1:",[["^37","^38","^39"]]]]]],"~$from-barycentric",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",156,"^8",7,"^9",156,"^:",23,"^35",["^1:",["^36",["^1:",[["^39","~$weights"]]]]]],"^I","~$thi.ng.geom.utils/from-barycentric","^6","thi/ng/geom/utils.cljc","^:",23,"^3;",["^1:",[["^39","^3E"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",156,"^3?","~$any","^9",156,"^3B",2,"^3C",true,"^35",["^1:",["^36",["^1:",[["^39","^3E"]]]]]],"~$tessellate-with-first",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",262,"^8",7,"^9",262,"^:",28,"^35",["^1:",["^36",["^1:",[["^39"]]]]]],"^I","~$thi.ng.geom.utils/tessellate-with-first","^6","thi/ng/geom/utils.cljc","^:",28,"^3;",["^1:",[["^39"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",262,"^3?","^3@","^9",262,"^3B",1,"^3C",true,"^35",["^1:",["^36",["^1:",[["^39"]]]]]],"~$clockwise2?",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",323,"^8",7,"^9",323,"^:",18,"^35",["^1:",["^36",["^1:",[["~$a","~$b","~$c"]]]]]],"^I","~$thi.ng.geom.utils/clockwise2?","^6","thi/ng/geom/utils.cljc","^:",18,"^3;",["^1:",[["~$a","~$b","~$c"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",323,"^3?","~$boolean","^9",323,"^3B",3,"^3C",true,"^35",["^1:",["^36",["^1:",[["~$a","~$b","~$c"]]]]]],"~$bounds*",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",115,"^8",7,"^9",115,"^:",14,"^35",["^1:",["^36",["^1:",[["~$zero","~$coll"]]]]]],"^I","~$thi.ng.geom.utils/bounds*","^6","thi/ng/geom/utils.cljc","^:",14,"^3;",["^1:",[["^3N","^3O"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",115,"^3?",["^H",["^3A","~$clj-nil"]],"^9",115,"^3B",2,"^3C",true,"^35",["^1:",["^36",["^1:",[["^3N","^3O"]]]]]],"~$map-trilinear",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",244,"^8",7,"^9",244,"^:",20,"^35",["^1:",["^36",["^1:",[[["~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h"],["~$u","~$v","~$w"]]]]]],"~:doc","Takes a seq of 8 points defining a cuboid and vector of normalized\n  UVW coordinates. Applies trilinear interpolation to compute point\n  within the cuboid: U is coord along AD/BC edge, V along AE/BF, W\n  along AB/DC (see above diagram)"],"^I","~$thi.ng.geom.utils/map-trilinear","^6","thi/ng/geom/utils.cljc","^:",20,"^3;",["^1:",[["~$p__43980","~$p__43981"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",244,"^3?","^3G","^9",244,"^3B",2,"^3C",true,"^35",["^1:",["^36",["^1:",[[["~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h"],["~$u","~$v","~$w"]]]]]],"^3S","Takes a seq of 8 points defining a cuboid and vector of normalized\n  UVW coordinates. Applies trilinear interpolation to compute point\n  within the cuboid: U is coord along AD/BC edge, V along AE/BF, W\n  along AB/DC (see above diagram)"],"~$area-xf",["^ ","^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",375,"^8",16,"^9",375,"^:",23,"~:private",true],"^3X",true,"^I","~$thi.ng.geom.utils/area-xf","^6","thi/ng/geom/utils.cljc","^:",23,"^8",1,"^7",375,"^9",375,"~:tag","~$function"],"~$arc-length",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",87,"^8",7,"^9",87,"^:",17,"^35",["^1:",["^36",["^1:",[["^39"]]]]]],"^I","~$thi.ng.geom.utils/arc-length","^6","thi/ng/geom/utils.cljc","^:",17,"^3;",["^1:",[["^39"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",87,"^3?","^3G","^9",87,"^3B",1,"^3C",true,"^35",["^1:",["^36",["^1:",[["^39"]]]]]],"~$norm-sign2",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",310,"^8",7,"^9",310,"^:",17,"^35",["^1:",["^36",["^1:",[[["~$ax","~$ay"],["~$bx","~$by"],["~$cx","~$cy"]]]]]]],"^I","~$thi.ng.geom.utils/norm-sign2","^6","thi/ng/geom/utils.cljc","^:",17,"^3;",["^1:",[["~$p__44020","~$p__44021","~$p__44022"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",310,"^3?","~$number","^9",310,"^3B",3,"^3C",true,"^35",["^1:",["^36",["^1:",[[["^43","^44"],["^45","^46"],["^47","^48"]]]]]]],"~$scale-size",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",109,"^8",7,"^9",109,"^:",17,"^35",["^1:",["^36",["^1:",[["~$s","^3O"],["~$c","~$s","^3O"]]]]],"~:top-fn",["^ ","^3>",false,"~:fixed-arity",3,"^3B",3,"^3;",["^1:",[["~$s","^3O"],["~$c","~$s","^3O"]]],"^35",["^1:",[["~$s","^3O"],["~$c","~$s","^3O"]]],"^3=",["^1:",[null,null]]]],"^I","~$thi.ng.geom.utils/scale-size","^6","thi/ng/geom/utils.cljc","^:",17,"^4?",["^ ","^3>",false,"^4@",3,"^3B",3,"^3;",["^1:",[["~$s","^3O"],["~$c","~$s","^3O"]]],"^35",["^1:",[["~$s","^3O"],["~$c","~$s","^3O"]]],"^3=",["^1:",[null,null]]],"^3;",["^1:",[["~$s","^3O"],["~$c","~$s","^3O"]]],"^3<",null,"^4@",3,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"~:methods",[["^ ","^4@",2,"^3>",false,"^3Z","^3G"],["^ ","^4@",3,"^3>",false,"^3Z","^3@"]],"^7",109,"^9",109,"^3B",3,"^3C",true,"^35",["^1:",[["~$s","^3O"],["~$c","~$s","^3O"]]]],"~$coll-bounds",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",415,"^8",7,"^9",415,"^:",18,"^35",["^1:",["^36",["^1:",[["^3O"]]]]],"^3S","Takes a seq of shape entities, calls g/bounds on each and returns\n  union bounds. Does not support collections of mixed 2d/3d entities."],"^I","~$thi.ng.geom.utils/coll-bounds","^6","thi/ng/geom/utils.cljc","^:",18,"^3;",["^1:",[["^3O"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",415,"^3?","^3G","^9",415,"^3B",1,"^3C",true,"^35",["^1:",["^36",["^1:",[["^3O"]]]]],"^3S","Takes a seq of shape entities, calls g/bounds on each and returns\n  union bounds. Does not support collections of mixed 2d/3d entities."],"~$min-dist",["^ ","^I","~$thi.ng.geom.utils/min-dist","^6","thi/ng/geom/utils.cljc","^7",75,"^8",1,"^9",75,"^:",14,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",75,"^8",6,"^9",75,"^:",14],"^3Z","^3["],"~$point-in-triangle2?",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",346,"^8",7,"^9",346,"^:",26,"^35",["^1:",["^36",["^1:",[["~$p","~$a","~$b","~$c"]]]]]],"^I","~$thi.ng.geom.utils/point-in-triangle2?","^6","thi/ng/geom/utils.cljc","^:",26,"^3;",["^1:",[["~$p","~$a","~$b","~$c"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",346,"^3?","^3L","^9",346,"^3B",4,"^3C",true,"^35",["^1:",["^36",["^1:",[["~$p","~$a","~$b","~$c"]]]]]],"~$map-bilinear",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",229,"^8",7,"^9",229,"^:",19,"^35",["^1:",["^36",["^1:",[[["~$a","~$b","~$c","~$d"],["~$u","~$v"]]]]]],"^3S","Takes a seq of 4 points in ccw order and 2D vector of normalized UV\n  coordinates. Applies bilinear interpolation to compute point within\n  the rect: U is coord along AB/DC edge, V along BC/AD"],"^I","~$thi.ng.geom.utils/map-bilinear","^6","thi/ng/geom/utils.cljc","^:",19,"^3;",["^1:",[["~$p__43972","~$p__43973"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",229,"^3?","^3G","^9",229,"^3B",2,"^3C",true,"^35",["^1:",["^36",["^1:",[[["~$a","~$b","~$c","~$d"],["~$u","~$v"]]]]]],"^3S","Takes a seq of 4 points in ccw order and 2D vector of normalized UV\n  coordinates. Applies bilinear interpolation to compute point within\n  the rect: U is coord along AB/DC edge, V along BC/AD"],"~$triangle-barycentric-coords",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",329,"^8",7,"^9",329,"^:",34,"^35",["^1:",["^36",["^1:",[[["~$a","~$b","~$c"],"~$p"],["~$a","~$b","~$c","~$p"],["~$a","~$b","~$c","~$p","~$u","~$v"]]]]],"^4?",["^ ","^3>",false,"^4@",6,"^3B",6,"^3;",["^1:",[[["~$a","~$b","~$c"],"~$p"],["~$a","~$b","~$c","~$p"],["~$a","~$b","~$c","~$p","~$u","~$v"]]],"^35",["^1:",[[["~$a","~$b","~$c"],"~$p"],["~$a","~$b","~$c","~$p"],["~$a","~$b","~$c","~$p","~$u","~$v"]]],"^3=",["^1:",[null,null,null]]]],"^I","~$thi.ng.geom.utils/triangle-barycentric-coords","^6","thi/ng/geom/utils.cljc","^:",34,"^4?",["^ ","^3>",false,"^4@",6,"^3B",6,"^3;",["^1:",[[["~$a","~$b","~$c"],"~$p"],["~$a","~$b","~$c","~$p"],["~$a","~$b","~$c","~$p","~$u","~$v"]]],"^35",["^1:",[[["~$a","~$b","~$c"],"~$p"],["~$a","~$b","~$c","~$p"],["~$a","~$b","~$c","~$p","~$u","~$v"]]],"^3=",["^1:",[null,null,null]]],"^3;",["^1:",[[["~$a","~$b","~$c"],"~$p"],["~$a","~$b","~$c","~$p"],["~$a","~$b","~$c","~$p","~$u","~$v"]]],"^3<",null,"^4@",6,"^3=",["^1:",[null,null,null]],"^8",1,"^3>",false,"^4B",[["^ ","^4@",2,"^3>",false,"^3Z","^3G"],["^ ","^4@",4,"^3>",false,"^3Z","^3G"],["^ ","^4@",6,"^3>",false,"^3Z","^3A"]],"^7",329,"^9",329,"^3B",6,"^3C",true,"^35",["^1:",[[["~$a","~$b","~$c"],"~$p"],["~$a","~$b","~$c","~$p"],["~$a","~$b","~$c","~$p","~$u","~$v"]]]],"~$dist*",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",68,"^8",7,"^9",68,"^:",12,"^35",["^1:",["^36",["^1:",[["~$rf"]]]]]],"^I","~$thi.ng.geom.utils/dist*","^6","thi/ng/geom/utils.cljc","^:",12,"^3;",["^1:",[["^4P"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",68,"^3?","^3[","^9",68,"^3B",1,"^3C",true,"^35",["^1:",["^36",["^1:",[["^4P"]]]]]],"~$tessellate-max4",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",283,"^8",7,"^9",283,"^:",22,"^35",["^1:",["^36",["^1:",[["^39"]]]]]],"^I","~$thi.ng.geom.utils/tessellate-max4","^6","thi/ng/geom/utils.cljc","^:",22,"^3;",["^1:",[["^39"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",283,"^3?",["^H",["^3A","^3G"]],"^9",283,"^3B",1,"^3C",true,"^35",["^1:",["^36",["^1:",[["^39"]]]]]],"~$sample-segment-with-res",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",217,"^8",7,"^9",217,"^:",30,"^35",["^1:",["^36",["^1:",[["~$a","~$b","~$res","~$include-b?"]]]]]],"^I","~$thi.ng.geom.utils/sample-segment-with-res","^6","thi/ng/geom/utils.cljc","^:",30,"^3;",["^1:",[["~$a","~$b","^4U","^4V"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",217,"^3?",["^H",["~$seq","~$cljs.core/LazySeq"]],"^9",217,"^3B",4,"^3C",true,"^35",["^1:",["^36",["^1:",[["~$a","~$b","^4U","^4V"]]]]]],"~$closest-point-on-line",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",24,"^8",7,"^9",24,"^:",28,"^35",["^1:",["^36",["^1:",[["~$p","~$a","~$b"]]]]]],"^I","~$thi.ng.geom.utils/closest-point-on-line","^6","thi/ng/geom/utils.cljc","^:",28,"^3;",["^1:",[["~$p","~$a","~$b"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",24,"^3?","^3G","^9",24,"^3B",3,"^3C",true,"^35",["^1:",["^36",["^1:",[["~$p","~$a","~$b"]]]]]],"~$clockwise3?",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",326,"^8",7,"^9",326,"^:",18,"^35",["^1:",["^36",["^1:",[["~$a","~$b","~$c","~$n"]]]]]],"^I","~$thi.ng.geom.utils/clockwise3?","^6","thi/ng/geom/utils.cljc","^:",18,"^3;",["^1:",[["~$a","~$b","~$c","~$n"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",326,"^3?","^3L","^9",326,"^3B",4,"^3C",true,"^35",["^1:",["^36",["^1:",[["~$a","~$b","~$c","~$n"]]]]]],"~$tri-area2",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",317,"^8",7,"^9",317,"^:",16,"^35",["^1:",["^36",["^1:",[["~$a","~$b","~$c"]]]]]],"^I","~$thi.ng.geom.utils/tri-area2","^6","thi/ng/geom/utils.cljc","^:",16,"^3;",["^1:",[["~$a","~$b","~$c"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",317,"^3?","^4=","^9",317,"^3B",3,"^3C",true,"^35",["^1:",["^36",["^1:",[["~$a","~$b","~$c"]]]]]],"~$into-mesh",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",438,"^8",7,"^9",438,"^:",16,"^35",["^1:",["^36",["^1:",[["~$mesh","~$add-face","~$mesh-or-faces"]]]]],"^3S","Takes a target mesh, its add-face fn and a source mesh or face\n  sequence. Adds faces to target mesh and returns it."],"^I","~$thi.ng.geom.utils/into-mesh","^6","thi/ng/geom/utils.cljc","^:",16,"^3;",["^1:",[["^55","^56","^57"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",438,"^3?",["^H",[null,"^3G"]],"^9",438,"^3B",3,"^3C",true,"^35",["^1:",["^36",["^1:",[["^55","^56","^57"]]]]],"^3S","Takes a target mesh, its add-face fn and a source mesh or face\n  sequence. Adds faces to target mesh and returns it."],"~$tessellating-transducer",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",369,"^8",8,"^9",369,"^:",31,"^3X",true,"^35",["^1:",["^36",["^1:",[["~$f"]]]]]],"^3X",true,"^I","~$thi.ng.geom.utils/tessellating-transducer","^6","thi/ng/geom/utils.cljc","^:",31,"^3;",["^1:",[["~$f"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",369,"^3?","^3[","^9",369,"^3B",1,"^3C",true,"^35",["^1:",["^36",["^1:",[["~$f"]]]]]],"~$point-at",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",181,"^8",7,"^9",181,"^:",15,"^35",["^1:",["^36",["^1:",[["~$t","^39"],["~$t","^39","~$idx"]]]]],"^4?",["^ ","^3>",false,"^4@",3,"^3B",3,"^3;",["^1:",[["~$t","^39"],["~$t","^39","^5<"]]],"^35",["^1:",[["~$t","^39"],["~$t","^39","^5<"]]],"^3=",["^1:",[null,null]]]],"^I","~$thi.ng.geom.utils/point-at","^6","thi/ng/geom/utils.cljc","^:",15,"^4?",["^ ","^3>",false,"^4@",3,"^3B",3,"^3;",["^1:",[["~$t","^39"],["~$t","^39","^5<"]]],"^35",["^1:",[["~$t","^39"],["~$t","^39","^5<"]]],"^3=",["^1:",[null,null]]],"^3;",["^1:",[["~$t","^39"],["~$t","^39","^5<"]]],"^3<",null,"^4@",3,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^4B",[["^ ","^4@",2,"^3>",false,"^3Z","^3G"],["^ ","^4@",3,"^3>",false,"^3Z",["^H",["^3G","^3Q"]]]],"^7",181,"^9",181,"^3B",3,"^3C",true,"^35",["^1:",[["~$t","^39"],["~$t","^39","^5<"]]]],"~$max-dist",["^ ","^I","~$thi.ng.geom.utils/max-dist","^6","thi/ng/geom/utils.cljc","^7",76,"^8",1,"^9",76,"^:",14,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",76,"^8",6,"^9",76,"^:",14],"^3Z","^3["],"~$fit-all-into-bounds",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",421,"^8",7,"^9",421,"^:",26,"^35",["^1:",["^36",["^1:",[["~$bounds","^3O"]]]]],"^3S","Takes an AABB or rect and seq of shapes, proportionally scales and\n  repositions all items to fit into given bounds. Returns lazyseq of\n  transformed entities. Does not support collections of mixed 2D/3D\n  entities. Use rects as target bounds for 2D colls."],"^I","~$thi.ng.geom.utils/fit-all-into-bounds","^6","thi/ng/geom/utils.cljc","^:",26,"^3;",["^1:",[["^5A","^3O"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",421,"^3?","^4Y","^9",421,"^3B",2,"^3C",true,"^35",["^1:",["^36",["^1:",[["^5A","^3O"]]]]],"^3S","Takes an AABB or rect and seq of shapes, proportionally scales and\n  repositions all items to fit into given bounds. Returns lazyseq of\n  transformed entities. Does not support collections of mixed 2D/3D\n  entities. Use rects as target bounds for 2D colls."],"~$norm-sign3",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",314,"^8",7,"^9",314,"^:",17,"^35",["^1:",["^36",["^1:",[["~$a","~$b","~$c"]]]]]],"^I","~$thi.ng.geom.utils/norm-sign3","^6","thi/ng/geom/utils.cljc","^:",17,"^3;",["^1:",[["~$a","~$b","~$c"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",314,"^3?","^3G","^9",314,"^3B",3,"^3C",true,"^35",["^1:",["^36",["^1:",[["~$a","~$b","~$c"]]]]]],"~$bounding-rect",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",391,"^8",7,"^9",391,"^:",20,"^35",["^1:",["^36",["^1:",[["^39"]]]]]],"^I","~$thi.ng.geom.utils/bounding-rect","^6","thi/ng/geom/utils.cljc","^:",20,"^3;",["^1:",[["^39"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",391,"^3?",["^H",["~$thi.ng.geom.types/Rect2","^3Q"]],"^9",391,"^3B",1,"^3C",true,"^35",["^1:",["^36",["^1:",[["^39"]]]]]],"~$ortho-normal",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",303,"^8",7,"^9",303,"^:",19,"^35",["^1:",["^36",["^1:",[[["~$a","~$b","~$c"]],["~$a","~$b"],["~$a","~$b","~$c"]]]]],"^4?",["^ ","^3>",false,"^4@",3,"^3B",3,"^3;",["^1:",[[["~$a","~$b","~$c"]],["~$a","~$b"],["~$a","~$b","~$c"]]],"^35",["^1:",[[["~$a","~$b","~$c"]],["~$a","~$b"],["~$a","~$b","~$c"]]],"^3=",["^1:",[null,null,null]]]],"^I","~$thi.ng.geom.utils/ortho-normal","^6","thi/ng/geom/utils.cljc","^:",19,"^4?",["^ ","^3>",false,"^4@",3,"^3B",3,"^3;",["^1:",[[["~$a","~$b","~$c"]],["~$a","~$b"],["~$a","~$b","~$c"]]],"^35",["^1:",[[["~$a","~$b","~$c"]],["~$a","~$b"],["~$a","~$b","~$c"]]],"^3=",["^1:",[null,null,null]]],"^3;",["^1:",[[["~$a","~$b","~$c"]],["~$a","~$b"],["~$a","~$b","~$c"]]],"^3<",null,"^4@",3,"^3=",["^1:",[null,null,null]],"^8",1,"^3>",false,"^4B",[["^ ","^4@",1,"^3>",false,"^3Z","^3G"],["^ ","^4@",2,"^3>",false,"^3Z","^3G"],["^ ","^4@",3,"^3>",false,"^3Z","^3G"]],"^7",303,"^9",303,"^3B",3,"^3C",true,"^35",["^1:",[[["~$a","~$b","~$c"]],["~$a","~$b"],["~$a","~$b","~$c"]]]],"~$tri-area3",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",320,"^8",7,"^9",320,"^:",16,"^35",["^1:",["^36",["^1:",[["~$a","~$b","~$c"]]]]]],"^I","~$thi.ng.geom.utils/tri-area3","^6","thi/ng/geom/utils.cljc","^:",16,"^3;",["^1:",[["~$a","~$b","~$c"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",320,"^3?","^4=","^9",320,"^3B",3,"^3C",true,"^35",["^1:",["^36",["^1:",[["~$a","~$b","~$c"]]]]]],"~$radial-bounds",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",134,"^8",7,"^9",134,"^:",20,"^35",["^1:",["^36",["^1:",[["~$ctor","~$c","~$r-or-points"]]]]]],"^I","~$thi.ng.geom.utils/radial-bounds","^6","thi/ng/geom/utils.cljc","^:",20,"^3;",["^1:",[["^5M","~$c","^5N"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",134,"^3?","^3A","^9",134,"^3B",3,"^3C",true,"^35",["^1:",["^36",["^1:",[["^5M","~$c","^5N"]]]]]],"~$delta-contains",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",150,"^8",7,"^9",150,"^:",21,"^35",["^1:",["^36",["^1:",[["^39","~$p","~$eps"]]]]]],"^I","~$thi.ng.geom.utils/delta-contains","^6","thi/ng/geom/utils.cljc","^:",21,"^3;",["^1:",[["^39","~$p","^5Q"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",150,"^3?",["^H",["^3G","^3Q"]],"^9",150,"^3B",3,"^3C",true,"^35",["^1:",["^36",["^1:",[["^39","~$p","^5Q"]]]]]],"~$closest-line-between",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",44,"^8",7,"^9",44,"^:",27,"^35",["^1:",["^36",["^1:",[["~$a1","~$b1","~$a2","~$b2"]]]]]],"^I","~$thi.ng.geom.utils/closest-line-between","^6","thi/ng/geom/utils.cljc","^:",27,"^3;",["^1:",[["^5T","^5U","^5V","^5W"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",44,"^3?",["^H",["~$cljs.core/IMap","^3Q"]],"^9",44,"^3B",4,"^3C",true,"^35",["^1:",["^36",["^1:",[["^5T","^5U","^5V","^5W"]]]]]],"~$point-at-index",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",160,"^8",7,"^9",160,"^:",21,"^35",["^1:",["^36",["^1:",[["^39","~$t"]]]]],"^3S","Takes a seq of points and normalized index (0.0 .. 1.0), returns\n  interpolated point at position t."],"^I","~$thi.ng.geom.utils/point-at-index","^6","thi/ng/geom/utils.cljc","^:",21,"^3;",["^1:",[["^39","~$t"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",160,"^3?",["^H",["^3G","^3Q"]],"^9",160,"^3B",2,"^3C",true,"^35",["^1:",["^36",["^1:",[["^39","~$t"]]]]],"^3S","Takes a seq of points and normalized index (0.0 .. 1.0), returns\n  interpolated point at position t."],"~$bounding-circle",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",401,"^8",7,"^9",401,"^:",22,"^35",["^1:",["^36",["^1:",[["^39"],["~$c","^5N"]]]]],"^4?",["^ ","^3>",false,"^4@",2,"^3B",2,"^3;",["^1:",[["^39"],["~$c","^5N"]]],"^35",["^1:",[["^39"],["~$c","^5N"]]],"^3=",["^1:",[null,null]]]],"^I","~$thi.ng.geom.utils/bounding-circle","^6","thi/ng/geom/utils.cljc","^:",22,"^4?",["^ ","^3>",false,"^4@",2,"^3B",2,"^3;",["^1:",[["^39"],["~$c","^5N"]]],"^35",["^1:",[["^39"],["~$c","^5N"]]],"^3=",["^1:",[null,null]]],"^3;",["^1:",[["^39"],["~$c","^5N"]]],"^3<",null,"^4@",2,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^4B",[["^ ","^4@",1,"^3>",false,"^3Z","^3G"],["^ ","^4@",2,"^3>",false,"^3Z","~$thi.ng.geom.types/Circle2"]],"^7",401,"^9",401,"^3B",2,"^3C",true,"^35",["^1:",[["^39"],["~$c","^5N"]]]],"~$sample-uniform",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",209,"^8",7,"^9",209,"^:",21,"^35",["^1:",["^36",["^1:",[["^37","^38","^39"]]]]]],"^I","~$thi.ng.geom.utils/sample-uniform","^6","thi/ng/geom/utils.cljc","^:",21,"^3;",["^1:",[["^37","^38","^39"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",209,"^3?",["^H",["^3@","^3A","^3Q"]],"^9",209,"^3B",3,"^3C",true,"^35",["^1:",["^36",["^1:",[["^37","^38","^39"]]]]]],"~$axis-bounds",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",141,"^8",7,"^9",141,"^:",18,"^35",["^1:",["^36",["^1:",[["~$axis","^3O"]]]]]],"^I","~$thi.ng.geom.utils/axis-bounds","^6","thi/ng/geom/utils.cljc","^:",18,"^3;",["^1:",[["^66","^3O"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",141,"^3?","^3A","^9",141,"^3B",2,"^3C",true,"^35",["^1:",["^36",["^1:",[["^66","^3O"]]]]]],"~$bounding-rect-raw",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",126,"^8",7,"^9",126,"^:",24,"^35",["^1:",["^36",["^1:",[["^39"]]]]]],"^I","~$thi.ng.geom.utils/bounding-rect-raw","^6","thi/ng/geom/utils.cljc","^:",24,"^3;",["^1:",[["^39"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",126,"^3?",["^H",["^3A","^3Q"]],"^9",126,"^3B",1,"^3C",true,"^35",["^1:",["^36",["^1:",[["^39"]]]]]],"~$tessellate-with-point",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",254,"^8",7,"^9",254,"^:",28,"^35",["^1:",["^36",["^1:",[["^39"],["~$c","^39"]]]]],"^4?",["^ ","^3>",false,"^4@",2,"^3B",2,"^3;",["^1:",[["^39"],["~$c","^39"]]],"^35",["^1:",[["^39"],["~$c","^39"]]],"^3=",["^1:",[null,null]]]],"^I","~$thi.ng.geom.utils/tessellate-with-point","^6","thi/ng/geom/utils.cljc","^:",28,"^4?",["^ ","^3>",false,"^4@",2,"^3B",2,"^3;",["^1:",[["^39"],["~$c","^39"]]],"^35",["^1:",[["^39"],["~$c","^39"]]],"^3=",["^1:",[null,null]]],"^3;",["^1:",[["^39"],["~$c","^39"]]],"^3<",null,"^4@",2,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^4B",[["^ ","^4@",1,"^3>",false,"^3Z","^3G"],["^ ","^4@",2,"^3>",false,"^3Z","^3@"]],"^7",254,"^9",254,"^3B",2,"^3C",true,"^35",["^1:",[["^39"],["~$c","^39"]]]],"~$bounding-box",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",396,"^8",7,"^9",396,"^:",19,"^35",["^1:",["^36",["^1:",[["^39"]]]]]],"^I","~$thi.ng.geom.utils/bounding-box","^6","thi/ng/geom/utils.cljc","^:",19,"^3;",["^1:",[["^39"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",396,"^3?",["^H",["~$thi.ng.geom.types/AABB","^3Q"]],"^9",396,"^3B",1,"^3C",true,"^35",["^1:",["^36",["^1:",[["^39"]]]]]],"~$axis-range",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",146,"^8",7,"^9",146,"^:",17,"^35",["^1:",["^36",["^1:",[["^66","^3O"]]]]]],"^I","~$thi.ng.geom.utils/axis-range","^6","thi/ng/geom/utils.cljc","^:",17,"^3;",["^1:",[["^66","^3O"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",146,"^3?","^4=","^9",146,"^3B",2,"^3C",true,"^35",["^1:",["^36",["^1:",[["^66","^3O"]]]]]],"~$closest-point-on-segment",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",28,"^8",7,"^9",28,"^:",31,"^35",["^1:",["^36",["^1:",[["~$p","~$a","~$b"]]]]]],"^I","~$thi.ng.geom.utils/closest-point-on-segment","^6","thi/ng/geom/utils.cljc","^:",31,"^3;",["^1:",[["~$p","~$a","~$b"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",28,"^3?",["^H",[null,"^3G"]],"^9",28,"^3B",3,"^3C",true,"^35",["^1:",["^36",["^1:",[["~$p","~$a","~$b"]]]]]],"~$tessellate-tri-with-midpoints",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",269,"^8",7,"^9",269,"^:",36,"^35",["^1:",["^36",["^1:",[[["~$a","~$b","~$c"]]]]]]],"^I","~$thi.ng.geom.utils/tessellate-tri-with-midpoints","^6","thi/ng/geom/utils.cljc","^:",36,"^3;",["^1:",[["~$p__43998"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",269,"^3?","^3A","^9",269,"^3B",1,"^3C",true,"^35",["^1:",["^36",["^1:",[[["~$a","~$b","~$c"]]]]]]],"~$closest-point-coeff",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",19,"^8",7,"^9",19,"^:",26,"^35",["^1:",["^36",["^1:",[["~$p","~$a","~$b"]]]]]],"^I","~$thi.ng.geom.utils/closest-point-coeff","^6","thi/ng/geom/utils.cljc","^:",26,"^3;",["^1:",[["~$p","~$a","~$b"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",19,"^3?","^4=","^9",19,"^3B",3,"^3C",true,"^35",["^1:",["^36",["^1:",[["~$p","~$a","~$b"]]]]]],"~$bounding-box-raw",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",130,"^8",7,"^9",130,"^:",23,"^35",["^1:",["^36",["^1:",[["^39"]]]]]],"^I","~$thi.ng.geom.utils/bounding-box-raw","^6","thi/ng/geom/utils.cljc","^:",23,"^3;",["^1:",[["^39"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",130,"^3?",["^H",["^3A","^3Q"]],"^9",130,"^3B",1,"^3C",true,"^35",["^1:",["^36",["^1:",[["^39"]]]]]],"~$center",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",103,"^8",7,"^9",103,"^:",13,"^35",["^1:",["^36",["^1:",[["~$c'","^3O"],["~$c","^6K","^3O"]]]]],"^4?",["^ ","^3>",false,"^4@",3,"^3B",3,"^3;",["^1:",[["^6K","^3O"],["~$c","^6K","^3O"]]],"^35",["^1:",[["^6K","^3O"],["~$c","^6K","^3O"]]],"^3=",["^1:",[null,null]]]],"^I","~$thi.ng.geom.utils/center","^6","thi/ng/geom/utils.cljc","^:",13,"^4?",["^ ","^3>",false,"^4@",3,"^3B",3,"^3;",["^1:",[["^6K","^3O"],["~$c","^6K","^3O"]]],"^35",["^1:",[["^6K","^3O"],["~$c","^6K","^3O"]]],"^3=",["^1:",[null,null]]],"^3;",["^1:",[["^6K","^3O"],["~$c","^6K","^3O"]]],"^3<",null,"^4@",3,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^4B",[["^ ","^4@",2,"^3>",false,"^3Z","^3G"],["^ ","^4@",3,"^3>",false,"^3Z","^3@"]],"^7",103,"^9",103,"^3B",3,"^3C",true,"^35",["^1:",[["^6K","^3O"],["~$c","^6K","^3O"]]]],"~$closest-point-on-segments",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",33,"^8",7,"^9",33,"^:",32,"^35",["^1:",["^36",["^1:",[["~$p","~$segments"]]]]]],"^I","~$thi.ng.geom.utils/closest-point-on-segments","^6","thi/ng/geom/utils.cljc","^:",32,"^3;",["^1:",[["~$p","^6N"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",33,"^3?","^3G","^9",33,"^3B",2,"^3C",true,"^35",["^1:",["^36",["^1:",[["~$p","^6N"]]]]]],"~$tessellate-face",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",289,"^8",7,"^9",289,"^:",22,"^35",["^1:",["^36",["^1:",[["~$tess-fn"]]]]]],"^I","~$thi.ng.geom.utils/tessellate-face","^6","thi/ng/geom/utils.cljc","^:",22,"^3;",["^1:",[["^6Q"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",289,"^3?","^3[","^9",289,"^3B",1,"^3C",true,"^35",["^1:",["^36",["^1:",[["^6Q"]]]]]],"~$centroid",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",93,"^8",7,"^9",93,"^:",15,"^35",["^1:",["^36",["^1:",[["^3O"]]]]]],"^I","~$thi.ng.geom.utils/centroid","^6","thi/ng/geom/utils.cljc","^:",15,"^3;",["^1:",[["^3O"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",93,"^9",93,"^3B",1,"^3C",true,"^35",["^1:",["^36",["^1:",[["^3O"]]]]]],"~$arc-length-index",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",78,"^8",7,"^9",78,"^:",23,"^35",["^1:",["^36",["^1:",[["^39"]]]]]],"^I","~$thi.ng.geom.utils/arc-length-index","^6","thi/ng/geom/utils.cljc","^:",23,"^3;",["^1:",[["^39"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",78,"^3?","^3G","^9",78,"^3B",1,"^3C",true,"^35",["^1:",["^36",["^1:",[["^39"]]]]]],"~$transform-mesh",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",456,"^8",7,"^9",456,"^:",21,"^35",["^1:",["^36",["^1:",[["^55","^56","~$tx"]]]]],"^3S","Takes a mesh, its add-face fn and a vertex transformation fn.\n  Transforms all mesh vertices and returns new mesh."],"^I","~$thi.ng.geom.utils/transform-mesh","^6","thi/ng/geom/utils.cljc","^:",21,"^3;",["^1:",[["^55","^56","^6X"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",456,"^3?",["^H",[null,"^3G"]],"^9",456,"^3B",3,"^3C",true,"^35",["^1:",["^36",["^1:",[["^55","^56","^6X"]]]]],"^3S","Takes a mesh, its add-face fn and a vertex transformation fn.\n  Transforms all mesh vertices and returns new mesh."],"~$total-volume",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",385,"^8",7,"^9",385,"^:",19,"^35",["^1:",["^36",["^1:",[["~$faces"],["~$xf","^6["]]]]],"^4?",["^ ","^3>",false,"^4@",2,"^3B",2,"^3;",["^1:",[["^6["],["^70","^6["]]],"^35",["^1:",[["^6["],["^70","^6["]]],"^3=",["^1:",[null,null]]]],"^I","~$thi.ng.geom.utils/total-volume","^6","thi/ng/geom/utils.cljc","^:",19,"^4?",["^ ","^3>",false,"^4@",2,"^3B",2,"^3;",["^1:",[["^6["],["^70","^6["]]],"^35",["^1:",[["^6["],["^70","^6["]]],"^3=",["^1:",[null,null]]],"^3;",["^1:",[["^6["],["^70","^6["]]],"^3<",null,"^4@",2,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^4B",[["^ ","^4@",1,"^3>",false,"^3Z","^4="],["^ ","^4@",2,"^3>",false,"^3Z","^4="]],"^7",385,"^9",385,"^3B",2,"^3C",true,"^35",["^1:",[["^6["],["^70","^6["]]]],"~$tessellate-3",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",276,"^8",7,"^9",276,"^:",19,"^35",["^1:",["^36",["^1:",[["^39"]]]]]],"^I","~$thi.ng.geom.utils/tessellate-3","^6","thi/ng/geom/utils.cljc","^:",19,"^3;",["^1:",[["^39"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",276,"^3?",["^H",["^3A","^3G"]],"^9",276,"^3B",1,"^3C",true,"^35",["^1:",["^36",["^1:",[["^39"]]]]]],"~$bounding-sphere",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",408,"^8",7,"^9",408,"^:",22,"^35",["^1:",["^36",["^1:",[["^39"],["~$c","^5N"]]]]],"^4?",["^ ","^3>",false,"^4@",2,"^3B",2,"^3;",["^1:",[["^39"],["~$c","^5N"]]],"^35",["^1:",[["^39"],["~$c","^5N"]]],"^3=",["^1:",[null,null]]]],"^I","~$thi.ng.geom.utils/bounding-sphere","^6","thi/ng/geom/utils.cljc","^:",22,"^4?",["^ ","^3>",false,"^4@",2,"^3B",2,"^3;",["^1:",[["^39"],["~$c","^5N"]]],"^35",["^1:",[["^39"],["~$c","^5N"]]],"^3=",["^1:",[null,null]]],"^3;",["^1:",[["^39"],["~$c","^5N"]]],"^3<",null,"^4@",2,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^4B",[["^ ","^4@",1,"^3>",false,"^3Z","^3G"],["^ ","^4@",2,"^3>",false,"^3Z","~$thi.ng.geom.types/Sphere"]],"^7",408,"^9",408,"^3B",2,"^3C",true,"^35",["^1:",[["^39"],["~$c","^5N"]]]],"~$volume-xf",["^ ","^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",378,"^8",16,"^9",378,"^:",25,"^3X",true],"^3X",true,"^I","~$thi.ng.geom.utils/volume-xf","^6","thi/ng/geom/utils.cljc","^:",25,"^8",1,"^7",378,"^9",378,"^3Z","^3["],"~$total-area-3d",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",381,"^8",7,"^9",381,"^:",20,"^35",["^1:",["^36",["^1:",[["^6["],["^70","^6["]]]]],"^4?",["^ ","^3>",false,"^4@",2,"^3B",2,"^3;",["^1:",[["^6["],["^70","^6["]]],"^35",["^1:",[["^6["],["^70","^6["]]],"^3=",["^1:",[null,null]]]],"^I","~$thi.ng.geom.utils/total-area-3d","^6","thi/ng/geom/utils.cljc","^:",20,"^4?",["^ ","^3>",false,"^4@",2,"^3B",2,"^3;",["^1:",[["^6["],["^70","^6["]]],"^35",["^1:",[["^6["],["^70","^6["]]],"^3=",["^1:",[null,null]]],"^3;",["^1:",[["^6["],["^70","^6["]]],"^3<",null,"^4@",2,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^4B",[["^ ","^4@",1,"^3>",false,"^3Z","^3G"],["^ ","^4@",2,"^3>",false,"^3Z","^3G"]],"^7",381,"^9",381,"^3B",2,"^3C",true,"^35",["^1:",[["^6["],["^70","^6["]]]],"~$map-mesh",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",449,"^8",7,"^9",449,"^:",15,"^35",["^1:",["^36",["^1:",[["~$f","^55"]]]]],"^3S","Applies f to all faces of given mesh and adds resulting faces to\n  new mesh. Thus f should return a seq of raw faces (i.e. each face as\n  2-elem vector of [verts attribs]. Returns new mesh."],"^I","~$thi.ng.geom.utils/map-mesh","^6","thi/ng/geom/utils.cljc","^:",15,"^3;",["^1:",[["~$f","^55"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",449,"^3?","^3G","^9",449,"^3B",2,"^3C",true,"^35",["^1:",["^36",["^1:",[["~$f","^55"]]]]],"^3S","Applies f to all faces of given mesh and adds resulting faces to\n  new mesh. Thus f should return a seq of raw faces (i.e. each face as\n  2-elem vector of [verts attribs]. Returns new mesh."],"~$point-in-triangle3?",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",356,"^8",7,"^9",356,"^:",26,"^35",["^1:",["^36",["^1:",[["~$p","~$a","~$b","~$c"]]]]]],"^I","~$thi.ng.geom.utils/point-in-triangle3?","^6","thi/ng/geom/utils.cljc","^:",26,"^3;",["^1:",[["~$p","~$a","~$b","~$c"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",356,"^3?",["^H",["^3L","^3Q"]],"^9",356,"^3B",4,"^3C",true,"^35",["^1:",["^36",["^1:",[["~$p","~$a","~$b","~$c"]]]]]],"~$point-at*",["^ ","^34",null,"^5",["^ ","^6","thi/ng/geom/utils.cljc","^7",171,"^8",7,"^9",171,"^:",16,"^35",["^1:",["^36",["^1:",[["^39","^5<","~$total","~$t","~$i"]]]]]],"^I","~$thi.ng.geom.utils/point-at*","^6","thi/ng/geom/utils.cljc","^:",16,"^3;",["^1:",[["^39","^5<","^7@","~$t","~$i"]]],"^3<",null,"^3=",["^1:",[null,null]],"^8",1,"^3>",false,"^7",171,"^3?","^3A","^9",171,"^3B",5,"^3C",true,"^35",["^1:",["^36",["^1:",[["^39","^5<","^7@","~$t","~$i"]]]]]]],"^X",["^ ","^17","^17","^18","^17","^P","^P"],"~:cljs.analyzer/constants",["^ ","^V",["^H",["~:parallel","~:default","~:ua","~:ub","~:type","~:size","~:b","~:intersect","~:a"]],"~:order",["^7G","^7C","~:a","~:b","^7E","^7F","^7I","^7D","^7H"]],"^1>",["^ ","^X",["^H",[]],"^W",["^H",[]]],"^1?",["^ "],"^1@",["^R","^P","^O","^Q","^U","^T","^S"]],"^L","^J","~:ns-specs",["^ "],"~:ns-spec-vars",[],"~:compiler-options",["^1N",[["^7M","~:static-fns"],true,["^7M","~:elide-asserts"],false,["^7M","~:optimize-constants"],null,["^7M","^1E"],null,["^7M","~:external-config"],null,["^7M","~:tooling-config"],null,["^7M","~:emit-constants"],null,["^7M","~:load-tests"],null,["^7M","~:form-size-threshold"],null,["^7M","~:infer-externs"],true,["^7M","^1G"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^7M","~:fn-invoke-direct"],null,["^7M","~:source-map"],"/dev/null"]]]