["^ ","~:output",["^ ","~:js","goog.provide('thi.ng.geom.core');\ngoog.require('cljs.core');\nthi.ng.geom.core._STAR_resolution_STAR_ = (20);\n\n/**\n * @interface\n */\nthi.ng.geom.core.IDistance = function(){};\n\nthi.ng.geom.core.dist = (function thi$ng$geom$core$dist(_,a){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IDistance$dist$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IDistance$dist$arity$2(_,a);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.dist[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,a) : m__4434__auto__.call(null,_,a));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.dist[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,a) : m__4431__auto__.call(null,_,a));\n} else {\nthrow cljs.core.missing_protocol(\"IDistance.dist\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.dist_squared = (function thi$ng$geom$core$dist_squared(_,a){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IDistance$dist_squared$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IDistance$dist_squared$arity$2(_,a);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.dist_squared[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,a) : m__4434__auto__.call(null,_,a));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.dist_squared[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,a) : m__4431__auto__.call(null,_,a));\n} else {\nthrow cljs.core.missing_protocol(\"IDistance.dist-squared\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IHeading = function(){};\n\nthi.ng.geom.core.heading = (function thi$ng$geom$core$heading(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IHeading$heading$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IHeading$heading$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.heading[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.heading[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IHeading.heading\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.heading_xy = (function thi$ng$geom$core$heading_xy(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IHeading$heading_xy$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IHeading$heading_xy$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.heading_xy[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.heading_xy[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IHeading.heading-xy\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.heading_xz = (function thi$ng$geom$core$heading_xz(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IHeading$heading_xz$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IHeading$heading_xz$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.heading_xz[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.heading_xz[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IHeading.heading-xz\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.heading_yz = (function thi$ng$geom$core$heading_yz(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IHeading$heading_yz$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IHeading$heading_yz$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.heading_yz[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.heading_yz[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IHeading.heading-yz\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.angle_between = (function thi$ng$geom$core$angle_between(_,a){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IHeading$angle_between$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IHeading$angle_between$arity$2(_,a);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.angle_between[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,a) : m__4434__auto__.call(null,_,a));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.angle_between[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,a) : m__4431__auto__.call(null,_,a));\n} else {\nthrow cljs.core.missing_protocol(\"IHeading.angle-between\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.slope_xy = (function thi$ng$geom$core$slope_xy(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IHeading$slope_xy$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IHeading$slope_xy$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.slope_xy[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.slope_xy[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IHeading.slope-xy\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.slope_xz = (function thi$ng$geom$core$slope_xz(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IHeading$slope_xz$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IHeading$slope_xz$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.slope_xz[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.slope_xz[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IHeading.slope-xz\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.slope_yz = (function thi$ng$geom$core$slope_yz(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IHeading$slope_yz$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IHeading$slope_yz$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.slope_yz[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.slope_yz[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IHeading.slope-yz\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.INormal = function(){};\n\nthi.ng.geom.core.normal = (function thi$ng$geom$core$normal(var_args){\nvar G__44080 = arguments.length;\nswitch (G__44080) {\ncase 1:\nreturn thi.ng.geom.core.normal.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn thi.ng.geom.core.normal.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.core.normal.cljs$core$IFn$_invoke$arity$1 = (function (_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$INormal$normal$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$INormal$normal$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.normal[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.normal[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"INormal.normal\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.normal.cljs$core$IFn$_invoke$arity$2 = (function (_,a){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$INormal$normal$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$INormal$normal$arity$2(_,a);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.normal[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,a) : m__4434__auto__.call(null,_,a));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.normal[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,a) : m__4431__auto__.call(null,_,a));\n} else {\nthrow cljs.core.missing_protocol(\"INormal.normal\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.normal.cljs$lang$maxFixedArity = 2;\n\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IPolar = function(){};\n\nthi.ng.geom.core.as_polar = (function thi$ng$geom$core$as_polar(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IPolar$as_polar$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IPolar$as_polar$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.as_polar[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.as_polar[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IPolar.as-polar\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.as_cartesian = (function thi$ng$geom$core$as_cartesian(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IPolar$as_cartesian$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IPolar$as_cartesian$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.as_cartesian[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.as_cartesian[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IPolar.as-cartesian\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IVectorReduce = function(){};\n\nthi.ng.geom.core.reduce_vector = (function thi$ng$geom$core$reduce_vector(var_args){\nvar G__44102 = arguments.length;\nswitch (G__44102) {\ncase 3:\nreturn thi.ng.geom.core.reduce_vector.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn thi.ng.geom.core.reduce_vector.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.core.reduce_vector.cljs$core$IFn$_invoke$arity$3 = (function (_,f,xs){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IVectorReduce$reduce_vector$arity$3 == null)))))){\nreturn _.thi$ng$geom$core$IVectorReduce$reduce_vector$arity$3(_,f,xs);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.reduce_vector[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(_,f,xs) : m__4434__auto__.call(null,_,f,xs));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.reduce_vector[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(_,f,xs) : m__4431__auto__.call(null,_,f,xs));\n} else {\nthrow cljs.core.missing_protocol(\"IVectorReduce.reduce-vector\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.reduce_vector.cljs$core$IFn$_invoke$arity$4 = (function (_,f,f2,xs){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IVectorReduce$reduce_vector$arity$4 == null)))))){\nreturn _.thi$ng$geom$core$IVectorReduce$reduce_vector$arity$4(_,f,f2,xs);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.reduce_vector[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$4(_,f,f2,xs) : m__4434__auto__.call(null,_,f,f2,xs));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.reduce_vector[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$4(_,f,f2,xs) : m__4431__auto__.call(null,_,f,f2,xs));\n} else {\nthrow cljs.core.missing_protocol(\"IVectorReduce.reduce-vector\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.reduce_vector.cljs$lang$maxFixedArity = 4;\n\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IRotate = function(){};\n\nthi.ng.geom.core.rotate = (function thi$ng$geom$core$rotate(_,t){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IRotate$rotate$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IRotate$rotate$arity$2(_,t);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.rotate[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,t) : m__4434__auto__.call(null,_,t));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.rotate[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,t) : m__4431__auto__.call(null,_,t));\n} else {\nthrow cljs.core.missing_protocol(\"IRotate.rotate\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IRotate3D = function(){};\n\nthi.ng.geom.core.rotate_x = (function thi$ng$geom$core$rotate_x(_,t){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IRotate3D$rotate_x$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IRotate3D$rotate_x$arity$2(_,t);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.rotate_x[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,t) : m__4434__auto__.call(null,_,t));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.rotate_x[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,t) : m__4431__auto__.call(null,_,t));\n} else {\nthrow cljs.core.missing_protocol(\"IRotate3D.rotate-x\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.rotate_y = (function thi$ng$geom$core$rotate_y(_,t){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IRotate3D$rotate_y$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IRotate3D$rotate_y$arity$2(_,t);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.rotate_y[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,t) : m__4434__auto__.call(null,_,t));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.rotate_y[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,t) : m__4431__auto__.call(null,_,t));\n} else {\nthrow cljs.core.missing_protocol(\"IRotate3D.rotate-y\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.rotate_z = (function thi$ng$geom$core$rotate_z(_,t){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IRotate3D$rotate_z$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IRotate3D$rotate_z$arity$2(_,t);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.rotate_z[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,t) : m__4434__auto__.call(null,_,t));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.rotate_z[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,t) : m__4431__auto__.call(null,_,t));\n} else {\nthrow cljs.core.missing_protocol(\"IRotate3D.rotate-z\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.rotate_around_axis = (function thi$ng$geom$core$rotate_around_axis(_,a,t){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IRotate3D$rotate_around_axis$arity$3 == null)))))){\nreturn _.thi$ng$geom$core$IRotate3D$rotate_around_axis$arity$3(_,a,t);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.rotate_around_axis[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(_,a,t) : m__4434__auto__.call(null,_,a,t));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.rotate_around_axis[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(_,a,t) : m__4431__auto__.call(null,_,a,t));\n} else {\nthrow cljs.core.missing_protocol(\"IRotate3D.rotate-around-axis\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IReflect = function(){};\n\nthi.ng.geom.core.reflect = (function thi$ng$geom$core$reflect(_,r){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IReflect$reflect$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IReflect$reflect$arity$2(_,r);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.reflect[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,r) : m__4434__auto__.call(null,_,r));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.reflect[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,r) : m__4431__auto__.call(null,_,r));\n} else {\nthrow cljs.core.missing_protocol(\"IReflect.reflect\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IScale = function(){};\n\nthi.ng.geom.core.scale = (function thi$ng$geom$core$scale(_,s){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IScale$scale$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IScale$scale$arity$2(_,s);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.scale[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,s) : m__4434__auto__.call(null,_,s));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.scale[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,s) : m__4431__auto__.call(null,_,s));\n} else {\nthrow cljs.core.missing_protocol(\"IScale.scale\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.scale_size = (function thi$ng$geom$core$scale_size(_,s){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IScale$scale_size$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IScale$scale_size$arity$2(_,s);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.scale_size[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,s) : m__4434__auto__.call(null,_,s));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.scale_size[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,s) : m__4431__auto__.call(null,_,s));\n} else {\nthrow cljs.core.missing_protocol(\"IScale.scale-size\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IShear = function(){};\n\nthi.ng.geom.core.shear = (function thi$ng$geom$core$shear(_,s){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IShear$shear$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IShear$shear$arity$2(_,s);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.shear[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,s) : m__4434__auto__.call(null,_,s));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.shear[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,s) : m__4431__auto__.call(null,_,s));\n} else {\nthrow cljs.core.missing_protocol(\"IShear.shear\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.ITransform = function(){};\n\nthi.ng.geom.core.transform = (function thi$ng$geom$core$transform(_,tx){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$ITransform$transform$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$ITransform$transform$arity$2(_,tx);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.transform[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,tx) : m__4434__auto__.call(null,_,tx));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.transform[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,tx) : m__4431__auto__.call(null,_,tx));\n} else {\nthrow cljs.core.missing_protocol(\"ITransform.transform\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.ITranslate = function(){};\n\nthi.ng.geom.core.translate = (function thi$ng$geom$core$translate(_,t){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$ITranslate$translate$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$ITranslate$translate$arity$2(_,t);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.translate[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,t) : m__4434__auto__.call(null,_,t));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.translate[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,t) : m__4431__auto__.call(null,_,t));\n} else {\nthrow cljs.core.missing_protocol(\"ITranslate.translate\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IVectorTransform = function(){};\n\nthi.ng.geom.core.transform_vector = (function thi$ng$geom$core$transform_vector(_,v){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IVectorTransform$transform_vector$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IVectorTransform$transform_vector$arity$2(_,v);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.transform_vector[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,v) : m__4434__auto__.call(null,_,v));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.transform_vector[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,v) : m__4431__auto__.call(null,_,v));\n} else {\nthrow cljs.core.missing_protocol(\"IVectorTransform.transform-vector\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IMatrixConvert = function(){};\n\nthi.ng.geom.core.as_matrix = (function thi$ng$geom$core$as_matrix(var_args){\nvar G__44159 = arguments.length;\nswitch (G__44159) {\ncase 1:\nreturn thi.ng.geom.core.as_matrix.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn thi.ng.geom.core.as_matrix.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.core.as_matrix.cljs$core$IFn$_invoke$arity$1 = (function (_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IMatrixConvert$as_matrix$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IMatrixConvert$as_matrix$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.as_matrix[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.as_matrix[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IMatrixConvert.as-matrix\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.as_matrix.cljs$core$IFn$_invoke$arity$2 = (function (_,opts){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IMatrixConvert$as_matrix$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IMatrixConvert$as_matrix$arity$2(_,opts);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.as_matrix[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,opts) : m__4434__auto__.call(null,_,opts));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.as_matrix[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,opts) : m__4431__auto__.call(null,_,opts));\n} else {\nthrow cljs.core.missing_protocol(\"IMatrixConvert.as-matrix\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.as_matrix.cljs$lang$maxFixedArity = 2;\n\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IGraph = function(){};\n\nthi.ng.geom.core.connected_components = (function thi$ng$geom$core$connected_components(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IGraph$connected_components$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IGraph$connected_components$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.connected_components[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.connected_components[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IGraph.connected-components\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.cyclic_QMARK_ = (function thi$ng$geom$core$cyclic_QMARK_(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IGraph$cyclic_QMARK_$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IGraph$cyclic_QMARK_$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.cyclic_QMARK_[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.cyclic_QMARK_[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IGraph.cyclic?\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.vertex_valence = (function thi$ng$geom$core$vertex_valence(_,v){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IGraph$vertex_valence$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IGraph$vertex_valence$arity$2(_,v);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.vertex_valence[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,v) : m__4434__auto__.call(null,_,v));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.vertex_valence[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,v) : m__4431__auto__.call(null,_,v));\n} else {\nthrow cljs.core.missing_protocol(\"IGraph.vertex-valence\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.vertex_neighbors = (function thi$ng$geom$core$vertex_neighbors(_,v){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IGraph$vertex_neighbors$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IGraph$vertex_neighbors$arity$2(_,v);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.vertex_neighbors[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,v) : m__4434__auto__.call(null,_,v));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.vertex_neighbors[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,v) : m__4431__auto__.call(null,_,v));\n} else {\nthrow cljs.core.missing_protocol(\"IGraph.vertex-neighbors\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.remove_vertex = (function thi$ng$geom$core$remove_vertex(_,v){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IGraph$remove_vertex$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IGraph$remove_vertex$arity$2(_,v);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.remove_vertex[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,v) : m__4434__auto__.call(null,_,v));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.remove_vertex[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,v) : m__4431__auto__.call(null,_,v));\n} else {\nthrow cljs.core.missing_protocol(\"IGraph.remove-vertex\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.replace_vertex = (function thi$ng$geom$core$replace_vertex(_,a,b){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IGraph$replace_vertex$arity$3 == null)))))){\nreturn _.thi$ng$geom$core$IGraph$replace_vertex$arity$3(_,a,b);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.replace_vertex[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(_,a,b) : m__4434__auto__.call(null,_,a,b));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.replace_vertex[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(_,a,b) : m__4431__auto__.call(null,_,a,b));\n} else {\nthrow cljs.core.missing_protocol(\"IGraph.replace-vertex\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.merge_vertices = (function thi$ng$geom$core$merge_vertices(_,a,b){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IGraph$merge_vertices$arity$3 == null)))))){\nreturn _.thi$ng$geom$core$IGraph$merge_vertices$arity$3(_,a,b);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.merge_vertices[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(_,a,b) : m__4434__auto__.call(null,_,a,b));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.merge_vertices[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(_,a,b) : m__4431__auto__.call(null,_,a,b));\n} else {\nthrow cljs.core.missing_protocol(\"IGraph.merge-vertices\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IDirectedGraph = function(){};\n\nthi.ng.geom.core.in_vertices = (function thi$ng$geom$core$in_vertices(_,v){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IDirectedGraph$in_vertices$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IDirectedGraph$in_vertices$arity$2(_,v);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.in_vertices[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,v) : m__4434__auto__.call(null,_,v));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.in_vertices[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,v) : m__4431__auto__.call(null,_,v));\n} else {\nthrow cljs.core.missing_protocol(\"IDirectedGraph.in-vertices\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.out_vertices = (function thi$ng$geom$core$out_vertices(_,v){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IDirectedGraph$out_vertices$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IDirectedGraph$out_vertices$arity$2(_,v);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.out_vertices[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,v) : m__4434__auto__.call(null,_,v));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.out_vertices[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,v) : m__4431__auto__.call(null,_,v));\n} else {\nthrow cljs.core.missing_protocol(\"IDirectedGraph.out-vertices\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IGraphConvert = function(){};\n\nthi.ng.geom.core.as_graph = (function thi$ng$geom$core$as_graph(var_args){\nvar G__44237 = arguments.length;\nswitch (G__44237) {\ncase 1:\nreturn thi.ng.geom.core.as_graph.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn thi.ng.geom.core.as_graph.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.core.as_graph.cljs$core$IFn$_invoke$arity$1 = (function (_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IGraphConvert$as_graph$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IGraphConvert$as_graph$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.as_graph[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.as_graph[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IGraphConvert.as-graph\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.as_graph.cljs$core$IFn$_invoke$arity$2 = (function (_,opts){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IGraphConvert$as_graph$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IGraphConvert$as_graph$arity$2(_,opts);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.as_graph[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,opts) : m__4434__auto__.call(null,_,opts));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.as_graph[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,opts) : m__4431__auto__.call(null,_,opts));\n} else {\nthrow cljs.core.missing_protocol(\"IGraphConvert.as-graph\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.as_graph.cljs$lang$maxFixedArity = 2;\n\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IVertexAccess = function(){};\n\nthi.ng.geom.core.vertices = (function thi$ng$geom$core$vertices(var_args){\nvar G__44239 = arguments.length;\nswitch (G__44239) {\ncase 1:\nreturn thi.ng.geom.core.vertices.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn thi.ng.geom.core.vertices.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.core.vertices.cljs$core$IFn$_invoke$arity$1 = (function (_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IVertexAccess$vertices$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IVertexAccess$vertices$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.vertices[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.vertices[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IVertexAccess.vertices\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.vertices.cljs$core$IFn$_invoke$arity$2 = (function (_,opts){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IVertexAccess$vertices$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IVertexAccess$vertices$arity$2(_,opts);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.vertices[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,opts) : m__4434__auto__.call(null,_,opts));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.vertices[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,opts) : m__4431__auto__.call(null,_,opts));\n} else {\nthrow cljs.core.missing_protocol(\"IVertexAccess.vertices\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.vertices.cljs$lang$maxFixedArity = 2;\n\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IEdgeAccess = function(){};\n\nthi.ng.geom.core.edges = (function thi$ng$geom$core$edges(var_args){\nvar G__44241 = arguments.length;\nswitch (G__44241) {\ncase 1:\nreturn thi.ng.geom.core.edges.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn thi.ng.geom.core.edges.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.core.edges.cljs$core$IFn$_invoke$arity$1 = (function (_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IEdgeAccess$edges$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IEdgeAccess$edges$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.edges[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.edges[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IEdgeAccess.edges\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.edges.cljs$core$IFn$_invoke$arity$2 = (function (_,opts){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IEdgeAccess$edges$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IEdgeAccess$edges$arity$2(_,opts);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.edges[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,opts) : m__4434__auto__.call(null,_,opts));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.edges[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,opts) : m__4431__auto__.call(null,_,opts));\n} else {\nthrow cljs.core.missing_protocol(\"IEdgeAccess.edges\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.edges.cljs$lang$maxFixedArity = 2;\n\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IFaceAccess = function(){};\n\n/**\n * Adds a new face to a mesh. The face arg is a 2-element vector\n *  of [vertices attributes], where attributes is a map of arbitrary\n *  vertex attributes. E.g. (g/add-face m [verts {:uv [[0 0] [1 0] [1 1]]}])\n */\nthi.ng.geom.core.add_face = (function thi$ng$geom$core$add_face(_,face){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IFaceAccess$add_face$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IFaceAccess$add_face$arity$2(_,face);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.add_face[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,face) : m__4434__auto__.call(null,_,face));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.add_face[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,face) : m__4431__auto__.call(null,_,face));\n} else {\nthrow cljs.core.missing_protocol(\"IFaceAccess.add-face\",_);\n}\n}\n}\n});\n\n/**\n * Returns a mesh's face collection. If called without opts arg,\n *  returns faces directly as used internally by the mesh. If opts is\n *  truthy, returns each face as vector with a vector of face vertices\n *  as its first element. If the mesh supports vertex attributes,\n *  they're returned as the 2nd element in each face vector.\n */\nthi.ng.geom.core.faces = (function thi$ng$geom$core$faces(var_args){\nvar G__44243 = arguments.length;\nswitch (G__44243) {\ncase 1:\nreturn thi.ng.geom.core.faces.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn thi.ng.geom.core.faces.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.core.faces.cljs$core$IFn$_invoke$arity$1 = (function (_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IFaceAccess$faces$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IFaceAccess$faces$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.faces[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.faces[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IFaceAccess.faces\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.faces.cljs$core$IFn$_invoke$arity$2 = (function (_,opts){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IFaceAccess$faces$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IFaceAccess$faces$arity$2(_,opts);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.faces[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,opts) : m__4434__auto__.call(null,_,opts));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.faces[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,opts) : m__4431__auto__.call(null,_,opts));\n} else {\nthrow cljs.core.missing_protocol(\"IFaceAccess.faces\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.faces.cljs$lang$maxFixedArity = 2;\n\n\n/**\n * Takes a vector of vertices defining a face in the mesh and\n *  returns updated mesh without that face.\n */\nthi.ng.geom.core.remove_face = (function thi$ng$geom$core$remove_face(_,fverts){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IFaceAccess$remove_face$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IFaceAccess$remove_face$arity$2(_,fverts);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.remove_face[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,fverts) : m__4434__auto__.call(null,_,fverts));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.remove_face[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,fverts) : m__4431__auto__.call(null,_,fverts));\n} else {\nthrow cljs.core.missing_protocol(\"IFaceAccess.remove-face\",_);\n}\n}\n}\n});\n\n/**\n * Returns seq of faces the given vertex is part of.\n */\nthi.ng.geom.core.vertex_faces = (function thi$ng$geom$core$vertex_faces(_,v){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IFaceAccess$vertex_faces$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IFaceAccess$vertex_faces$arity$2(_,v);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.vertex_faces[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,v) : m__4434__auto__.call(null,_,v));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.vertex_faces[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,v) : m__4431__auto__.call(null,_,v));\n} else {\nthrow cljs.core.missing_protocol(\"IFaceAccess.vertex-faces\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.INormalAccess = function(){};\n\nthi.ng.geom.core.compute_face_normals = (function thi$ng$geom$core$compute_face_normals(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$INormalAccess$compute_face_normals$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$INormalAccess$compute_face_normals$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.compute_face_normals[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.compute_face_normals[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"INormalAccess.compute-face-normals\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.compute_vertex_normals = (function thi$ng$geom$core$compute_vertex_normals(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$INormalAccess$compute_vertex_normals$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$INormalAccess$compute_vertex_normals$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.compute_vertex_normals[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.compute_vertex_normals[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"INormalAccess.compute-vertex-normals\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.face_normals = (function thi$ng$geom$core$face_normals(_,force_QMARK_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$INormalAccess$face_normals$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$INormalAccess$face_normals$arity$2(_,force_QMARK_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.face_normals[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,force_QMARK_) : m__4434__auto__.call(null,_,force_QMARK_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.face_normals[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,force_QMARK_) : m__4431__auto__.call(null,_,force_QMARK_));\n} else {\nthrow cljs.core.missing_protocol(\"INormalAccess.face-normals\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.face_normal = (function thi$ng$geom$core$face_normal(_,f){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$INormalAccess$face_normal$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$INormalAccess$face_normal$arity$2(_,f);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.face_normal[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,f) : m__4434__auto__.call(null,_,f));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.face_normal[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,f) : m__4431__auto__.call(null,_,f));\n} else {\nthrow cljs.core.missing_protocol(\"INormalAccess.face-normal\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.vertex_normals = (function thi$ng$geom$core$vertex_normals(_,force_QMARK_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$INormalAccess$vertex_normals$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$INormalAccess$vertex_normals$arity$2(_,force_QMARK_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.vertex_normals[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,force_QMARK_) : m__4434__auto__.call(null,_,force_QMARK_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.vertex_normals[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,force_QMARK_) : m__4431__auto__.call(null,_,force_QMARK_));\n} else {\nthrow cljs.core.missing_protocol(\"INormalAccess.vertex-normals\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.vertex_normal = (function thi$ng$geom$core$vertex_normal(_,v){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$INormalAccess$vertex_normal$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$INormalAccess$vertex_normal$arity$2(_,v);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.vertex_normal[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,v) : m__4434__auto__.call(null,_,v));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.vertex_normal[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,v) : m__4431__auto__.call(null,_,v));\n} else {\nthrow cljs.core.missing_protocol(\"INormalAccess.vertex-normal\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IAttributeAccess = function(){};\n\nthi.ng.geom.core.attribs = (function thi$ng$geom$core$attribs(var_args){\nvar G__44249 = arguments.length;\nswitch (G__44249) {\ncase 2:\nreturn thi.ng.geom.core.attribs.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn thi.ng.geom.core.attribs.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.core.attribs.cljs$core$IFn$_invoke$arity$2 = (function (_,ctx){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IAttributeAccess$attribs$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IAttributeAccess$attribs$arity$2(_,ctx);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.attribs[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,ctx) : m__4434__auto__.call(null,_,ctx));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.attribs[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,ctx) : m__4431__auto__.call(null,_,ctx));\n} else {\nthrow cljs.core.missing_protocol(\"IAttributeAccess.attribs\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.attribs.cljs$core$IFn$_invoke$arity$3 = (function (_,ctx,attr){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IAttributeAccess$attribs$arity$3 == null)))))){\nreturn _.thi$ng$geom$core$IAttributeAccess$attribs$arity$3(_,ctx,attr);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.attribs[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(_,ctx,attr) : m__4434__auto__.call(null,_,ctx,attr));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.attribs[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(_,ctx,attr) : m__4431__auto__.call(null,_,ctx,attr));\n} else {\nthrow cljs.core.missing_protocol(\"IAttributeAccess.attribs\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.attribs.cljs$lang$maxFixedArity = 3;\n\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IRawAccess = function(){};\n\nthi.ng.geom.core.raw = (function thi$ng$geom$core$raw(_,ctx){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IRawAccess$raw$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IRawAccess$raw$arity$2(_,ctx);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.raw[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,ctx) : m__4434__auto__.call(null,_,ctx));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.raw[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,ctx) : m__4431__auto__.call(null,_,ctx));\n} else {\nthrow cljs.core.missing_protocol(\"IRawAccess.raw\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IAlign = function(){};\n\n/**\n * Returns updated entity aligned with `x` in the specified manner\n */\nthi.ng.geom.core.align_with = (function thi$ng$geom$core$align_with(_,x,opts){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IAlign$align_with$arity$3 == null)))))){\nreturn _.thi$ng$geom$core$IAlign$align_with$arity$3(_,x,opts);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.align_with[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(_,x,opts) : m__4434__auto__.call(null,_,x,opts));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.align_with[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(_,x,opts) : m__4431__auto__.call(null,_,x,opts));\n} else {\nthrow cljs.core.missing_protocol(\"IAlign.align-with\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IArea = function(){};\n\n/**\n * Returns an entity's total surface area\n */\nthi.ng.geom.core.area = (function thi$ng$geom$core$area(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IArea$area$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IArea$area$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.area[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.area[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IArea.area\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IBoundary = function(){};\n\nthi.ng.geom.core.contains_entity_QMARK_ = (function thi$ng$geom$core$contains_entity_QMARK_(_,s){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IBoundary$contains_entity_QMARK_$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IBoundary$contains_entity_QMARK_$arity$2(_,s);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.contains_entity_QMARK_[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,s) : m__4434__auto__.call(null,_,s));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.contains_entity_QMARK_[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,s) : m__4431__auto__.call(null,_,s));\n} else {\nthrow cljs.core.missing_protocol(\"IBoundary.contains-entity?\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.contains_point_QMARK_ = (function thi$ng$geom$core$contains_point_QMARK_(_,p){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IBoundary$contains_point_QMARK_$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IBoundary$contains_point_QMARK_$arity$2(_,p);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.contains_point_QMARK_[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,p) : m__4434__auto__.call(null,_,p));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.contains_point_QMARK_[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,p) : m__4431__auto__.call(null,_,p));\n} else {\nthrow cljs.core.missing_protocol(\"IBoundary.contains-point?\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IBoundingCircle = function(){};\n\nthi.ng.geom.core.bounding_circle = (function thi$ng$geom$core$bounding_circle(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IBoundingCircle$bounding_circle$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IBoundingCircle$bounding_circle$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.bounding_circle[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.bounding_circle[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IBoundingCircle.bounding-circle\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IBoundingSphere = function(){};\n\nthi.ng.geom.core.bounding_sphere = (function thi$ng$geom$core$bounding_sphere(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IBoundingSphere$bounding_sphere$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IBoundingSphere$bounding_sphere$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.bounding_sphere[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.bounding_sphere[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IBoundingSphere.bounding-sphere\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IBounds = function(){};\n\n/**\n * Returns bounding rect for 2d entities or box for 3d\n */\nthi.ng.geom.core.bounds = (function thi$ng$geom$core$bounds(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IBounds$bounds$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IBounds$bounds$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.bounds[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.bounds[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IBounds.bounds\",_);\n}\n}\n}\n});\n\n/**\n * Returns entity's extent along Z (zero for 2d)\n */\nthi.ng.geom.core.depth = (function thi$ng$geom$core$depth(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IBounds$depth$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IBounds$depth$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.depth[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.depth[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IBounds.depth\",_);\n}\n}\n}\n});\n\n/**\n * Returns entity's extent along Y axis\n */\nthi.ng.geom.core.height = (function thi$ng$geom$core$height(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IBounds$height$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IBounds$height$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.height[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.height[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IBounds.height\",_);\n}\n}\n}\n});\n\n/**\n * Returns entity's extent along X axis\n */\nthi.ng.geom.core.width = (function thi$ng$geom$core$width(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IBounds$width$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IBounds$width$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.width[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.width[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IBounds.width\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.ICenter = function(){};\n\n/**\n * Returns updated entity centered around world origin or given point\n */\nthi.ng.geom.core.center = (function thi$ng$geom$core$center(var_args){\nvar G__44255 = arguments.length;\nswitch (G__44255) {\ncase 1:\nreturn thi.ng.geom.core.center.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn thi.ng.geom.core.center.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.core.center.cljs$core$IFn$_invoke$arity$1 = (function (_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$ICenter$center$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$ICenter$center$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.center[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.center[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"ICenter.center\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.center.cljs$core$IFn$_invoke$arity$2 = (function (_,p){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$ICenter$center$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$ICenter$center$arity$2(_,p);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.center[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,p) : m__4434__auto__.call(null,_,p));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.center[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,p) : m__4431__auto__.call(null,_,p));\n} else {\nthrow cljs.core.missing_protocol(\"ICenter.center\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.center.cljs$lang$maxFixedArity = 2;\n\n\n/**\n * Returns centroid of entity\n */\nthi.ng.geom.core.centroid = (function thi$ng$geom$core$centroid(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$ICenter$centroid$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$ICenter$centroid$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.centroid[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.centroid[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"ICenter.centroid\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.ICircumference = function(){};\n\n/**\n * Returns an entity's circumference\n */\nthi.ng.geom.core.circumference = (function thi$ng$geom$core$circumference(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$ICircumference$circumference$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$ICircumference$circumference$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.circumference[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.circumference[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"ICircumference.circumference\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IClassify = function(){};\n\nthi.ng.geom.core.classify_point = (function thi$ng$geom$core$classify_point(_,p){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IClassify$classify_point$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IClassify$classify_point$arity$2(_,p);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.classify_point[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,p) : m__4434__auto__.call(null,_,p));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.classify_point[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,p) : m__4431__auto__.call(null,_,p));\n} else {\nthrow cljs.core.missing_protocol(\"IClassify.classify-point\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IClear = function(){};\n\nthi.ng.geom.core.clear_STAR_ = (function thi$ng$geom$core$clear_STAR_(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IClear$clear_STAR_$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IClear$clear_STAR_$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.clear_STAR_[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.clear_STAR_[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IClear.clear*\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.clear_BANG_ = (function thi$ng$geom$core$clear_BANG_(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IClear$clear_BANG_$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IClear$clear_BANG_$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.clear_BANG_[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.clear_BANG_[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IClear.clear!\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IClip = function(){};\n\nthi.ng.geom.core.clip_with = (function thi$ng$geom$core$clip_with(_,s){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IClip$clip_with$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IClip$clip_with$arity$2(_,s);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.clip_with[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,s) : m__4434__auto__.call(null,_,s));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.clip_with[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,s) : m__4431__auto__.call(null,_,s));\n} else {\nthrow cljs.core.missing_protocol(\"IClip.clip-with\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IConvexHull = function(){};\n\nthi.ng.geom.core.convex_hull = (function thi$ng$geom$core$convex_hull(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IConvexHull$convex_hull$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IConvexHull$convex_hull$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.convex_hull[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.convex_hull[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IConvexHull.convex-hull\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IExtrude = function(){};\n\nthi.ng.geom.core.extrude = (function thi$ng$geom$core$extrude(_,opts){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IExtrude$extrude$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IExtrude$extrude$arity$2(_,opts);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.extrude[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,opts) : m__4434__auto__.call(null,_,opts));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.extrude[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,opts) : m__4431__auto__.call(null,_,opts));\n} else {\nthrow cljs.core.missing_protocol(\"IExtrude.extrude\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.extrude_shell = (function thi$ng$geom$core$extrude_shell(_,opts){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IExtrude$extrude_shell$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IExtrude$extrude_shell$arity$2(_,opts);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.extrude_shell[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,opts) : m__4434__auto__.call(null,_,opts));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.extrude_shell[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,opts) : m__4431__auto__.call(null,_,opts));\n} else {\nthrow cljs.core.missing_protocol(\"IExtrude.extrude-shell\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IFlip = function(){};\n\nthi.ng.geom.core.flip = (function thi$ng$geom$core$flip(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IFlip$flip$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IFlip$flip$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.flip[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.flip[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IFlip.flip\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IGeomContainer = function(){};\n\nthi.ng.geom.core.into = (function thi$ng$geom$core$into(_,m){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IGeomContainer$into$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IGeomContainer$into$arity$2(_,m);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.into[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,m) : m__4434__auto__.call(null,_,m));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.into[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,m) : m__4431__auto__.call(null,_,m));\n} else {\nthrow cljs.core.missing_protocol(\"IGeomContainer.into\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IInset = function(){};\n\nthi.ng.geom.core.inset = (function thi$ng$geom$core$inset(_,inset){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IInset$inset$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IInset$inset$arity$2(_,inset);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.inset[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,inset) : m__4434__auto__.call(null,_,inset));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.inset[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,inset) : m__4431__auto__.call(null,_,inset));\n} else {\nthrow cljs.core.missing_protocol(\"IInset.inset\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IIntersect = function(){};\n\nthi.ng.geom.core.intersect_line = (function thi$ng$geom$core$intersect_line(var_args){\nvar G__44263 = arguments.length;\nswitch (G__44263) {\ncase 2:\nreturn thi.ng.geom.core.intersect_line.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn thi.ng.geom.core.intersect_line.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.core.intersect_line.cljs$core$IFn$_invoke$arity$2 = (function (_,l){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IIntersect$intersect_line$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IIntersect$intersect_line$arity$2(_,l);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.intersect_line[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,l) : m__4434__auto__.call(null,_,l));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.intersect_line[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,l) : m__4431__auto__.call(null,_,l));\n} else {\nthrow cljs.core.missing_protocol(\"IIntersect.intersect-line\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.intersect_line.cljs$core$IFn$_invoke$arity$3 = (function (_,p,q){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IIntersect$intersect_line$arity$3 == null)))))){\nreturn _.thi$ng$geom$core$IIntersect$intersect_line$arity$3(_,p,q);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.intersect_line[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(_,p,q) : m__4434__auto__.call(null,_,p,q));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.intersect_line[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(_,p,q) : m__4431__auto__.call(null,_,p,q));\n} else {\nthrow cljs.core.missing_protocol(\"IIntersect.intersect-line\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.intersect_line.cljs$lang$maxFixedArity = 3;\n\n\nthi.ng.geom.core.intersect_ray = (function thi$ng$geom$core$intersect_ray(var_args){\nvar G__44267 = arguments.length;\nswitch (G__44267) {\ncase 2:\nreturn thi.ng.geom.core.intersect_ray.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn thi.ng.geom.core.intersect_ray.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.core.intersect_ray.cljs$core$IFn$_invoke$arity$2 = (function (_,r){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IIntersect$intersect_ray$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IIntersect$intersect_ray$arity$2(_,r);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.intersect_ray[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,r) : m__4434__auto__.call(null,_,r));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.intersect_ray[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,r) : m__4431__auto__.call(null,_,r));\n} else {\nthrow cljs.core.missing_protocol(\"IIntersect.intersect-ray\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.intersect_ray.cljs$core$IFn$_invoke$arity$3 = (function (_,p,dir){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IIntersect$intersect_ray$arity$3 == null)))))){\nreturn _.thi$ng$geom$core$IIntersect$intersect_ray$arity$3(_,p,dir);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.intersect_ray[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(_,p,dir) : m__4434__auto__.call(null,_,p,dir));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.intersect_ray[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(_,p,dir) : m__4431__auto__.call(null,_,p,dir));\n} else {\nthrow cljs.core.missing_protocol(\"IIntersect.intersect-ray\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.intersect_ray.cljs$lang$maxFixedArity = 3;\n\n\nthi.ng.geom.core.intersect_shape = (function thi$ng$geom$core$intersect_shape(_,s){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IIntersect$intersect_shape$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IIntersect$intersect_shape$arity$2(_,s);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.intersect_shape[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,s) : m__4434__auto__.call(null,_,s));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.intersect_shape[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,s) : m__4431__auto__.call(null,_,s));\n} else {\nthrow cljs.core.missing_protocol(\"IIntersect.intersect-shape\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IMeshConvert = function(){};\n\n/**\n * Transforms the current enitity into a mesh instance\n */\nthi.ng.geom.core.as_mesh = (function thi$ng$geom$core$as_mesh(var_args){\nvar G__44271 = arguments.length;\nswitch (G__44271) {\ncase 1:\nreturn thi.ng.geom.core.as_mesh.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn thi.ng.geom.core.as_mesh.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.core.as_mesh.cljs$core$IFn$_invoke$arity$1 = (function (_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IMeshConvert$as_mesh$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IMeshConvert$as_mesh$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.as_mesh[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.as_mesh[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IMeshConvert.as-mesh\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.as_mesh.cljs$core$IFn$_invoke$arity$2 = (function (_,opts){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IMeshConvert$as_mesh$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IMeshConvert$as_mesh$arity$2(_,opts);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.as_mesh[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,opts) : m__4434__auto__.call(null,_,opts));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.as_mesh[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,opts) : m__4431__auto__.call(null,_,opts));\n} else {\nthrow cljs.core.missing_protocol(\"IMeshConvert.as-mesh\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.as_mesh.cljs$lang$maxFixedArity = 2;\n\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IPointMap = function(){};\n\nthi.ng.geom.core.map_point = (function thi$ng$geom$core$map_point(_,p){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IPointMap$map_point$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IPointMap$map_point$arity$2(_,p);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.map_point[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,p) : m__4434__auto__.call(null,_,p));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.map_point[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,p) : m__4431__auto__.call(null,_,p));\n} else {\nthrow cljs.core.missing_protocol(\"IPointMap.map-point\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.unmap_point = (function thi$ng$geom$core$unmap_point(_,p){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IPointMap$unmap_point$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IPointMap$unmap_point$arity$2(_,p);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.unmap_point[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,p) : m__4434__auto__.call(null,_,p));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.unmap_point[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,p) : m__4431__auto__.call(null,_,p));\n} else {\nthrow cljs.core.missing_protocol(\"IPointMap.unmap-point\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IPolygonConvert = function(){};\n\n/**\n * Transforms current entity into a Polygon2 instance\n */\nthi.ng.geom.core.as_polygon = (function thi$ng$geom$core$as_polygon(var_args){\nvar G__44275 = arguments.length;\nswitch (G__44275) {\ncase 1:\nreturn thi.ng.geom.core.as_polygon.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn thi.ng.geom.core.as_polygon.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.core.as_polygon.cljs$core$IFn$_invoke$arity$1 = (function (_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IPolygonConvert$as_polygon$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IPolygonConvert$as_polygon$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.as_polygon[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.as_polygon[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IPolygonConvert.as-polygon\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.as_polygon.cljs$core$IFn$_invoke$arity$2 = (function (_,res){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IPolygonConvert$as_polygon$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IPolygonConvert$as_polygon$arity$2(_,res);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.as_polygon[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,res) : m__4434__auto__.call(null,_,res));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.as_polygon[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,res) : m__4431__auto__.call(null,_,res));\n} else {\nthrow cljs.core.missing_protocol(\"IPolygonConvert.as-polygon\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.as_polygon.cljs$lang$maxFixedArity = 2;\n\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IProximity = function(){};\n\nthi.ng.geom.core.closest_point = (function thi$ng$geom$core$closest_point(_,p){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IProximity$closest_point$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IProximity$closest_point$arity$2(_,p);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.closest_point[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,p) : m__4434__auto__.call(null,_,p));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.closest_point[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,p) : m__4431__auto__.call(null,_,p));\n} else {\nthrow cljs.core.missing_protocol(\"IProximity.closest-point\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.ISample = function(){};\n\nthi.ng.geom.core.point_at = (function thi$ng$geom$core$point_at(var_args){\nvar G__44277 = arguments.length;\nswitch (G__44277) {\ncase 2:\nreturn thi.ng.geom.core.point_at.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn thi.ng.geom.core.point_at.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.core.point_at.cljs$core$IFn$_invoke$arity$2 = (function (_,t){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$ISample$point_at$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$ISample$point_at$arity$2(_,t);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.point_at[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,t) : m__4434__auto__.call(null,_,t));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.point_at[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,t) : m__4431__auto__.call(null,_,t));\n} else {\nthrow cljs.core.missing_protocol(\"ISample.point-at\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.point_at.cljs$core$IFn$_invoke$arity$3 = (function (_,u,v){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$ISample$point_at$arity$3 == null)))))){\nreturn _.thi$ng$geom$core$ISample$point_at$arity$3(_,u,v);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.point_at[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(_,u,v) : m__4434__auto__.call(null,_,u,v));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.point_at[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(_,u,v) : m__4431__auto__.call(null,_,u,v));\n} else {\nthrow cljs.core.missing_protocol(\"ISample.point-at\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.point_at.cljs$lang$maxFixedArity = 3;\n\n\nthi.ng.geom.core.random_point = (function thi$ng$geom$core$random_point(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$ISample$random_point$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$ISample$random_point$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.random_point[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.random_point[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"ISample.random-point\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.random_point_inside = (function thi$ng$geom$core$random_point_inside(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$ISample$random_point_inside$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$ISample$random_point_inside$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.random_point_inside[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.random_point_inside[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"ISample.random-point-inside\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.sample_uniform = (function thi$ng$geom$core$sample_uniform(_,dist,include_last_QMARK_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$ISample$sample_uniform$arity$3 == null)))))){\nreturn _.thi$ng$geom$core$ISample$sample_uniform$arity$3(_,dist,include_last_QMARK_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.sample_uniform[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(_,dist,include_last_QMARK_) : m__4434__auto__.call(null,_,dist,include_last_QMARK_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.sample_uniform[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(_,dist,include_last_QMARK_) : m__4431__auto__.call(null,_,dist,include_last_QMARK_));\n} else {\nthrow cljs.core.missing_protocol(\"ISample.sample-uniform\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.sample_with_resolution = (function thi$ng$geom$core$sample_with_resolution(_,res){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$ISample$sample_with_resolution$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$ISample$sample_with_resolution$arity$2(_,res);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.sample_with_resolution[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,res) : m__4434__auto__.call(null,_,res));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.sample_with_resolution[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,res) : m__4431__auto__.call(null,_,res));\n} else {\nthrow cljs.core.missing_protocol(\"ISample.sample-with-resolution\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.ISlice = function(){};\n\nthi.ng.geom.core.slice_with = (function thi$ng$geom$core$slice_with(var_args){\nvar G__44280 = arguments.length;\nswitch (G__44280) {\ncase 2:\nreturn thi.ng.geom.core.slice_with.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn thi.ng.geom.core.slice_with.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn thi.ng.geom.core.slice_with.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.core.slice_with.cljs$core$IFn$_invoke$arity$2 = (function (_,e){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$ISlice$slice_with$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$ISlice$slice_with$arity$2(_,e);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.slice_with[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,e) : m__4434__auto__.call(null,_,e));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.slice_with[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,e) : m__4431__auto__.call(null,_,e));\n} else {\nthrow cljs.core.missing_protocol(\"ISlice.slice-with\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.slice_with.cljs$core$IFn$_invoke$arity$3 = (function (_,e,classifier){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$ISlice$slice_with$arity$3 == null)))))){\nreturn _.thi$ng$geom$core$ISlice$slice_with$arity$3(_,e,classifier);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.slice_with[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(_,e,classifier) : m__4434__auto__.call(null,_,e,classifier));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.slice_with[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(_,e,classifier) : m__4431__auto__.call(null,_,e,classifier));\n} else {\nthrow cljs.core.missing_protocol(\"ISlice.slice-with\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.slice_with.cljs$core$IFn$_invoke$arity$4 = (function (_,e,classifier,parts){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$ISlice$slice_with$arity$4 == null)))))){\nreturn _.thi$ng$geom$core$ISlice$slice_with$arity$4(_,e,classifier,parts);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.slice_with[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$4(_,e,classifier,parts) : m__4434__auto__.call(null,_,e,classifier,parts));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.slice_with[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$4(_,e,classifier,parts) : m__4431__auto__.call(null,_,e,classifier,parts));\n} else {\nthrow cljs.core.missing_protocol(\"ISlice.slice-with\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.slice_with.cljs$lang$maxFixedArity = 4;\n\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.ISubdivide = function(){};\n\nthi.ng.geom.core.subdivide = (function thi$ng$geom$core$subdivide(var_args){\nvar G__44287 = arguments.length;\nswitch (G__44287) {\ncase 1:\nreturn thi.ng.geom.core.subdivide.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn thi.ng.geom.core.subdivide.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.core.subdivide.cljs$core$IFn$_invoke$arity$1 = (function (_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$ISubdivide$subdivide$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$ISubdivide$subdivide$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.subdivide[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.subdivide[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"ISubdivide.subdivide\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.subdivide.cljs$core$IFn$_invoke$arity$2 = (function (_,opts){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$ISubdivide$subdivide$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$ISubdivide$subdivide$arity$2(_,opts);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.subdivide[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,opts) : m__4434__auto__.call(null,_,opts));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.subdivide[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,opts) : m__4431__auto__.call(null,_,opts));\n} else {\nthrow cljs.core.missing_protocol(\"ISubdivide.subdivide\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.subdivide.cljs$lang$maxFixedArity = 2;\n\n\nthi.ng.geom.core.subdivide_edge = (function thi$ng$geom$core$subdivide_edge(_,a,b,splits){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$ISubdivide$subdivide_edge$arity$4 == null)))))){\nreturn _.thi$ng$geom$core$ISubdivide$subdivide_edge$arity$4(_,a,b,splits);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.subdivide_edge[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$4(_,a,b,splits) : m__4434__auto__.call(null,_,a,b,splits));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.subdivide_edge[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$4(_,a,b,splits) : m__4431__auto__.call(null,_,a,b,splits));\n} else {\nthrow cljs.core.missing_protocol(\"ISubdivide.subdivide-edge\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.subdivide_face = (function thi$ng$geom$core$subdivide_face(_,f,p,displace,splits){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$ISubdivide$subdivide_face$arity$5 == null)))))){\nreturn _.thi$ng$geom$core$ISubdivide$subdivide_face$arity$5(_,f,p,displace,splits);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.subdivide_face[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$5(_,f,p,displace,splits) : m__4434__auto__.call(null,_,f,p,displace,splits));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.subdivide_face[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$5(_,f,p,displace,splits) : m__4431__auto__.call(null,_,f,p,displace,splits));\n} else {\nthrow cljs.core.missing_protocol(\"ISubdivide.subdivide-face\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.ITessellate = function(){};\n\nthi.ng.geom.core.tessellate = (function thi$ng$geom$core$tessellate(var_args){\nvar G__44289 = arguments.length;\nswitch (G__44289) {\ncase 1:\nreturn thi.ng.geom.core.tessellate.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn thi.ng.geom.core.tessellate.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.core.tessellate.cljs$core$IFn$_invoke$arity$1 = (function (_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$ITessellate$tessellate$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$ITessellate$tessellate$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.tessellate[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.tessellate[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"ITessellate.tessellate\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.tessellate.cljs$core$IFn$_invoke$arity$2 = (function (_,opts){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$ITessellate$tessellate$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$ITessellate$tessellate$arity$2(_,opts);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.tessellate[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,opts) : m__4434__auto__.call(null,_,opts));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.tessellate[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,opts) : m__4431__auto__.call(null,_,opts));\n} else {\nthrow cljs.core.missing_protocol(\"ITessellate.tessellate\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.tessellate.cljs$lang$maxFixedArity = 2;\n\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IVolume = function(){};\n\n/**\n * Returns an entity's inner volume.\n */\nthi.ng.geom.core.volume = (function thi$ng$geom$core$volume(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IVolume$volume$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IVolume$volume$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.volume[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.volume[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IVolume.volume\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.signed_volume = (function thi$ng$geom$core$signed_volume(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IVolume$signed_volume$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$IVolume$signed_volume$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.signed_volume[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.signed_volume[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"IVolume.signed-volume\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.ISpatialTree = function(){};\n\nthi.ng.geom.core.add_point = (function thi$ng$geom$core$add_point(_,p,d){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$ISpatialTree$add_point$arity$3 == null)))))){\nreturn _.thi$ng$geom$core$ISpatialTree$add_point$arity$3(_,p,d);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.add_point[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(_,p,d) : m__4434__auto__.call(null,_,p,d));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.add_point[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(_,p,d) : m__4431__auto__.call(null,_,p,d));\n} else {\nthrow cljs.core.missing_protocol(\"ISpatialTree.add-point\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.delete_point = (function thi$ng$geom$core$delete_point(_,p){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$ISpatialTree$delete_point$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$ISpatialTree$delete_point$arity$2(_,p);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.delete_point[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,p) : m__4434__auto__.call(null,_,p));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.delete_point[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,p) : m__4431__auto__.call(null,_,p));\n} else {\nthrow cljs.core.missing_protocol(\"ISpatialTree.delete-point\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.get_point = (function thi$ng$geom$core$get_point(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$ISpatialTree$get_point$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$ISpatialTree$get_point$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.get_point[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.get_point[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"ISpatialTree.get-point\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.get_point_data = (function thi$ng$geom$core$get_point_data(_){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$ISpatialTree$get_point_data$arity$1 == null)))))){\nreturn _.thi$ng$geom$core$ISpatialTree$get_point_data$arity$1(_);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.get_point_data[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4434__auto__.call(null,_));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.get_point_data[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$1(_) : m__4431__auto__.call(null,_));\n} else {\nthrow cljs.core.missing_protocol(\"ISpatialTree.get-point-data\",_);\n}\n}\n}\n});\n\n\n/**\n * @interface\n */\nthi.ng.geom.core.IMutableProps = function(){};\n\nthi.ng.geom.core.get_prop = (function thi$ng$geom$core$get_prop(_,k){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IMutableProps$get_prop$arity$2 == null)))))){\nreturn _.thi$ng$geom$core$IMutableProps$get_prop$arity$2(_,k);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.get_prop[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$2(_,k) : m__4434__auto__.call(null,_,k));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.get_prop[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$2(_,k) : m__4431__auto__.call(null,_,k));\n} else {\nthrow cljs.core.missing_protocol(\"IMutableProps.get-prop\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.set_prop_BANG_ = (function thi$ng$geom$core$set_prop_BANG_(_,k,v){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IMutableProps$set_prop_BANG_$arity$3 == null)))))){\nreturn _.thi$ng$geom$core$IMutableProps$set_prop_BANG_$arity$3(_,k,v);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.set_prop_BANG_[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(_,k,v) : m__4434__auto__.call(null,_,k,v));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.set_prop_BANG_[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(_,k,v) : m__4431__auto__.call(null,_,k,v));\n} else {\nthrow cljs.core.missing_protocol(\"IMutableProps.set-prop!\",_);\n}\n}\n}\n});\n\nthi.ng.geom.core.update_prop_BANG_ = (function thi$ng$geom$core$update_prop_BANG_(_,k,f){\nif((((!((_ == null)))) && ((!((_.thi$ng$geom$core$IMutableProps$update_prop_BANG_$arity$3 == null)))))){\nreturn _.thi$ng$geom$core$IMutableProps$update_prop_BANG_$arity$3(_,k,f);\n} else {\nvar x__4433__auto__ = (((_ == null))?null:_);\nvar m__4434__auto__ = (thi.ng.geom.core.update_prop_BANG_[goog.typeOf(x__4433__auto__)]);\nif((!((m__4434__auto__ == null)))){\nreturn (m__4434__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4434__auto__.cljs$core$IFn$_invoke$arity$3(_,k,f) : m__4434__auto__.call(null,_,k,f));\n} else {\nvar m__4431__auto__ = (thi.ng.geom.core.update_prop_BANG_[\"_\"]);\nif((!((m__4431__auto__ == null)))){\nreturn (m__4431__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4431__auto__.cljs$core$IFn$_invoke$arity$3(_,k,f) : m__4431__auto__.call(null,_,k,f));\n} else {\nthrow cljs.core.missing_protocol(\"IMutableProps.update-prop!\",_);\n}\n}\n}\n});\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","thi/ng/geom/core.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",21],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",["~$into"]],"~:name","~$thi.ng.geom.core","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$cljs.core","^P","~$goog","^Q"],"~:seen",["^H",[]],"~:uses",null,"~:require-macros",["^ ","^P","^P"],"~:form",["~#list",["~$ns","^K",["^V",["~:refer-clojure","~:exclude",["^I"]]]]],"~:flags",["^ "],"~:js-deps",["^ "],"~:deps",["^Q","^P"]],"^M","^K","~:resource-id",["~:shadow.build.classpath/resource","thi/ng/geom/core.cljc"],"~:compiled-at",1569963468963,"~:resource-name","thi/ng/geom/core.cljc","~:warnings",[],"~:source","(ns thi.ng.geom.core\n  (:refer-clojure :exclude [into]))\n\n(def ^:dynamic *resolution* 20)\n\n(defprotocol IDistance\n  (dist [_ a])\n  (dist-squared [_ a]))\n\n(defprotocol IHeading\n  (heading [_])\n  (heading-xy [_])\n  (heading-xz [_])\n  (heading-yz [_])\n  (angle-between [_ a])\n  (slope-xy [_])\n  (slope-xz [_])\n  (slope-yz [_]))\n\n(defprotocol INormal\n  (normal [_] [_ a]))\n\n(defprotocol IPolar\n  (as-polar [_])\n  (as-cartesian [_]))\n\n(defprotocol IVectorReduce\n  (reduce-vector [_ f xs] [_ f f2 xs]))\n\n(defprotocol IRotate\n  (rotate [_ t]))\n\n(defprotocol IRotate3D\n  (rotate-x [_ t])\n  (rotate-y [_ t])\n  (rotate-z [_ t])\n  (rotate-around-axis [_ a t]))\n\n(defprotocol IReflect\n  (reflect [_ r]))\n\n(defprotocol IScale\n  (scale [_ s])\n  (scale-size [_ s]))\n\n(defprotocol IShear\n  (shear [_ s]))\n\n(defprotocol ITransform\n  (transform [_ tx]))\n\n(defprotocol ITranslate\n  (translate [_ t]))\n\n(defprotocol IVectorTransform\n  (transform-vector [_ v]))\n\n(defprotocol IMatrixConvert\n  (as-matrix [_] [_ opts]))\n\n(defprotocol IGraph\n  (connected-components [_])\n  (cyclic? [_])\n  (vertex-valence [_ v])\n  (vertex-neighbors [_ v])\n  (remove-vertex [_ v])\n  (replace-vertex [_ a b])\n  (merge-vertices [_ a b]))\n\n(defprotocol IDirectedGraph\n  (in-vertices [_ v])\n  (out-vertices [_ v]))\n\n(defprotocol IGraphConvert\n  (as-graph [_] [_ opts]))\n\n(defprotocol IVertexAccess\n  (vertices [_] [_ opts]))\n\n(defprotocol IEdgeAccess\n  (edges [_] [_ opts]))\n\n(defprotocol IFaceAccess\n  (add-face [_ face]\n    \"Adds a new face to a mesh. The face arg is a 2-element vector\n    of [vertices attributes], where attributes is a map of arbitrary\n    vertex attributes. E.g. (g/add-face m [verts {:uv [[0 0] [1 0] [1 1]]}])\")\n  (faces [_] [_ opts]\n    \"Returns a mesh's face collection. If called without opts arg,\n    returns faces directly as used internally by the mesh. If opts is\n    truthy, returns each face as vector with a vector of face vertices\n    as its first element. If the mesh supports vertex attributes,\n    they're returned as the 2nd element in each face vector.\")\n  (remove-face [_ fverts]\n    \"Takes a vector of vertices defining a face in the mesh and\n    returns updated mesh without that face.\")\n  (vertex-faces [_ v]\n    \"Returns seq of faces the given vertex is part of.\"))\n\n(defprotocol INormalAccess\n  (compute-face-normals [_])\n  (compute-vertex-normals [_])\n  (face-normals [_ force?])\n  (face-normal [_ f])\n  (vertex-normals [_ force?])\n  (vertex-normal [_ v]))\n\n(defprotocol IAttributeAccess\n  (attribs [_ ctx] [_ ctx attr]))\n\n(defprotocol IRawAccess\n  (raw [_ ctx]))\n\n(defprotocol IAlign\n  (align-with [_ x opts]\n    \"Returns updated entity aligned with `x` in the specified manner\"))\n\n(defprotocol IArea\n  (area [_]\n    \"Returns an entity's total surface area\"))\n\n(defprotocol IBoundary\n  (contains-entity? [_ s])\n  (contains-point? [_ p]))\n\n(defprotocol IBoundingCircle\n  (bounding-circle [_]))\n\n(defprotocol IBoundingSphere\n  (bounding-sphere [_]))\n\n(defprotocol IBounds\n  (bounds [_]\n    \"Returns bounding rect for 2d entities or box for 3d\")\n  (depth [_]\n    \"Returns entity's extent along Z (zero for 2d)\")\n  (height [_]\n    \"Returns entity's extent along Y axis\")\n  (width [_]\n    \"Returns entity's extent along X axis\"))\n\n(defprotocol ICenter\n  (center [_] [_ p]\n    \"Returns updated entity centered around world origin or given point\")\n  (centroid [_]\n    \"Returns centroid of entity\"))\n\n(defprotocol ICircumference\n  (circumference [_]\n    \"Returns an entity's circumference\"))\n\n(defprotocol IClassify\n  (classify-point [_ p]))\n\n(defprotocol IClear\n  (clear* [_])\n  (clear! [_]))\n\n(defprotocol IClip\n  (clip-with [_ s]))\n\n(defprotocol IConvexHull\n  (convex-hull [_]))\n\n(defprotocol IExtrude\n  (extrude [_ opts])\n  (extrude-shell [_ opts]))\n\n(defprotocol IFlip\n  (flip [_]))\n\n(defprotocol IGeomContainer\n  (into [_ m]))\n\n(defprotocol IInset\n  (inset [_ inset]))\n\n(defprotocol IIntersect\n  (intersect-line [_ l] [_ p q])\n  (intersect-ray [_ r] [_ p dir])\n  (intersect-shape [_ s]))\n\n(defprotocol IMeshConvert\n  (as-mesh [_] [_ opts]\n    \"Transforms the current enitity into a mesh instance\"))\n\n(defprotocol IPointMap\n  (map-point [_ p])\n  (unmap-point [_ p]))\n\n(defprotocol IPolygonConvert\n  (as-polygon [_] [_ res]\n    \"Transforms current entity into a Polygon2 instance\"))\n\n(defprotocol IProximity\n  (closest-point [_ p]))\n\n(defprotocol ISample\n  (point-at [_ t] [_ u v])\n  (random-point [_])\n  (random-point-inside [_])\n  (sample-uniform [_ dist include-last?])\n  (sample-with-resolution [_ res]))\n\n(defprotocol ISlice\n  (slice-with [_ e] [_ e classifier] [_ e classifier parts]))\n\n(defprotocol ISubdivide\n  (subdivide [_] [_ opts])\n  (subdivide-edge [_ a b splits])\n  (subdivide-face [_ f p displace splits]))\n\n(defprotocol ITessellate\n  (tessellate [_] [_ opts]))\n\n(defprotocol IVolume\n  (volume [_] \"Returns an entity's inner volume.\")\n  (signed-volume [_]))\n\n(defprotocol ISpatialTree\n  (add-point [_ p d])\n  (delete-point [_ p])\n  (get-point [_])\n  (get-point-data [_]))\n\n(defprotocol IMutableProps\n  (get-prop [_ k])\n  (set-prop! [_ k v])\n  (update-prop! [_ k f]))\n","~:reader-features",["^H",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings",";;AAGA,AAAA,AAAeA;AAEf,AAAA;AAAA;;;AAAA,AAAaQ;;AAAb,AAAA,AACGL,AAAMM,AAAEC;AADX,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACSD,AAAAA;AADT,AACSA,AAAAA,AAAEC;;AADX,AAAAT,AAAA,AAAA,AAAA,AAAA,AACSQ,AAAAA;AADTP,AAAA,AAAAC,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACSO,AAAAA,AAAEC,AAAAA;;AADX,AAAAL,AAAA,AAAAF,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAE,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACSI,AAAAA,AAAEC,AAAAA;;AADX,AAAA,AAAAJ,AAAA,AACSG;;;;;;AADT,AAAA,AAEGF,AAAcE,AAAEC;AAFnB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEiBD,AAAAA;AAFjB,AAEiBA,AAAAA,AAAEC;;AAFnB,AAAAT,AAAA,AAAA,AAAA,AAAA,AAEiBQ,AAAAA;AAFjBP,AAAA,AAAAK,AAAA,AAAAH,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEiBO,AAAAA,AAAEC,AAAAA;;AAFnB,AAAAL,AAAA,AAAAE,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAF,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEiBI,AAAAA,AAAEC,AAAAA;;AAFnB,AAAA,AAAAJ,AAAA,AAEiBG;;;;;;AAFjB,AAIA,AAAA;AAAA;;;AAAA,AAAaU;;AAAb,AAAA,AACGR,AAASF;AADZ,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACYA,AAAAA;AADZ,AACYA,AAAAA;;AADZ,AAAAR,AAAA,AAAA,AAAA,AAAA,AACYQ,AAAAA;AADZP,AAAA,AAAAS,AAAA,AAAAP,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACYO,AAAAA;;AADZ,AAAAJ,AAAA,AAAAM,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAN,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACYI,AAAAA;;AADZ,AAAA,AAAAH,AAAA,AACYG;;;;;;AADZ,AAAA,AAEGG,AAAYH;AAFf,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEeA,AAAAA;AAFf,AAEeA,AAAAA;;AAFf,AAAAR,AAAA,AAAA,AAAA,AAAA,AAEeQ,AAAAA;AAFfP,AAAA,AAAAU,AAAA,AAAAR,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEeO,AAAAA;;AAFf,AAAAJ,AAAA,AAAAO,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAP,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEeI,AAAAA;;AAFf,AAAA,AAAAH,AAAA,AAEeG;;;;;;AAFf,AAAA,AAGGI,AAAYJ;AAHf,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGeA,AAAAA;AAHf,AAGeA,AAAAA;;AAHf,AAAAR,AAAA,AAAA,AAAA,AAAA,AAGeQ,AAAAA;AAHfP,AAAA,AAAAW,AAAA,AAAAT,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGeO,AAAAA;;AAHf,AAAAJ,AAAA,AAAAQ,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAR,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGeI,AAAAA;;AAHf,AAAA,AAAAH,AAAA,AAGeG;;;;;;AAHf,AAAA,AAIGK,AAAYL;AAJf,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAIeA,AAAAA;AAJf,AAIeA,AAAAA;;AAJf,AAAAR,AAAA,AAAA,AAAA,AAAA,AAIeQ,AAAAA;AAJfP,AAAA,AAAAY,AAAA,AAAAV,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAIeO,AAAAA;;AAJf,AAAAJ,AAAA,AAAAS,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAT,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAIeI,AAAAA;;AAJf,AAAA,AAAAH,AAAA,AAIeG;;;;;;AAJf,AAAA,AAKGM,AAAeN,AAAEC;AALpB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAKkBD,AAAAA;AALlB,AAKkBA,AAAAA,AAAEC;;AALpB,AAAAT,AAAA,AAAA,AAAA,AAAA,AAKkBQ,AAAAA;AALlBP,AAAA,AAAAa,AAAA,AAAAX,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAKkBO,AAAAA,AAAEC,AAAAA;;AALpB,AAAAL,AAAA,AAAAU,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAV,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAKkBI,AAAAA,AAAEC,AAAAA;;AALpB,AAAA,AAAAJ,AAAA,AAKkBG;;;;;;AALlB,AAAA,AAMGO,AAAUP;AANb,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAMaA,AAAAA;AANb,AAMaA,AAAAA;;AANb,AAAAR,AAAA,AAAA,AAAA,AAAA,AAMaQ,AAAAA;AANbP,AAAA,AAAAc,AAAA,AAAAZ,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAMaO,AAAAA;;AANb,AAAAJ,AAAA,AAAAW,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAX,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAMaI,AAAAA;;AANb,AAAA,AAAAH,AAAA,AAMaG;;;;;;AANb,AAAA,AAOGQ,AAAUR;AAPb,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAOaA,AAAAA;AAPb,AAOaA,AAAAA;;AAPb,AAAAR,AAAA,AAAA,AAAA,AAAA,AAOaQ,AAAAA;AAPbP,AAAA,AAAAe,AAAA,AAAAb,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAOaO,AAAAA;;AAPb,AAAAJ,AAAA,AAAAY,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAZ,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAOaI,AAAAA;;AAPb,AAAA,AAAAH,AAAA,AAOaG;;;;;;AAPb,AAAA,AAQGS,AAAUT;AARb,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAQaA,AAAAA;AARb,AAQaA,AAAAA;;AARb,AAAAR,AAAA,AAAA,AAAA,AAAA,AAQaQ,AAAAA;AARbP,AAAA,AAAAgB,AAAA,AAAAd,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAQaO,AAAAA;;AARb,AAAAJ,AAAA,AAAAa,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAb,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAQaI,AAAAA;;AARb,AAAA,AAAAH,AAAA,AAQaG;;;;;;AARb,AAUA,AAAA;AAAA;;;AAAA,AAAae;;AAAb,AAAA,AAAA,AAAAJ,AACGE;AADH,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AACGD,AAAQb;AADX,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACWA,AAAAA;AADX,AACWA,AAAAA;;AADX,AAAAR,AAAA,AAAA,AAAA,AAAA,AACWQ,AAAAA;AADXP,AAAA,AAAAoB,AAAA,AAAAlB,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACWO,AAAAA;;AADX,AAAAJ,AAAA,AAAAiB,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAjB,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACWI,AAAAA;;AADX,AAAA,AAAAH,AAAA,AACWG;;;;;;AADX,AAAA,AAAA,AACGa,AAAYb,AAAEC;AADjB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACeD,AAAAA;AADf,AACeA,AAAAA,AAAEC;;AADjB,AAAAT,AAAA,AAAA,AAAA,AAAA,AACeQ,AAAAA;AADfP,AAAA,AAAAoB,AAAA,AAAAlB,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACeO,AAAAA,AAAEC,AAAAA;;AADjB,AAAAL,AAAA,AAAAiB,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAjB,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACeI,AAAAA,AAAEC,AAAAA;;AADjB,AAAA,AAAAJ,AAAA,AACeG;;;;;;AADf,AAAA,AAAA,AACGa;;AADH;AAAA,AAGA,AAAA;AAAA;;;AAAA,AAAaK;;AAAb,AAAA,AACGF,AAAUhB;AADb,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACaA,AAAAA;AADb,AACaA,AAAAA;;AADb,AAAAR,AAAA,AAAA,AAAA,AAAA,AACaQ,AAAAA;AADbP,AAAA,AAAAuB,AAAA,AAAArB,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACaO,AAAAA;;AADb,AAAAJ,AAAA,AAAAoB,AAAA;AAAA,AAAA,AAAA,AAAA,AAAApB,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACaI,AAAAA;;AADb,AAAA,AAAAH,AAAA,AACaG;;;;;;AADb,AAAA,AAEGiB,AAAcjB;AAFjB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEiBA,AAAAA;AAFjB,AAEiBA,AAAAA;;AAFjB,AAAAR,AAAA,AAAA,AAAA,AAAA,AAEiBQ,AAAAA;AAFjBP,AAAA,AAAAwB,AAAA,AAAAtB,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEiBO,AAAAA;;AAFjB,AAAAJ,AAAA,AAAAqB,AAAA;AAAA,AAAA,AAAA,AAAA,AAAArB,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEiBI,AAAAA;;AAFjB,AAAA,AAAAH,AAAA,AAEiBG;;;;;;AAFjB,AAIA,AAAA;AAAA;;;AAAA,AAAaqB;;AAAb,AAAA,AAAA,AAAAV,AACGS;AADH,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAN,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AACGM,AAAepB,AAAEsB,AAAEC;AADtB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACkBvB,AAAAA;AADlB,AACkBA,AAAAA,AAAEsB,AAAEC;;AADtB,AAAA/B,AAAA,AAAA,AAAA,AAAA,AACkBQ,AAAAA;AADlBP,AAAA,AAAA2B,AAAA,AAAAzB,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACkBO,AAAAA,AAAEsB,AAAAA,AAAEC,AAAAA;;AADtB,AAAA3B,AAAA,AAAAwB,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAxB,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACkBI,AAAAA,AAAEsB,AAAAA,AAAEC,AAAAA;;AADtB,AAAA,AAAA1B,AAAA,AACkBG;;;;;;AADlB,AAAA,AAAA,AACGoB,AAAwBpB,AAAEsB,AAAEE,AAAGD;AADlC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAC2BvB,AAAAA;AAD3B,AAC2BA,AAAAA,AAAEsB,AAAEE,AAAGD;;AADlC,AAAA/B,AAAA,AAAA,AAAA,AAAA,AAC2BQ,AAAAA;AAD3BP,AAAA,AAAA2B,AAAA,AAAAzB,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAC2BO,AAAAA,AAAEsB,AAAAA,AAAEE,AAAAA,AAAGD,AAAAA;;AADlC,AAAA3B,AAAA,AAAAwB,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAxB,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAC2BI,AAAAA,AAAEsB,AAAAA,AAAEE,AAAAA,AAAGD,AAAAA;;AADlC,AAAA,AAAA1B,AAAA,AAC2BG;;;;;;AAD3B,AAAA,AAAA,AACGoB;;AADH;AAAA,AAGA,AAAA;AAAA;;;AAAA,AAAaM;;AAAb,AAAA,AACGD,AAAQzB,AAAE2B;AADb,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACW3B,AAAAA;AADX,AACWA,AAAAA,AAAE2B;;AADb,AAAAnC,AAAA,AAAA,AAAA,AAAA,AACWQ,AAAAA;AADXP,AAAA,AAAAgC,AAAA,AAAA9B,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACWO,AAAAA,AAAE2B,AAAAA;;AADb,AAAA/B,AAAA,AAAA6B,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA7B,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACWI,AAAAA,AAAE2B,AAAAA;;AADb,AAAA,AAAA9B,AAAA,AACWG;;;;;;AADX,AAGA,AAAA;AAAA;;;AAAA,AAAagC;;AAAb,AAAA,AACGJ,AAAU5B,AAAE2B;AADf,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACa3B,AAAAA;AADb,AACaA,AAAAA,AAAE2B;;AADf,AAAAnC,AAAA,AAAA,AAAA,AAAA,AACaQ,AAAAA;AADbP,AAAA,AAAAmC,AAAA,AAAAjC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACaO,AAAAA,AAAE2B,AAAAA;;AADf,AAAA/B,AAAA,AAAAgC,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAhC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACaI,AAAAA,AAAE2B,AAAAA;;AADf,AAAA,AAAA9B,AAAA,AACaG;;;;;;AADb,AAAA,AAEG6B,AAAU7B,AAAE2B;AAFf,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEa3B,AAAAA;AAFb,AAEaA,AAAAA,AAAE2B;;AAFf,AAAAnC,AAAA,AAAA,AAAA,AAAA,AAEaQ,AAAAA;AAFbP,AAAA,AAAAoC,AAAA,AAAAlC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEaO,AAAAA,AAAE2B,AAAAA;;AAFf,AAAA/B,AAAA,AAAAiC,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAjC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEaI,AAAAA,AAAE2B,AAAAA;;AAFf,AAAA,AAAA9B,AAAA,AAEaG;;;;;;AAFb,AAAA,AAGG8B,AAAU9B,AAAE2B;AAHf,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGa3B,AAAAA;AAHb,AAGaA,AAAAA,AAAE2B;;AAHf,AAAAnC,AAAA,AAAA,AAAA,AAAA,AAGaQ,AAAAA;AAHbP,AAAA,AAAAqC,AAAA,AAAAnC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGaO,AAAAA,AAAE2B,AAAAA;;AAHf,AAAA/B,AAAA,AAAAkC,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAlC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGaI,AAAAA,AAAE2B,AAAAA;;AAHf,AAAA,AAAA9B,AAAA,AAGaG;;;;;;AAHb,AAAA,AAIG+B,AAAoB/B,AAAEC,AAAE0B;AAJ3B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAIuB3B,AAAAA;AAJvB,AAIuBA,AAAAA,AAAEC,AAAE0B;;AAJ3B,AAAAnC,AAAA,AAAA,AAAA,AAAA,AAIuBQ,AAAAA;AAJvBP,AAAA,AAAAsC,AAAA,AAAApC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAIuBO,AAAAA,AAAEC,AAAAA,AAAE0B,AAAAA;;AAJ3B,AAAA/B,AAAA,AAAAmC,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAnC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAIuBI,AAAAA,AAAEC,AAAAA,AAAE0B,AAAAA;;AAJ3B,AAAA,AAAA9B,AAAA,AAIuBG;;;;;;AAJvB,AAMA,AAAA;AAAA;;;AAAA,AAAakC;;AAAb,AAAA,AACGD,AAASjC,AAAEmC;AADd,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACYnC,AAAAA;AADZ,AACYA,AAAAA,AAAEmC;;AADd,AAAA3C,AAAA,AAAA,AAAA,AAAA,AACYQ,AAAAA;AADZP,AAAA,AAAAwC,AAAA,AAAAtC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACYO,AAAAA,AAAEmC,AAAAA;;AADd,AAAAvC,AAAA,AAAAqC,AAAA;AAAA,AAAA,AAAA,AAAA,AAAArC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACYI,AAAAA,AAAEmC,AAAAA;;AADd,AAAA,AAAAtC,AAAA,AACYG;;;;;;AADZ,AAGA,AAAA;AAAA;;;AAAA,AAAasC;;AAAb,AAAA,AACGF,AAAOpC,AAAEuC;AADZ,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACUvC,AAAAA;AADV,AACUA,AAAAA,AAAEuC;;AADZ,AAAA/C,AAAA,AAAA,AAAA,AAAA,AACUQ,AAAAA;AADVP,AAAA,AAAA2C,AAAA,AAAAzC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACUO,AAAAA,AAAEuC,AAAAA;;AADZ,AAAA3C,AAAA,AAAAwC,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAxC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACUI,AAAAA,AAAEuC,AAAAA;;AADZ,AAAA,AAAA1C,AAAA,AACUG;;;;;;AADV,AAAA,AAEGqC,AAAYrC,AAAEuC;AAFjB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEevC,AAAAA;AAFf,AAEeA,AAAAA,AAAEuC;;AAFjB,AAAA/C,AAAA,AAAA,AAAA,AAAA,AAEeQ,AAAAA;AAFfP,AAAA,AAAA4C,AAAA,AAAA1C,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEeO,AAAAA,AAAEuC,AAAAA;;AAFjB,AAAA3C,AAAA,AAAAyC,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAzC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEeI,AAAAA,AAAEuC,AAAAA;;AAFjB,AAAA,AAAA1C,AAAA,AAEeG;;;;;;AAFf,AAIA,AAAA;AAAA;;;AAAA,AAAayC;;AAAb,AAAA,AACGD,AAAOxC,AAAEuC;AADZ,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACUvC,AAAAA;AADV,AACUA,AAAAA,AAAEuC;;AADZ,AAAA/C,AAAA,AAAA,AAAA,AAAA,AACUQ,AAAAA;AADVP,AAAA,AAAA+C,AAAA,AAAA7C,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACUO,AAAAA,AAAEuC,AAAAA;;AADZ,AAAA3C,AAAA,AAAA4C,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA5C,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACUI,AAAAA,AAAEuC,AAAAA;;AADZ,AAAA,AAAA1C,AAAA,AACUG;;;;;;AADV,AAGA,AAAA;AAAA;;;AAAA,AAAa2C;;AAAb,AAAA,AACGD,AAAW1C,AAAE4C;AADhB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACc5C,AAAAA;AADd,AACcA,AAAAA,AAAE4C;;AADhB,AAAApD,AAAA,AAAA,AAAA,AAAA,AACcQ,AAAAA;AADdP,AAAA,AAAAiD,AAAA,AAAA/C,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACcO,AAAAA,AAAE4C,AAAAA;;AADhB,AAAAhD,AAAA,AAAA8C,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA9C,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACcI,AAAAA,AAAE4C,AAAAA;;AADhB,AAAA,AAAA/C,AAAA,AACcG;;;;;;AADd,AAGA,AAAA;AAAA;;;AAAA,AAAa8C;;AAAb,AAAA,AACGD,AAAW7C,AAAE2B;AADhB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACc3B,AAAAA;AADd,AACcA,AAAAA,AAAE2B;;AADhB,AAAAnC,AAAA,AAAA,AAAA,AAAA,AACcQ,AAAAA;AADdP,AAAA,AAAAoD,AAAA,AAAAlD,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACcO,AAAAA,AAAE2B,AAAAA;;AADhB,AAAA/B,AAAA,AAAAiD,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAjD,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACcI,AAAAA,AAAE2B,AAAAA;;AADhB,AAAA,AAAA9B,AAAA,AACcG;;;;;;AADd,AAGA,AAAA;AAAA;;;AAAA,AAAagD;;AAAb,AAAA,AACGD,AAAkB/C,AAAEiD;AADvB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACqBjD,AAAAA;AADrB,AACqBA,AAAAA,AAAEiD;;AADvB,AAAAzD,AAAA,AAAA,AAAA,AAAA,AACqBQ,AAAAA;AADrBP,AAAA,AAAAsD,AAAA,AAAApD,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACqBO,AAAAA,AAAEiD,AAAAA;;AADvB,AAAArD,AAAA,AAAAmD,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAnD,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACqBI,AAAAA,AAAEiD,AAAAA;;AADvB,AAAA,AAAApD,AAAA,AACqBG;;;;;;AADrB,AAGA,AAAA;AAAA;;;AAAA,AAAaoD;;AAAb,AAAA,AAAA,AAAAzC,AACGwC;AADH,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAArC,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AACGqC,AAAWnD;AADd,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACcA,AAAAA;AADd,AACcA,AAAAA;;AADd,AAAAR,AAAA,AAAA,AAAA,AAAA,AACcQ,AAAAA;AADdP,AAAA,AAAA0D,AAAA,AAAAxD,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACcO,AAAAA;;AADd,AAAAJ,AAAA,AAAAuD,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAvD,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACcI,AAAAA;;AADd,AAAA,AAAAH,AAAA,AACcG;;;;;;AADd,AAAA,AAAA,AACGmD,AAAenD,AAAEqD;AADpB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACkBrD,AAAAA;AADlB,AACkBA,AAAAA,AAAEqD;;AADpB,AAAA7D,AAAA,AAAA,AAAA,AAAA,AACkBQ,AAAAA;AADlBP,AAAA,AAAA0D,AAAA,AAAAxD,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACkBO,AAAAA,AAAEqD,AAAAA;;AADpB,AAAAzD,AAAA,AAAAuD,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAvD,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACkBI,AAAAA,AAAEqD,AAAAA;;AADpB,AAAA,AAAAxD,AAAA,AACkBG;;;;;;AADlB,AAAA,AAAA,AACGmD;;AADH;AAAA,AAGA,AAAA;AAAA;;;AAAA,AAAaU;;AAAb,AAAA,AACGP,AAAsBtD;AADzB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACyBA,AAAAA;AADzB,AACyBA,AAAAA;;AADzB,AAAAR,AAAA,AAAA,AAAA,AAAA,AACyBQ,AAAAA;AADzBP,AAAA,AAAA6D,AAAA,AAAA3D,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACyBO,AAAAA;;AADzB,AAAAJ,AAAA,AAAA0D,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA1D,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACyBI,AAAAA;;AADzB,AAAA,AAAAH,AAAA,AACyBG;;;;;;AADzB,AAAA,AAEGuD,AAASvD;AAFZ,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEYA,AAAAA;AAFZ,AAEYA,AAAAA;;AAFZ,AAAAR,AAAA,AAAA,AAAA,AAAA,AAEYQ,AAAAA;AAFZP,AAAA,AAAA8D,AAAA,AAAA5D,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEYO,AAAAA;;AAFZ,AAAAJ,AAAA,AAAA2D,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA3D,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEYI,AAAAA;;AAFZ,AAAA,AAAAH,AAAA,AAEYG;;;;;;AAFZ,AAAA,AAGGwD,AAAgBxD,AAAEiD;AAHrB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGmBjD,AAAAA;AAHnB,AAGmBA,AAAAA,AAAEiD;;AAHrB,AAAAzD,AAAA,AAAA,AAAA,AAAA,AAGmBQ,AAAAA;AAHnBP,AAAA,AAAA+D,AAAA,AAAA7D,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGmBO,AAAAA,AAAEiD,AAAAA;;AAHrB,AAAArD,AAAA,AAAA4D,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA5D,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGmBI,AAAAA,AAAEiD,AAAAA;;AAHrB,AAAA,AAAApD,AAAA,AAGmBG;;;;;;AAHnB,AAAA,AAIGyD,AAAkBzD,AAAEiD;AAJvB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAIqBjD,AAAAA;AAJrB,AAIqBA,AAAAA,AAAEiD;;AAJvB,AAAAzD,AAAA,AAAA,AAAA,AAAA,AAIqBQ,AAAAA;AAJrBP,AAAA,AAAAgE,AAAA,AAAA9D,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAIqBO,AAAAA,AAAEiD,AAAAA;;AAJvB,AAAArD,AAAA,AAAA6D,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA7D,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAIqBI,AAAAA,AAAEiD,AAAAA;;AAJvB,AAAA,AAAApD,AAAA,AAIqBG;;;;;;AAJrB,AAAA,AAKG0D,AAAe1D,AAAEiD;AALpB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAKkBjD,AAAAA;AALlB,AAKkBA,AAAAA,AAAEiD;;AALpB,AAAAzD,AAAA,AAAA,AAAA,AAAA,AAKkBQ,AAAAA;AALlBP,AAAA,AAAAiE,AAAA,AAAA/D,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAKkBO,AAAAA,AAAEiD,AAAAA;;AALpB,AAAArD,AAAA,AAAA8D,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA9D,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAKkBI,AAAAA,AAAEiD,AAAAA;;AALpB,AAAA,AAAApD,AAAA,AAKkBG;;;;;;AALlB,AAAA,AAMG2D,AAAgB3D,AAAEC,AAAE6D;AANvB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAMmB9D,AAAAA;AANnB,AAMmBA,AAAAA,AAAEC,AAAE6D;;AANvB,AAAAtE,AAAA,AAAA,AAAA,AAAA,AAMmBQ,AAAAA;AANnBP,AAAA,AAAAkE,AAAA,AAAAhE,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAMmBO,AAAAA,AAAEC,AAAAA,AAAE6D,AAAAA;;AANvB,AAAAlE,AAAA,AAAA+D,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA/D,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAMmBI,AAAAA,AAAEC,AAAAA,AAAE6D,AAAAA;;AANvB,AAAA,AAAAjE,AAAA,AAMmBG;;;;;;AANnB,AAAA,AAOG4D,AAAgB5D,AAAEC,AAAE6D;AAPvB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAOmB9D,AAAAA;AAPnB,AAOmBA,AAAAA,AAAEC,AAAE6D;;AAPvB,AAAAtE,AAAA,AAAA,AAAA,AAAA,AAOmBQ,AAAAA;AAPnBP,AAAA,AAAAmE,AAAA,AAAAjE,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAOmBO,AAAAA,AAAEC,AAAAA,AAAE6D,AAAAA;;AAPvB,AAAAlE,AAAA,AAAAgE,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAhE,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAOmBI,AAAAA,AAAEC,AAAAA,AAAE6D,AAAAA;;AAPvB,AAAA,AAAAjE,AAAA,AAOmBG;;;;;;AAPnB,AASA,AAAA;AAAA;;;AAAA,AAAaiE;;AAAb,AAAA,AACGF,AAAa/D,AAAEiD;AADlB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACgBjD,AAAAA;AADhB,AACgBA,AAAAA,AAAEiD;;AADlB,AAAAzD,AAAA,AAAA,AAAA,AAAA,AACgBQ,AAAAA;AADhBP,AAAA,AAAAsE,AAAA,AAAApE,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACgBO,AAAAA,AAAEiD,AAAAA;;AADlB,AAAArD,AAAA,AAAAmE,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAnE,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACgBI,AAAAA,AAAEiD,AAAAA;;AADlB,AAAA,AAAApD,AAAA,AACgBG;;;;;;AADhB,AAAA,AAEGgE,AAAchE,AAAEiD;AAFnB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEiBjD,AAAAA;AAFjB,AAEiBA,AAAAA,AAAEiD;;AAFnB,AAAAzD,AAAA,AAAA,AAAA,AAAA,AAEiBQ,AAAAA;AAFjBP,AAAA,AAAAuE,AAAA,AAAArE,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEiBO,AAAAA,AAAEiD,AAAAA;;AAFnB,AAAArD,AAAA,AAAAoE,AAAA;AAAA,AAAA,AAAA,AAAA,AAAApE,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEiBI,AAAAA,AAAEiD,AAAAA;;AAFnB,AAAA,AAAApD,AAAA,AAEiBG;;;;;;AAFjB,AAIA,AAAA;AAAA;;;AAAA,AAAaoE;;AAAb,AAAA,AAAA,AAAAzD,AACGwD;AADH,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAArD,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AACGqD,AAAUnE;AADb,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACaA,AAAAA;AADb,AACaA,AAAAA;;AADb,AAAAR,AAAA,AAAA,AAAA,AAAA,AACaQ,AAAAA;AADbP,AAAA,AAAA0E,AAAA,AAAAxE,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACaO,AAAAA;;AADb,AAAAJ,AAAA,AAAAuE,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAvE,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACaI,AAAAA;;AADb,AAAA,AAAAH,AAAA,AACaG;;;;;;AADb,AAAA,AAAA,AACGmE,AAAcnE,AAAEqD;AADnB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACiBrD,AAAAA;AADjB,AACiBA,AAAAA,AAAEqD;;AADnB,AAAA7D,AAAA,AAAA,AAAA,AAAA,AACiBQ,AAAAA;AADjBP,AAAA,AAAA0E,AAAA,AAAAxE,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACiBO,AAAAA,AAAEqD,AAAAA;;AADnB,AAAAzD,AAAA,AAAAuE,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAvE,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACiBI,AAAAA,AAAEqD,AAAAA;;AADnB,AAAA,AAAAxD,AAAA,AACiBG;;;;;;AADjB,AAAA,AAAA,AACGmE;;AADH;AAAA,AAGA,AAAA;AAAA;;;AAAA,AAAaI;;AAAb,AAAA,AAAA,AAAA5D,AACG2D;AADH,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAxD,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AACGwD,AAAUtE;AADb,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACaA,AAAAA;AADb,AACaA,AAAAA;;AADb,AAAAR,AAAA,AAAA,AAAA,AAAA,AACaQ,AAAAA;AADbP,AAAA,AAAA6E,AAAA,AAAA3E,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACaO,AAAAA;;AADb,AAAAJ,AAAA,AAAA0E,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA1E,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACaI,AAAAA;;AADb,AAAA,AAAAH,AAAA,AACaG;;;;;;AADb,AAAA,AAAA,AACGsE,AAActE,AAAEqD;AADnB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACiBrD,AAAAA;AADjB,AACiBA,AAAAA,AAAEqD;;AADnB,AAAA7D,AAAA,AAAA,AAAA,AAAA,AACiBQ,AAAAA;AADjBP,AAAA,AAAA6E,AAAA,AAAA3E,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACiBO,AAAAA,AAAEqD,AAAAA;;AADnB,AAAAzD,AAAA,AAAA0E,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA1E,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACiBI,AAAAA,AAAEqD,AAAAA;;AADnB,AAAA,AAAAxD,AAAA,AACiBG;;;;;;AADjB,AAAA,AAAA,AACGsE;;AADH;AAAA,AAGA,AAAA;AAAA;;;AAAA,AAAaI;;AAAb,AAAA,AAAA,AAAA/D,AACG8D;AADH,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAA3D,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AACG2D,AAAOzE;AADV,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACUA,AAAAA;AADV,AACUA,AAAAA;;AADV,AAAAR,AAAA,AAAA,AAAA,AAAA,AACUQ,AAAAA;AADVP,AAAA,AAAAgF,AAAA,AAAA9E,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACUO,AAAAA;;AADV,AAAAJ,AAAA,AAAA6E,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA7E,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACUI,AAAAA;;AADV,AAAA,AAAAH,AAAA,AACUG;;;;;;AADV,AAAA,AAAA,AACGyE,AAAWzE,AAAEqD;AADhB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACcrD,AAAAA;AADd,AACcA,AAAAA,AAAEqD;;AADhB,AAAA7D,AAAA,AAAA,AAAA,AAAA,AACcQ,AAAAA;AADdP,AAAA,AAAAgF,AAAA,AAAA9E,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACcO,AAAAA,AAAEqD,AAAAA;;AADhB,AAAAzD,AAAA,AAAA6E,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA7E,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACcI,AAAAA,AAAEqD,AAAAA;;AADhB,AAAA,AAAAxD,AAAA,AACcG;;;;;;AADd,AAAA,AAAA,AACGyE;;AADH;AAAA,AAGA,AAAA;AAAA;;;AAAA,AAAaO;;AAAb;;;;;AAAA,AACGL,AAAU3E,AAAEiF;AADf,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACajF,AAAAA;AADb,AACaA,AAAAA,AAAEiF;;AADf,AAAAzF,AAAA,AAAA,AAAA,AAAA,AACaQ,AAAAA;AADbP,AAAA,AAAAkF,AAAA,AAAAhF,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACaO,AAAAA,AAAEiF,AAAAA;;AADf,AAAArF,AAAA,AAAA+E,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA/E,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACaI,AAAAA,AAAEiF,AAAAA;;AADf,AAAA,AAAApF,AAAA,AACaG;;;;;;AADb,AAAA;;;;;;;AAAA,AAAAW,AAKGkE;AALH,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAA/D,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAKG+D,AAAO7E;AALV,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAKUA,AAAAA;AALV,AAKUA,AAAAA;;AALV,AAAAR,AAAA,AAAA,AAAA,AAAA,AAKUQ,AAAAA;AALVP,AAAA,AAAAoF,AAAA,AAAAlF,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAKUO,AAAAA;;AALV,AAAAJ,AAAA,AAAAiF,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAjF,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAKUI,AAAAA;;AALV,AAAA,AAAAH,AAAA,AAKUG;;;;;;AALV,AAAA,AAAA,AAKG6E,AAAW7E,AAAEqD;AALhB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAKcrD,AAAAA;AALd,AAKcA,AAAAA,AAAEqD;;AALhB,AAAA7D,AAAA,AAAA,AAAA,AAAA,AAKcQ,AAAAA;AALdP,AAAA,AAAAoF,AAAA,AAAAlF,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAKcO,AAAAA,AAAEqD,AAAAA;;AALhB,AAAAzD,AAAA,AAAAiF,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAjF,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAKcI,AAAAA,AAAEqD,AAAAA;;AALhB,AAAA,AAAAxD,AAAA,AAKcG;;;;;;AALd,AAAA,AAAA,AAKG6E;;AALH;AAAA;;;;AAAA,AAWGC,AAAa9E,AAAEkF;AAXlB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAWgBlF,AAAAA;AAXhB,AAWgBA,AAAAA,AAAEkF;;AAXlB,AAAA1F,AAAA,AAAA,AAAA,AAAA,AAWgBQ,AAAAA;AAXhBP,AAAA,AAAAqF,AAAA,AAAAnF,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAWgBO,AAAAA,AAAEkF,AAAAA;;AAXlB,AAAAtF,AAAA,AAAAkF,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAlF,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAWgBI,AAAAA,AAAEkF,AAAAA;;AAXlB,AAAA,AAAArF,AAAA,AAWgBG;;;;;;AAXhB;;;AAAA,AAcG+E,AAAc/E,AAAEiD;AAdnB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAciBjD,AAAAA;AAdjB,AAciBA,AAAAA,AAAEiD;;AAdnB,AAAAzD,AAAA,AAAA,AAAA,AAAA,AAciBQ,AAAAA;AAdjBP,AAAA,AAAAsF,AAAA,AAAApF,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAciBO,AAAAA,AAAEiD,AAAAA;;AAdnB,AAAArD,AAAA,AAAAmF,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAnF,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAciBI,AAAAA,AAAEiD,AAAAA;;AAdnB,AAAA,AAAApD,AAAA,AAciBG;;;;;;AAdjB,AAiBA,AAAA;AAAA;;;AAAA,AAAayF;;AAAb,AAAA,AACGN,AAAsBnF;AADzB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACyBA,AAAAA;AADzB,AACyBA,AAAAA;;AADzB,AAAAR,AAAA,AAAA,AAAA,AAAA,AACyBQ,AAAAA;AADzBP,AAAA,AAAA0F,AAAA,AAAAxF,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACyBO,AAAAA;;AADzB,AAAAJ,AAAA,AAAAuF,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAvF,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACyBI,AAAAA;;AADzB,AAAA,AAAAH,AAAA,AACyBG;;;;;;AADzB,AAAA,AAEGoF,AAAwBpF;AAF3B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAE2BA,AAAAA;AAF3B,AAE2BA,AAAAA;;AAF3B,AAAAR,AAAA,AAAA,AAAA,AAAA,AAE2BQ,AAAAA;AAF3BP,AAAA,AAAA2F,AAAA,AAAAzF,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAE2BO,AAAAA;;AAF3B,AAAAJ,AAAA,AAAAwF,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAxF,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAE2BI,AAAAA;;AAF3B,AAAA,AAAAH,AAAA,AAE2BG;;;;;;AAF3B,AAAA,AAGGqF,AAAcrF,AAAE0F;AAHnB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGiB1F,AAAAA;AAHjB,AAGiBA,AAAAA,AAAE0F;;AAHnB,AAAAlG,AAAA,AAAA,AAAA,AAAA,AAGiBQ,AAAAA;AAHjBP,AAAA,AAAA4F,AAAA,AAAA1F,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGiBO,AAAAA,AAAE0F,AAAAA;;AAHnB,AAAA9F,AAAA,AAAAyF,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAzF,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGiBI,AAAAA,AAAE0F,AAAAA;;AAHnB,AAAA,AAAA7F,AAAA,AAGiBG;;;;;;AAHjB,AAAA,AAIGsF,AAAatF,AAAEsB;AAJlB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAIgBtB,AAAAA;AAJhB,AAIgBA,AAAAA,AAAEsB;;AAJlB,AAAA9B,AAAA,AAAA,AAAA,AAAA,AAIgBQ,AAAAA;AAJhBP,AAAA,AAAA6F,AAAA,AAAA3F,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAIgBO,AAAAA,AAAEsB,AAAAA;;AAJlB,AAAA1B,AAAA,AAAA0F,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA1F,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAIgBI,AAAAA,AAAEsB,AAAAA;;AAJlB,AAAA,AAAAzB,AAAA,AAIgBG;;;;;;AAJhB,AAAA,AAKGuF,AAAgBvF,AAAE0F;AALrB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAKmB1F,AAAAA;AALnB,AAKmBA,AAAAA,AAAE0F;;AALrB,AAAAlG,AAAA,AAAA,AAAA,AAAA,AAKmBQ,AAAAA;AALnBP,AAAA,AAAA8F,AAAA,AAAA5F,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAKmBO,AAAAA,AAAE0F,AAAAA;;AALrB,AAAA9F,AAAA,AAAA2F,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA3F,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAKmBI,AAAAA,AAAE0F,AAAAA;;AALrB,AAAA,AAAA7F,AAAA,AAKmBG;;;;;;AALnB,AAAA,AAMGwF,AAAexF,AAAEiD;AANpB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAMkBjD,AAAAA;AANlB,AAMkBA,AAAAA,AAAEiD;;AANpB,AAAAzD,AAAA,AAAA,AAAA,AAAA,AAMkBQ,AAAAA;AANlBP,AAAA,AAAA+F,AAAA,AAAA7F,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAMkBO,AAAAA,AAAEiD,AAAAA;;AANpB,AAAArD,AAAA,AAAA4F,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA5F,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAMkBI,AAAAA,AAAEiD,AAAAA;;AANpB,AAAA,AAAApD,AAAA,AAMkBG;;;;;;AANlB,AAQA,AAAA;AAAA;;;AAAA,AAAa6F;;AAAb,AAAA,AAAA,AAAAlF,AACGiF;AADH,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAA9E,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AACG8E,AAAS5F,AAAE8F;AADd,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACY9F,AAAAA;AADZ,AACYA,AAAAA,AAAE8F;;AADd,AAAAtG,AAAA,AAAA,AAAA,AAAA,AACYQ,AAAAA;AADZP,AAAA,AAAAmG,AAAA,AAAAjG,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACYO,AAAAA,AAAE8F,AAAAA;;AADd,AAAAlG,AAAA,AAAAgG,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAhG,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACYI,AAAAA,AAAE8F,AAAAA;;AADd,AAAA,AAAAjG,AAAA,AACYG;;;;;;AADZ,AAAA,AAAA,AACG4F,AAAiB5F,AAAE8F,AAAIC;AAD1B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACoB/F,AAAAA;AADpB,AACoBA,AAAAA,AAAE8F,AAAIC;;AAD1B,AAAAvG,AAAA,AAAA,AAAA,AAAA,AACoBQ,AAAAA;AADpBP,AAAA,AAAAmG,AAAA,AAAAjG,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACoBO,AAAAA,AAAE8F,AAAAA,AAAIC,AAAAA;;AAD1B,AAAAnG,AAAA,AAAAgG,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAhG,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACoBI,AAAAA,AAAE8F,AAAAA,AAAIC,AAAAA;;AAD1B,AAAA,AAAAlG,AAAA,AACoBG;;;;;;AADpB,AAAA,AAAA,AACG4F;;AADH;AAAA,AAGA,AAAA;AAAA;;;AAAA,AAAaK;;AAAb,AAAA,AACGD,AAAKhG,AAAE8F;AADV,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACQ9F,AAAAA;AADR,AACQA,AAAAA,AAAE8F;;AADV,AAAAtG,AAAA,AAAA,AAAA,AAAA,AACQQ,AAAAA;AADRP,AAAA,AAAAuG,AAAA,AAAArG,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACQO,AAAAA,AAAE8F,AAAAA;;AADV,AAAAlG,AAAA,AAAAoG,AAAA;AAAA,AAAA,AAAA,AAAA,AAAApG,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACQI,AAAAA,AAAE8F,AAAAA;;AADV,AAAA,AAAAjG,AAAA,AACQG;;;;;;AADR,AAGA,AAAA;AAAA;;;AAAA,AAAamG;;AAAb;;;AAAA,AACGD,AAAYlG,AAAEoG,AAAE/C;AADnB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACerD,AAAAA;AADf,AACeA,AAAAA,AAAEoG,AAAE/C;;AADnB,AAAA7D,AAAA,AAAA,AAAA,AAAA,AACeQ,AAAAA;AADfP,AAAA,AAAAyG,AAAA,AAAAvG,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACeO,AAAAA,AAAEoG,AAAAA,AAAE/C,AAAAA;;AADnB,AAAAzD,AAAA,AAAAsG,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAtG,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACeI,AAAAA,AAAEoG,AAAAA,AAAE/C,AAAAA;;AADnB,AAAA,AAAAxD,AAAA,AACeG;;;;;;AADf,AAIA,AAAA;AAAA;;;AAAA,AAAasG;;AAAb;;;AAAA,AACGD,AAAMrG;AADT,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACSA,AAAAA;AADT,AACSA,AAAAA;;AADT,AAAAR,AAAA,AAAA,AAAA,AAAA,AACSQ,AAAAA;AADTP,AAAA,AAAA4G,AAAA,AAAA1G,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACSO,AAAAA;;AADT,AAAAJ,AAAA,AAAAyG,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAzG,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACSI,AAAAA;;AADT,AAAA,AAAAH,AAAA,AACSG;;;;;;AADT,AAIA,AAAA;AAAA;;;AAAA,AAAayG;;AAAb,AAAA,AACGF,AAAkBvG,AAAEuC;AADvB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACqBvC,AAAAA;AADrB,AACqBA,AAAAA,AAAEuC;;AADvB,AAAA/C,AAAA,AAAA,AAAA,AAAA,AACqBQ,AAAAA;AADrBP,AAAA,AAAA8G,AAAA,AAAA5G,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACqBO,AAAAA,AAAEuC,AAAAA;;AADvB,AAAA3C,AAAA,AAAA2G,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA3G,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACqBI,AAAAA,AAAEuC,AAAAA;;AADvB,AAAA,AAAA1C,AAAA,AACqBG;;;;;;AADrB,AAAA,AAEGwG,AAAiBxG,AAAE0G;AAFtB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEoB1G,AAAAA;AAFpB,AAEoBA,AAAAA,AAAE0G;;AAFtB,AAAAlH,AAAA,AAAA,AAAA,AAAA,AAEoBQ,AAAAA;AAFpBP,AAAA,AAAA+G,AAAA,AAAA7G,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEoBO,AAAAA,AAAE0G,AAAAA;;AAFtB,AAAA9G,AAAA,AAAA4G,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA5G,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEoBI,AAAAA,AAAE0G,AAAAA;;AAFtB,AAAA,AAAA7G,AAAA,AAEoBG;;;;;;AAFpB,AAIA,AAAA;AAAA;;;AAAA,AAAa4G;;AAAb,AAAA,AACGD,AAAiB3G;AADpB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACoBA,AAAAA;AADpB,AACoBA,AAAAA;;AADpB,AAAAR,AAAA,AAAA,AAAA,AAAA,AACoBQ,AAAAA;AADpBP,AAAA,AAAAkH,AAAA,AAAAhH,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACoBO,AAAAA;;AADpB,AAAAJ,AAAA,AAAA+G,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA/G,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACoBI,AAAAA;;AADpB,AAAA,AAAAH,AAAA,AACoBG;;;;;;AADpB,AAGA,AAAA;AAAA;;;AAAA,AAAa8G;;AAAb,AAAA,AACGD,AAAiB7G;AADpB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACoBA,AAAAA;AADpB,AACoBA,AAAAA;;AADpB,AAAAR,AAAA,AAAA,AAAA,AAAA,AACoBQ,AAAAA;AADpBP,AAAA,AAAAoH,AAAA,AAAAlH,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACoBO,AAAAA;;AADpB,AAAAJ,AAAA,AAAAiH,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAjH,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACoBI,AAAAA;;AADpB,AAAA,AAAAH,AAAA,AACoBG;;;;;;AADpB,AAGA,AAAA;AAAA;;;AAAA,AAAamH;;AAAb;;;AAAA,AACGJ,AAAQ/G;AADX,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACWA,AAAAA;AADX,AACWA,AAAAA;;AADX,AAAAR,AAAA,AAAA,AAAA,AAAA,AACWQ,AAAAA;AADXP,AAAA,AAAAsH,AAAA,AAAApH,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACWO,AAAAA;;AADX,AAAAJ,AAAA,AAAAmH,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAnH,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACWI,AAAAA;;AADX,AAAA,AAAAH,AAAA,AACWG;;;;;;AADX;;;AAAA,AAGGgH,AAAOhH;AAHV,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGUA,AAAAA;AAHV,AAGUA,AAAAA;;AAHV,AAAAR,AAAA,AAAA,AAAA,AAAA,AAGUQ,AAAAA;AAHVP,AAAA,AAAAuH,AAAA,AAAArH,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGUO,AAAAA;;AAHV,AAAAJ,AAAA,AAAAoH,AAAA;AAAA,AAAA,AAAA,AAAA,AAAApH,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGUI,AAAAA;;AAHV,AAAA,AAAAH,AAAA,AAGUG;;;;;;AAHV;;;AAAA,AAKGiH,AAAQjH;AALX,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAKWA,AAAAA;AALX,AAKWA,AAAAA;;AALX,AAAAR,AAAA,AAAA,AAAA,AAAA,AAKWQ,AAAAA;AALXP,AAAA,AAAAwH,AAAA,AAAAtH,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAKWO,AAAAA;;AALX,AAAAJ,AAAA,AAAAqH,AAAA;AAAA,AAAA,AAAA,AAAA,AAAArH,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAKWI,AAAAA;;AALX,AAAA,AAAAH,AAAA,AAKWG;;;;;;AALX;;;AAAA,AAOGkH,AAAOlH;AAPV,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAOUA,AAAAA;AAPV,AAOUA,AAAAA;;AAPV,AAAAR,AAAA,AAAA,AAAA,AAAA,AAOUQ,AAAAA;AAPVP,AAAA,AAAAyH,AAAA,AAAAvH,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAOUO,AAAAA;;AAPV,AAAAJ,AAAA,AAAAsH,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAtH,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAOUI,AAAAA;;AAPV,AAAA,AAAAH,AAAA,AAOUG;;;;;;AAPV,AAUA,AAAA;AAAA;;;AAAA,AAAauH;;AAAb,AAAA;;;AAAA,AAAA5G,AACG0G;AADH,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAvG,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AACGuG,AAAQrH;AADX,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACWA,AAAAA;AADX,AACWA,AAAAA;;AADX,AAAAR,AAAA,AAAA,AAAA,AAAA,AACWQ,AAAAA;AADXP,AAAA,AAAA4H,AAAA,AAAA1H,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACWO,AAAAA;;AADX,AAAAJ,AAAA,AAAAyH,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAzH,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACWI,AAAAA;;AADX,AAAA,AAAAH,AAAA,AACWG;;;;;;AADX,AAAA,AAAA,AACGqH,AAAYrH,AAAE0G;AADjB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACe1G,AAAAA;AADf,AACeA,AAAAA,AAAE0G;;AADjB,AAAAlH,AAAA,AAAA,AAAA,AAAA,AACeQ,AAAAA;AADfP,AAAA,AAAA4H,AAAA,AAAA1H,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACeO,AAAAA,AAAE0G,AAAAA;;AADjB,AAAA9G,AAAA,AAAAyH,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAzH,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACeI,AAAAA,AAAE0G,AAAAA;;AADjB,AAAA,AAAA7G,AAAA,AACeG;;;;;;AADf,AAAA,AAAA,AACGqH;;AADH;AAAA;;;AAAA,AAGGC,AAAUtH;AAHb,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGaA,AAAAA;AAHb,AAGaA,AAAAA;;AAHb,AAAAR,AAAA,AAAA,AAAA,AAAA,AAGaQ,AAAAA;AAHbP,AAAA,AAAA6H,AAAA,AAAA3H,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGaO,AAAAA;;AAHb,AAAAJ,AAAA,AAAA0H,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA1H,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGaI,AAAAA;;AAHb,AAAA,AAAAH,AAAA,AAGaG;;;;;;AAHb,AAMA,AAAA;AAAA;;;AAAA,AAAayH;;AAAb;;;AAAA,AACGD,AAAexH;AADlB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACkBA,AAAAA;AADlB,AACkBA,AAAAA;;AADlB,AAAAR,AAAA,AAAA,AAAA,AAAA,AACkBQ,AAAAA;AADlBP,AAAA,AAAA+H,AAAA,AAAA7H,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACkBO,AAAAA;;AADlB,AAAAJ,AAAA,AAAA4H,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA5H,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACkBI,AAAAA;;AADlB,AAAA,AAAAH,AAAA,AACkBG;;;;;;AADlB,AAIA,AAAA;AAAA;;;AAAA,AAAa2H;;AAAb,AAAA,AACGD,AAAgB1H,AAAE0G;AADrB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACmB1G,AAAAA;AADnB,AACmBA,AAAAA,AAAE0G;;AADrB,AAAAlH,AAAA,AAAA,AAAA,AAAA,AACmBQ,AAAAA;AADnBP,AAAA,AAAAiI,AAAA,AAAA/H,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACmBO,AAAAA,AAAE0G,AAAAA;;AADrB,AAAA9G,AAAA,AAAA8H,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA9H,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACmBI,AAAAA,AAAE0G,AAAAA;;AADrB,AAAA,AAAA7G,AAAA,AACmBG;;;;;;AADnB,AAGA,AAAA;AAAA;;;AAAA,AAAa8H;;AAAb,AAAA,AACGF,AAAQ5H;AADX,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACWA,AAAAA;AADX,AACWA,AAAAA;;AADX,AAAAR,AAAA,AAAA,AAAA,AAAA,AACWQ,AAAAA;AADXP,AAAA,AAAAmI,AAAA,AAAAjI,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACWO,AAAAA;;AADX,AAAAJ,AAAA,AAAAgI,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAhI,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACWI,AAAAA;;AADX,AAAA,AAAAH,AAAA,AACWG;;;;;;AADX,AAAA,AAEG6H,AAAQ7H;AAFX,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEWA,AAAAA;AAFX,AAEWA,AAAAA;;AAFX,AAAAR,AAAA,AAAA,AAAA,AAAA,AAEWQ,AAAAA;AAFXP,AAAA,AAAAoI,AAAA,AAAAlI,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEWO,AAAAA;;AAFX,AAAAJ,AAAA,AAAAiI,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAjI,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEWI,AAAAA;;AAFX,AAAA,AAAAH,AAAA,AAEWG;;;;;;AAFX,AAIA,AAAA;AAAA;;;AAAA,AAAagI;;AAAb,AAAA,AACGD,AAAW/H,AAAEuC;AADhB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACcvC,AAAAA;AADd,AACcA,AAAAA,AAAEuC;;AADhB,AAAA/C,AAAA,AAAA,AAAA,AAAA,AACcQ,AAAAA;AADdP,AAAA,AAAAsI,AAAA,AAAApI,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACcO,AAAAA,AAAEuC,AAAAA;;AADhB,AAAA3C,AAAA,AAAAmI,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAnI,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACcI,AAAAA,AAAEuC,AAAAA;;AADhB,AAAA,AAAA1C,AAAA,AACcG;;;;;;AADd,AAGA,AAAA;AAAA;;;AAAA,AAAakI;;AAAb,AAAA,AACGD,AAAajI;AADhB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACgBA,AAAAA;AADhB,AACgBA,AAAAA;;AADhB,AAAAR,AAAA,AAAA,AAAA,AAAA,AACgBQ,AAAAA;AADhBP,AAAA,AAAAwI,AAAA,AAAAtI,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACgBO,AAAAA;;AADhB,AAAAJ,AAAA,AAAAqI,AAAA;AAAA,AAAA,AAAA,AAAA,AAAArI,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACgBI,AAAAA;;AADhB,AAAA,AAAAH,AAAA,AACgBG;;;;;;AADhB,AAGA,AAAA;AAAA;;;AAAA,AAAaqI;;AAAb,AAAA,AACGF,AAASnI,AAAEqD;AADd,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACYrD,AAAAA;AADZ,AACYA,AAAAA,AAAEqD;;AADd,AAAA7D,AAAA,AAAA,AAAA,AAAA,AACYQ,AAAAA;AADZP,AAAA,AAAA0I,AAAA,AAAAxI,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACYO,AAAAA,AAAEqD,AAAAA;;AADd,AAAAzD,AAAA,AAAAuI,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAvI,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACYI,AAAAA,AAAEqD,AAAAA;;AADd,AAAA,AAAAxD,AAAA,AACYG;;;;;;AADZ,AAAA,AAEGoI,AAAepI,AAAEqD;AAFpB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEkBrD,AAAAA;AAFlB,AAEkBA,AAAAA,AAAEqD;;AAFpB,AAAA7D,AAAA,AAAA,AAAA,AAAA,AAEkBQ,AAAAA;AAFlBP,AAAA,AAAA2I,AAAA,AAAAzI,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEkBO,AAAAA,AAAEqD,AAAAA;;AAFpB,AAAAzD,AAAA,AAAAwI,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAxI,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEkBI,AAAAA,AAAEqD,AAAAA;;AAFpB,AAAA,AAAAxD,AAAA,AAEkBG;;;;;;AAFlB,AAIA,AAAA;AAAA;;;AAAA,AAAauI;;AAAb,AAAA,AACGD,AAAMtI;AADT,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACSA,AAAAA;AADT,AACSA,AAAAA;;AADT,AAAAR,AAAA,AAAA,AAAA,AAAA,AACSQ,AAAAA;AADTP,AAAA,AAAA6I,AAAA,AAAA3I,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACSO,AAAAA;;AADT,AAAAJ,AAAA,AAAA0I,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA1I,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACSI,AAAAA;;AADT,AAAA,AAAAH,AAAA,AACSG;;;;;;AADT,AAGA,AAAA;AAAA;;;AAAA,AAAayI;;AAAb,AAAA,AACGD,AAAMxI,AAAE0I;AADX,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACS1I,AAAAA;AADT,AACSA,AAAAA,AAAE0I;;AADX,AAAAlJ,AAAA,AAAA,AAAA,AAAA,AACSQ,AAAAA;AADTP,AAAA,AAAA+I,AAAA,AAAA7I,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACSO,AAAAA,AAAE0I,AAAAA;;AADX,AAAA9I,AAAA,AAAA4I,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA5I,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACSI,AAAAA,AAAE0I,AAAAA;;AADX,AAAA,AAAA7I,AAAA,AACSG;;;;;;AADT,AAGA,AAAA;AAAA;;;AAAA,AAAa4I;;AAAb,AAAA,AACGD,AAAO3I,AAAE6I;AADZ,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACU7I,AAAAA;AADV,AACUA,AAAAA,AAAE6I;;AADZ,AAAArJ,AAAA,AAAA,AAAA,AAAA,AACUQ,AAAAA;AADVP,AAAA,AAAAkJ,AAAA,AAAAhJ,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACUO,AAAAA,AAAE6I,AAAAA;;AADZ,AAAAjJ,AAAA,AAAA+I,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA/I,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACUI,AAAAA,AAAE6I,AAAAA;;AADZ,AAAA,AAAAhJ,AAAA,AACUG;;;;;;AADV,AAGA,AAAA;AAAA;;;AAAA,AAAamJ;;AAAb,AAAA,AAAA,AAAAxI,AACGoI;AADH,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAjI,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AACGiI,AAAgB/I,AAAEoJ;AADrB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACmBpJ,AAAAA;AADnB,AACmBA,AAAAA,AAAEoJ;;AADrB,AAAA5J,AAAA,AAAA,AAAA,AAAA,AACmBQ,AAAAA;AADnBP,AAAA,AAAAsJ,AAAA,AAAApJ,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACmBO,AAAAA,AAAEoJ,AAAAA;;AADrB,AAAAxJ,AAAA,AAAAmJ,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAnJ,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACmBI,AAAAA,AAAEoJ,AAAAA;;AADrB,AAAA,AAAAvJ,AAAA,AACmBG;;;;;;AADnB,AAAA,AAAA,AACG+I,AAAsB/I,AAAE0G,AAAE2C;AAD7B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACyBrJ,AAAAA;AADzB,AACyBA,AAAAA,AAAE0G,AAAE2C;;AAD7B,AAAA7J,AAAA,AAAA,AAAA,AAAA,AACyBQ,AAAAA;AADzBP,AAAA,AAAAsJ,AAAA,AAAApJ,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACyBO,AAAAA,AAAE0G,AAAAA,AAAE2C,AAAAA;;AAD7B,AAAAzJ,AAAA,AAAAmJ,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAnJ,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACyBI,AAAAA,AAAE0G,AAAAA,AAAE2C,AAAAA;;AAD7B,AAAA,AAAAxJ,AAAA,AACyBG;;;;;;AADzB,AAAA,AAAA,AACG+I;;AADH;AAAA,AAAA,AAAA,AAAApI,AAEGsI;AAFH,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAnI,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAEGmI,AAAejJ,AAAEmC;AAFpB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEkBnC,AAAAA;AAFlB,AAEkBA,AAAAA,AAAEmC;;AAFpB,AAAA3C,AAAA,AAAA,AAAA,AAAA,AAEkBQ,AAAAA;AAFlBP,AAAA,AAAAwJ,AAAA,AAAAtJ,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEkBO,AAAAA,AAAEmC,AAAAA;;AAFpB,AAAAvC,AAAA,AAAAqJ,AAAA;AAAA,AAAA,AAAA,AAAA,AAAArJ,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEkBI,AAAAA,AAAEmC,AAAAA;;AAFpB,AAAA,AAAAtC,AAAA,AAEkBG;;;;;;AAFlB,AAAA,AAAA,AAEGiJ,AAAqBjJ,AAAE0G,AAAE4C;AAF5B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEwBtJ,AAAAA;AAFxB,AAEwBA,AAAAA,AAAE0G,AAAE4C;;AAF5B,AAAA9J,AAAA,AAAA,AAAA,AAAA,AAEwBQ,AAAAA;AAFxBP,AAAA,AAAAwJ,AAAA,AAAAtJ,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEwBO,AAAAA,AAAE0G,AAAAA,AAAE4C,AAAAA;;AAF5B,AAAA1J,AAAA,AAAAqJ,AAAA;AAAA,AAAA,AAAA,AAAA,AAAArJ,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEwBI,AAAAA,AAAE0G,AAAAA,AAAE4C,AAAAA;;AAF5B,AAAA,AAAAzJ,AAAA,AAEwBG;;;;;;AAFxB,AAAA,AAAA,AAEGiJ;;AAFH;AAAA,AAAA,AAGGC,AAAiBlJ,AAAEuC;AAHtB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGoBvC,AAAAA;AAHpB,AAGoBA,AAAAA,AAAEuC;;AAHtB,AAAA/C,AAAA,AAAA,AAAA,AAAA,AAGoBQ,AAAAA;AAHpBP,AAAA,AAAAyJ,AAAA,AAAAvJ,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGoBO,AAAAA,AAAEuC,AAAAA;;AAHtB,AAAA3C,AAAA,AAAAsJ,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAtJ,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGoBI,AAAAA,AAAEuC,AAAAA;;AAHtB,AAAA,AAAA1C,AAAA,AAGoBG;;;;;;AAHpB,AAKA,AAAA;AAAA;;;AAAA,AAAayJ;;AAAb,AAAA;;;AAAA,AAAA9I,AACG6I;AADH,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAA1I,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AACG0I,AAASxJ;AADZ,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACYA,AAAAA;AADZ,AACYA,AAAAA;;AADZ,AAAAR,AAAA,AAAA,AAAA,AAAA,AACYQ,AAAAA;AADZP,AAAA,AAAA+J,AAAA,AAAA7J,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACYO,AAAAA;;AADZ,AAAAJ,AAAA,AAAA4J,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA5J,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACYI,AAAAA;;AADZ,AAAA,AAAAH,AAAA,AACYG;;;;;;AADZ,AAAA,AAAA,AACGwJ,AAAaxJ,AAAEqD;AADlB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACgBrD,AAAAA;AADhB,AACgBA,AAAAA,AAAEqD;;AADlB,AAAA7D,AAAA,AAAA,AAAA,AAAA,AACgBQ,AAAAA;AADhBP,AAAA,AAAA+J,AAAA,AAAA7J,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACgBO,AAAAA,AAAEqD,AAAAA;;AADlB,AAAAzD,AAAA,AAAA4J,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA5J,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACgBI,AAAAA,AAAEqD,AAAAA;;AADlB,AAAA,AAAAxD,AAAA,AACgBG;;;;;;AADhB,AAAA,AAAA,AACGwJ;;AADH;AAAA,AAIA,AAAA;AAAA;;;AAAA,AAAaI;;AAAb,AAAA,AACGF,AAAW1J,AAAE0G;AADhB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACc1G,AAAAA;AADd,AACcA,AAAAA,AAAE0G;;AADhB,AAAAlH,AAAA,AAAA,AAAA,AAAA,AACcQ,AAAAA;AADdP,AAAA,AAAAiK,AAAA,AAAA/J,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACcO,AAAAA,AAAE0G,AAAAA;;AADhB,AAAA9G,AAAA,AAAA8J,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA9J,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACcI,AAAAA,AAAE0G,AAAAA;;AADhB,AAAA,AAAA7G,AAAA,AACcG;;;;;;AADd,AAAA,AAEG2J,AAAa3J,AAAE0G;AAFlB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEgB1G,AAAAA;AAFhB,AAEgBA,AAAAA,AAAE0G;;AAFlB,AAAAlH,AAAA,AAAA,AAAA,AAAA,AAEgBQ,AAAAA;AAFhBP,AAAA,AAAAkK,AAAA,AAAAhK,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEgBO,AAAAA,AAAE0G,AAAAA;;AAFlB,AAAA9G,AAAA,AAAA+J,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA/J,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEgBI,AAAAA,AAAE0G,AAAAA;;AAFlB,AAAA,AAAA7G,AAAA,AAEgBG;;;;;;AAFhB,AAIA,AAAA;AAAA;;;AAAA,AAAa+J;;AAAb,AAAA;;;AAAA,AAAApJ,AACGmJ;AADH,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAhJ,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AACGgJ,AAAY9J;AADf,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACeA,AAAAA;AADf,AACeA,AAAAA;;AADf,AAAAR,AAAA,AAAA,AAAA,AAAA,AACeQ,AAAAA;AADfP,AAAA,AAAAqK,AAAA,AAAAnK,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACeO,AAAAA;;AADf,AAAAJ,AAAA,AAAAkK,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAlK,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACeI,AAAAA;;AADf,AAAA,AAAAH,AAAA,AACeG;;;;;;AADf,AAAA,AAAA,AACG8J,AAAgB9J,AAAEgK;AADrB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACmBhK,AAAAA;AADnB,AACmBA,AAAAA,AAAEgK;;AADrB,AAAAxK,AAAA,AAAA,AAAA,AAAA,AACmBQ,AAAAA;AADnBP,AAAA,AAAAqK,AAAA,AAAAnK,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACmBO,AAAAA,AAAEgK,AAAAA;;AADrB,AAAApK,AAAA,AAAAkK,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAlK,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACmBI,AAAAA,AAAEgK,AAAAA;;AADrB,AAAA,AAAAnK,AAAA,AACmBG;;;;;;AADnB,AAAA,AAAA,AACG8J;;AADH;AAAA,AAIA,AAAA;AAAA;;;AAAA,AAAaI;;AAAb,AAAA,AACGD,AAAejK,AAAE0G;AADpB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACkB1G,AAAAA;AADlB,AACkBA,AAAAA,AAAE0G;;AADpB,AAAAlH,AAAA,AAAA,AAAA,AAAA,AACkBQ,AAAAA;AADlBP,AAAA,AAAAwK,AAAA,AAAAtK,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACkBO,AAAAA,AAAE0G,AAAAA;;AADpB,AAAA9G,AAAA,AAAAqK,AAAA;AAAA,AAAA,AAAA,AAAA,AAAArK,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACkBI,AAAAA,AAAE0G,AAAAA;;AADpB,AAAA,AAAA7G,AAAA,AACkBG;;;;;;AADlB,AAGA,AAAA;AAAA;;;AAAA,AAAayK;;AAAb,AAAA,AAAA,AAAA9J,AACGyJ;AADH,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAtJ,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AACGsJ,AAAUpK,AAAE2B;AADf,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACa3B,AAAAA;AADb,AACaA,AAAAA,AAAE2B;;AADf,AAAAnC,AAAA,AAAA,AAAA,AAAA,AACaQ,AAAAA;AADbP,AAAA,AAAA2K,AAAA,AAAAzK,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACaO,AAAAA,AAAE2B,AAAAA;;AADf,AAAA/B,AAAA,AAAAwK,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAxK,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACaI,AAAAA,AAAE2B,AAAAA;;AADf,AAAA,AAAA9B,AAAA,AACaG;;;;;;AADb,AAAA,AAAA,AACGoK,AAAgBpK,AAAE0K,AAAEzH;AADvB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACmBjD,AAAAA;AADnB,AACmBA,AAAAA,AAAE0K,AAAEzH;;AADvB,AAAAzD,AAAA,AAAA,AAAA,AAAA,AACmBQ,AAAAA;AADnBP,AAAA,AAAA2K,AAAA,AAAAzK,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACmBO,AAAAA,AAAE0K,AAAAA,AAAEzH,AAAAA;;AADvB,AAAArD,AAAA,AAAAwK,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAxK,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACmBI,AAAAA,AAAE0K,AAAAA,AAAEzH,AAAAA;;AADvB,AAAA,AAAApD,AAAA,AACmBG;;;;;;AADnB,AAAA,AAAA,AACGoK;;AADH;AAAA,AAAA,AAEGC,AAAcrK;AAFjB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEiBA,AAAAA;AAFjB,AAEiBA,AAAAA;;AAFjB,AAAAR,AAAA,AAAA,AAAA,AAAA,AAEiBQ,AAAAA;AAFjBP,AAAA,AAAA4K,AAAA,AAAA1K,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEiBO,AAAAA;;AAFjB,AAAAJ,AAAA,AAAAyK,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAzK,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEiBI,AAAAA;;AAFjB,AAAA,AAAAH,AAAA,AAEiBG;;;;;;AAFjB,AAAA,AAGGsK,AAAqBtK;AAHxB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGwBA,AAAAA;AAHxB,AAGwBA,AAAAA;;AAHxB,AAAAR,AAAA,AAAA,AAAA,AAAA,AAGwBQ,AAAAA;AAHxBP,AAAA,AAAA6K,AAAA,AAAA3K,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGwBO,AAAAA;;AAHxB,AAAAJ,AAAA,AAAA0K,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA1K,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGwBI,AAAAA;;AAHxB,AAAA,AAAAH,AAAA,AAGwBG;;;;;;AAHxB,AAAA,AAIGuK,AAAgBvK,AAAE2K,AAAKC;AAJ1B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAImB5K,AAAAA;AAJnB,AAImBA,AAAAA,AAAE2K,AAAKC;;AAJ1B,AAAApL,AAAA,AAAA,AAAA,AAAA,AAImBQ,AAAAA;AAJnBP,AAAA,AAAA8K,AAAA,AAAA5K,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAImBO,AAAAA,AAAE2K,AAAAA,AAAKC,AAAAA;;AAJ1B,AAAAhL,AAAA,AAAA2K,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA3K,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAImBI,AAAAA,AAAE2K,AAAAA,AAAKC,AAAAA;;AAJ1B,AAAA,AAAA/K,AAAA,AAImBG;;;;;;AAJnB,AAAA,AAKGwK,AAAwBxK,AAAEgK;AAL7B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAK2BhK,AAAAA;AAL3B,AAK2BA,AAAAA,AAAEgK;;AAL7B,AAAAxK,AAAA,AAAA,AAAA,AAAA,AAK2BQ,AAAAA;AAL3BP,AAAA,AAAA+K,AAAA,AAAA7K,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAK2BO,AAAAA,AAAEgK,AAAAA;;AAL7B,AAAApK,AAAA,AAAA4K,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA5K,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAK2BI,AAAAA,AAAEgK,AAAAA;;AAL7B,AAAA,AAAAnK,AAAA,AAK2BG;;;;;;AAL3B,AAOA,AAAA;AAAA;;;AAAA,AAAa+K;;AAAb,AAAA,AAAA,AAAApK,AACGmK;AADH,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAhK,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AACGgK,AAAY9K,AAAEgL;AADjB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACehL,AAAAA;AADf,AACeA,AAAAA,AAAEgL;;AADjB,AAAAxL,AAAA,AAAA,AAAA,AAAA,AACeQ,AAAAA;AADfP,AAAA,AAAAqL,AAAA,AAAAnL,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACeO,AAAAA,AAAEgL,AAAAA;;AADjB,AAAApL,AAAA,AAAAkL,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAlL,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACeI,AAAAA,AAAEgL,AAAAA;;AADjB,AAAA,AAAAnL,AAAA,AACeG;;;;;;AADf,AAAA,AAAA,AACG8K,AAAkB9K,AAAEgL,AAAEC;AADzB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACqBjL,AAAAA;AADrB,AACqBA,AAAAA,AAAEgL,AAAEC;;AADzB,AAAAzL,AAAA,AAAA,AAAA,AAAA,AACqBQ,AAAAA;AADrBP,AAAA,AAAAqL,AAAA,AAAAnL,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACqBO,AAAAA,AAAEgL,AAAAA,AAAEC,AAAAA;;AADzB,AAAArL,AAAA,AAAAkL,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAlL,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACqBI,AAAAA,AAAEgL,AAAAA,AAAEC,AAAAA;;AADzB,AAAA,AAAApL,AAAA,AACqBG;;;;;;AADrB,AAAA,AAAA,AACG8K,AAAmC9K,AAAEgL,AAAEC,AAAWC;AADrD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACsClL,AAAAA;AADtC,AACsCA,AAAAA,AAAEgL,AAAEC,AAAWC;;AADrD,AAAA1L,AAAA,AAAA,AAAA,AAAA,AACsCQ,AAAAA;AADtCP,AAAA,AAAAqL,AAAA,AAAAnL,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACsCO,AAAAA,AAAEgL,AAAAA,AAAEC,AAAAA,AAAWC,AAAAA;;AADrD,AAAAtL,AAAA,AAAAkL,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAlL,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACsCI,AAAAA,AAAEgL,AAAAA,AAAEC,AAAAA,AAAWC,AAAAA;;AADrD,AAAA,AAAArL,AAAA,AACsCG;;;;;;AADtC,AAAA,AAAA,AACG8K;;AADH;AAAA,AAGA,AAAA;AAAA;;;AAAA,AAAaS;;AAAb,AAAA,AAAA,AAAA5K,AACGyK;AADH,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAtK,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AACGsK,AAAWpL;AADd,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACcA,AAAAA;AADd,AACcA,AAAAA;;AADd,AAAAR,AAAA,AAAA,AAAA,AAAA,AACcQ,AAAAA;AADdP,AAAA,AAAA2L,AAAA,AAAAzL,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACcO,AAAAA;;AADd,AAAAJ,AAAA,AAAAwL,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAxL,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACcI,AAAAA;;AADd,AAAA,AAAAH,AAAA,AACcG;;;;;;AADd,AAAA,AAAA,AACGoL,AAAepL,AAAEqD;AADpB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACkBrD,AAAAA;AADlB,AACkBA,AAAAA,AAAEqD;;AADpB,AAAA7D,AAAA,AAAA,AAAA,AAAA,AACkBQ,AAAAA;AADlBP,AAAA,AAAA2L,AAAA,AAAAzL,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACkBO,AAAAA,AAAEqD,AAAAA;;AADpB,AAAAzD,AAAA,AAAAwL,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAxL,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACkBI,AAAAA,AAAEqD,AAAAA;;AADpB,AAAA,AAAAxD,AAAA,AACkBG;;;;;;AADlB,AAAA,AAAA,AACGoL;;AADH;AAAA,AAAA,AAEGC,AAAgBrL,AAAEC,AAAE6D,AAAE0H;AAFzB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEmBxL,AAAAA;AAFnB,AAEmBA,AAAAA,AAAEC,AAAE6D,AAAE0H;;AAFzB,AAAAhM,AAAA,AAAA,AAAA,AAAA,AAEmBQ,AAAAA;AAFnBP,AAAA,AAAA4L,AAAA,AAAA1L,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEmBO,AAAAA,AAAEC,AAAAA,AAAE6D,AAAAA,AAAE0H,AAAAA;;AAFzB,AAAA5L,AAAA,AAAAyL,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAzL,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEmBI,AAAAA,AAAEC,AAAAA,AAAE6D,AAAAA,AAAE0H,AAAAA;;AAFzB,AAAA,AAAA3L,AAAA,AAEmBG;;;;;;AAFnB,AAAA,AAGGsL,AAAgBtL,AAAEsB,AAAEoF,AAAE+E,AAASD;AAHlC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGmBxL,AAAAA;AAHnB,AAGmBA,AAAAA,AAAEsB,AAAEoF,AAAE+E,AAASD;;AAHlC,AAAAhM,AAAA,AAAA,AAAA,AAAA,AAGmBQ,AAAAA;AAHnBP,AAAA,AAAA6L,AAAA,AAAA3L,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGmBO,AAAAA,AAAEsB,AAAAA,AAAEoF,AAAAA,AAAE+E,AAAAA,AAASD,AAAAA;;AAHlC,AAAA5L,AAAA,AAAA0L,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA1L,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGmBI,AAAAA,AAAEsB,AAAAA,AAAEoF,AAAAA,AAAE+E,AAAAA,AAASD,AAAAA;;AAHlC,AAAA,AAAA3L,AAAA,AAGmBG;;;;;;AAHnB,AAKA,AAAA;AAAA;;;AAAA,AAAa4L;;AAAb,AAAA,AAAA,AAAAjL,AACGgL;AADH,AAAA,AAAAD,AAAA,AAAA;AAAA,AAAA,AAAAA;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAA7K,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AACG6K,AAAY3L;AADf,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACeA,AAAAA;AADf,AACeA,AAAAA;;AADf,AAAAR,AAAA,AAAA,AAAA,AAAA,AACeQ,AAAAA;AADfP,AAAA,AAAAkM,AAAA,AAAAhM,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACeO,AAAAA;;AADf,AAAAJ,AAAA,AAAA+L,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA/L,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACeI,AAAAA;;AADf,AAAA,AAAAH,AAAA,AACeG;;;;;;AADf,AAAA,AAAA,AACG2L,AAAgB3L,AAAEqD;AADrB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACmBrD,AAAAA;AADnB,AACmBA,AAAAA,AAAEqD;;AADrB,AAAA7D,AAAA,AAAA,AAAA,AAAA,AACmBQ,AAAAA;AADnBP,AAAA,AAAAkM,AAAA,AAAAhM,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACmBO,AAAAA,AAAEqD,AAAAA;;AADrB,AAAAzD,AAAA,AAAA+L,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA/L,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACmBI,AAAAA,AAAEqD,AAAAA;;AADrB,AAAA,AAAAxD,AAAA,AACmBG;;;;;;AADnB,AAAA,AAAA,AACG2L;;AADH;AAAA,AAGA,AAAA;AAAA;;;AAAA,AAAaI;;AAAb;;;AAAA,AACGF,AAAQ7L;AADX,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACWA,AAAAA;AADX,AACWA,AAAAA;;AADX,AAAAR,AAAA,AAAA,AAAA,AAAA,AACWQ,AAAAA;AADXP,AAAA,AAAAoM,AAAA,AAAAlM,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACWO,AAAAA;;AADX,AAAAJ,AAAA,AAAAiM,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAjM,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACWI,AAAAA;;AADX,AAAA,AAAAH,AAAA,AACWG;;;;;;AADX,AAAA,AAEG8L,AAAe9L;AAFlB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEkBA,AAAAA;AAFlB,AAEkBA,AAAAA;;AAFlB,AAAAR,AAAA,AAAA,AAAA,AAAA,AAEkBQ,AAAAA;AAFlBP,AAAA,AAAAqM,AAAA,AAAAnM,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEkBO,AAAAA;;AAFlB,AAAAJ,AAAA,AAAAkM,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAlM,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEkBI,AAAAA;;AAFlB,AAAA,AAAAH,AAAA,AAEkBG;;;;;;AAFlB,AAIA,AAAA;AAAA;;;AAAA,AAAaoM;;AAAb,AAAA,AACGJ,AAAWhM,AAAE0G,AAAE2F;AADlB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACcrM,AAAAA;AADd,AACcA,AAAAA,AAAE0G,AAAE2F;;AADlB,AAAA7M,AAAA,AAAA,AAAA,AAAA,AACcQ,AAAAA;AADdP,AAAA,AAAAuM,AAAA,AAAArM,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACcO,AAAAA,AAAE0G,AAAAA,AAAE2F,AAAAA;;AADlB,AAAAzM,AAAA,AAAAoM,AAAA;AAAA,AAAA,AAAA,AAAA,AAAApM,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACcI,AAAAA,AAAE0G,AAAAA,AAAE2F,AAAAA;;AADlB,AAAA,AAAAxM,AAAA,AACcG;;;;;;AADd,AAAA,AAEGiM,AAAcjM,AAAE0G;AAFnB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEiB1G,AAAAA;AAFjB,AAEiBA,AAAAA,AAAE0G;;AAFnB,AAAAlH,AAAA,AAAA,AAAA,AAAA,AAEiBQ,AAAAA;AAFjBP,AAAA,AAAAwM,AAAA,AAAAtM,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEiBO,AAAAA,AAAE0G,AAAAA;;AAFnB,AAAA9G,AAAA,AAAAqM,AAAA;AAAA,AAAA,AAAA,AAAA,AAAArM,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEiBI,AAAAA,AAAE0G,AAAAA;;AAFnB,AAAA,AAAA7G,AAAA,AAEiBG;;;;;;AAFjB,AAAA,AAGGkM,AAAWlM;AAHd,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGcA,AAAAA;AAHd,AAGcA,AAAAA;;AAHd,AAAAR,AAAA,AAAA,AAAA,AAAA,AAGcQ,AAAAA;AAHdP,AAAA,AAAAyM,AAAA,AAAAvM,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGcO,AAAAA;;AAHd,AAAAJ,AAAA,AAAAsM,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAtM,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGcI,AAAAA;;AAHd,AAAA,AAAAH,AAAA,AAGcG;;;;;;AAHd,AAAA,AAIGmM,AAAgBnM;AAJnB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAImBA,AAAAA;AAJnB,AAImBA,AAAAA;;AAJnB,AAAAR,AAAA,AAAA,AAAA,AAAA,AAImBQ,AAAAA;AAJnBP,AAAA,AAAA0M,AAAA,AAAAxM,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAImBO,AAAAA;;AAJnB,AAAAJ,AAAA,AAAAuM,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAvM,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAImBI,AAAAA;;AAJnB,AAAA,AAAAH,AAAA,AAImBG;;;;;;AAJnB,AAMA,AAAA;AAAA;;;AAAA,AAAayM;;AAAb,AAAA,AACGH,AAAUtM,AAAE0M;AADf,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACa1M,AAAAA;AADb,AACaA,AAAAA,AAAE0M;;AADf,AAAAlN,AAAA,AAAA,AAAA,AAAA,AACaQ,AAAAA;AADbP,AAAA,AAAA6M,AAAA,AAAA3M,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACaO,AAAAA,AAAE0M,AAAAA;;AADf,AAAA9M,AAAA,AAAA0M,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA1M,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AACaI,AAAAA,AAAE0M,AAAAA;;AADf,AAAA,AAAA7M,AAAA,AACaG;;;;;;AADb,AAAA,AAEGuM,AAAWvM,AAAE0M,AAAEzJ;AAFlB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEcjD,AAAAA;AAFd,AAEcA,AAAAA,AAAE0M,AAAEzJ;;AAFlB,AAAAzD,AAAA,AAAA,AAAA,AAAA,AAEcQ,AAAAA;AAFdP,AAAA,AAAA8M,AAAA,AAAA5M,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEcO,AAAAA,AAAE0M,AAAAA,AAAEzJ,AAAAA;;AAFlB,AAAArD,AAAA,AAAA2M,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA3M,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAEcI,AAAAA,AAAE0M,AAAAA,AAAEzJ,AAAAA;;AAFlB,AAAA,AAAApD,AAAA,AAEcG;;;;;;AAFd,AAAA,AAGGwM,AAAcxM,AAAE0M,AAAEpL;AAHrB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGiBtB,AAAAA;AAHjB,AAGiBA,AAAAA,AAAE0M,AAAEpL;;AAHrB,AAAA9B,AAAA,AAAA,AAAA,AAAA,AAGiBQ,AAAAA;AAHjBP,AAAA,AAAA+M,AAAA,AAAA7M,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGiBO,AAAAA,AAAE0M,AAAAA,AAAEpL,AAAAA;;AAHrB,AAAA1B,AAAA,AAAA4M,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA5M,AAAA;AAAA,AAAAA,AAAAA,AAAAA,AAGiBI,AAAAA,AAAE0M,AAAAA,AAAEpL,AAAAA;;AAHrB,AAAA,AAAAzB,AAAA,AAGiBG;;;;;;AAHjB","names",["thi.ng.geom.core/*resolution*","x__4433__auto__","m__4434__auto__","thi.ng.geom.core/dist","goog/typeOf","m__4431__auto__","cljs.core/missing-protocol","thi.ng.geom.core/dist-squared","thi.ng.geom.core/IDistance","_","a","thi.ng.geom.core/heading","thi.ng.geom.core/heading-xy","thi.ng.geom.core/heading-xz","thi.ng.geom.core/heading-yz","thi.ng.geom.core/angle-between","thi.ng.geom.core/slope-xy","thi.ng.geom.core/slope-xz","thi.ng.geom.core/slope-yz","thi.ng.geom.core/IHeading","var_args","G__44080","thi.ng.geom.core/normal","js/Error","thi.ng.geom.core/INormal","thi.ng.geom.core/as-polar","thi.ng.geom.core/as-cartesian","thi.ng.geom.core/IPolar","G__44102","thi.ng.geom.core/reduce-vector","thi.ng.geom.core/IVectorReduce","f","xs","f2","thi.ng.geom.core/rotate","thi.ng.geom.core/IRotate","t","thi.ng.geom.core/rotate-x","thi.ng.geom.core/rotate-y","thi.ng.geom.core/rotate-z","thi.ng.geom.core/rotate-around-axis","thi.ng.geom.core/IRotate3D","thi.ng.geom.core/reflect","thi.ng.geom.core/IReflect","r","thi.ng.geom.core/scale","thi.ng.geom.core/scale-size","thi.ng.geom.core/IScale","s","thi.ng.geom.core/shear","thi.ng.geom.core/IShear","thi.ng.geom.core/transform","thi.ng.geom.core/ITransform","tx","thi.ng.geom.core/translate","thi.ng.geom.core/ITranslate","thi.ng.geom.core/transform-vector","thi.ng.geom.core/IVectorTransform","v","G__44159","thi.ng.geom.core/as-matrix","thi.ng.geom.core/IMatrixConvert","opts","thi.ng.geom.core/connected-components","thi.ng.geom.core/cyclic?","thi.ng.geom.core/vertex-valence","thi.ng.geom.core/vertex-neighbors","thi.ng.geom.core/remove-vertex","thi.ng.geom.core/replace-vertex","thi.ng.geom.core/merge-vertices","thi.ng.geom.core/IGraph","b","thi.ng.geom.core/in-vertices","thi.ng.geom.core/out-vertices","thi.ng.geom.core/IDirectedGraph","G__44237","thi.ng.geom.core/as-graph","thi.ng.geom.core/IGraphConvert","G__44239","thi.ng.geom.core/vertices","thi.ng.geom.core/IVertexAccess","G__44241","thi.ng.geom.core/edges","thi.ng.geom.core/IEdgeAccess","thi.ng.geom.core/add-face","G__44243","thi.ng.geom.core/faces","thi.ng.geom.core/remove-face","thi.ng.geom.core/vertex-faces","thi.ng.geom.core/IFaceAccess","face","fverts","thi.ng.geom.core/compute-face-normals","thi.ng.geom.core/compute-vertex-normals","thi.ng.geom.core/face-normals","thi.ng.geom.core/face-normal","thi.ng.geom.core/vertex-normals","thi.ng.geom.core/vertex-normal","thi.ng.geom.core/INormalAccess","force?","G__44249","thi.ng.geom.core/attribs","thi.ng.geom.core/IAttributeAccess","ctx","attr","thi.ng.geom.core/raw","thi.ng.geom.core/IRawAccess","thi.ng.geom.core/align-with","thi.ng.geom.core/IAlign","x","thi.ng.geom.core/area","thi.ng.geom.core/IArea","thi.ng.geom.core/contains-entity?","thi.ng.geom.core/contains-point?","thi.ng.geom.core/IBoundary","p","thi.ng.geom.core/bounding-circle","thi.ng.geom.core/IBoundingCircle","thi.ng.geom.core/bounding-sphere","thi.ng.geom.core/IBoundingSphere","thi.ng.geom.core/bounds","thi.ng.geom.core/depth","thi.ng.geom.core/height","thi.ng.geom.core/width","thi.ng.geom.core/IBounds","G__44255","thi.ng.geom.core/center","thi.ng.geom.core/centroid","thi.ng.geom.core/ICenter","thi.ng.geom.core/circumference","thi.ng.geom.core/ICircumference","thi.ng.geom.core/classify-point","thi.ng.geom.core/IClassify","thi.ng.geom.core/clear*","thi.ng.geom.core/clear!","thi.ng.geom.core/IClear","thi.ng.geom.core/clip-with","thi.ng.geom.core/IClip","thi.ng.geom.core/convex-hull","thi.ng.geom.core/IConvexHull","thi.ng.geom.core/extrude","thi.ng.geom.core/extrude-shell","thi.ng.geom.core/IExtrude","thi.ng.geom.core/flip","thi.ng.geom.core/IFlip","thi.ng.geom.core/into","thi.ng.geom.core/IGeomContainer","m","thi.ng.geom.core/inset","thi.ng.geom.core/IInset","inset","G__44263","thi.ng.geom.core/intersect-line","G__44267","thi.ng.geom.core/intersect-ray","thi.ng.geom.core/intersect-shape","thi.ng.geom.core/IIntersect","l","q","dir","G__44271","thi.ng.geom.core/as-mesh","thi.ng.geom.core/IMeshConvert","thi.ng.geom.core/map-point","thi.ng.geom.core/unmap-point","thi.ng.geom.core/IPointMap","G__44275","thi.ng.geom.core/as-polygon","thi.ng.geom.core/IPolygonConvert","res","thi.ng.geom.core/closest-point","thi.ng.geom.core/IProximity","G__44277","thi.ng.geom.core/point-at","thi.ng.geom.core/random-point","thi.ng.geom.core/random-point-inside","thi.ng.geom.core/sample-uniform","thi.ng.geom.core/sample-with-resolution","thi.ng.geom.core/ISample","u","dist","include-last?","G__44280","thi.ng.geom.core/slice-with","thi.ng.geom.core/ISlice","e","classifier","parts","G__44287","thi.ng.geom.core/subdivide","thi.ng.geom.core/subdivide-edge","thi.ng.geom.core/subdivide-face","thi.ng.geom.core/ISubdivide","splits","displace","G__44289","thi.ng.geom.core/tessellate","thi.ng.geom.core/ITessellate","thi.ng.geom.core/volume","thi.ng.geom.core/signed-volume","thi.ng.geom.core/IVolume","thi.ng.geom.core/add-point","thi.ng.geom.core/delete-point","thi.ng.geom.core/get-point","thi.ng.geom.core/get-point-data","thi.ng.geom.core/ISpatialTree","d","thi.ng.geom.core/get-prop","thi.ng.geom.core/set-prop!","thi.ng.geom.core/update-prop!","thi.ng.geom.core/IMutableProps","k"]]],"~:cache-keys",["~#cmap",[["^12","goog/math/math.js"],[1559507890775,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^H",[]],"~:deps-syms",["^Q","~$goog.array","~$goog.asserts"]]],["^12","goog/array/array.js"],[1559507890775,"^1?",["^ ","^1@",null,"^1A",["^H",[]],"^1B",["^Q","^1D"]]],["^12","goog/debug/error.js"],[1559507890775,"^1?",["^ ","^1@",null,"^1A",["^H",[]],"^1B",["^Q"]]],["^12","goog/dom/nodetype.js"],[1559507890775,"^1?",["^ ","^1@",null,"^1A",["^H",[]],"^1B",["^Q"]]],["^12","goog/object/object.js"],[1559507890775,"^1?",["^ ","^1@",null,"^1A",["^H",[]],"^1B",["^Q"]]],"~:SHADOW-TIMESTAMP",[1569627608000,1556316222000],["^12","goog/math/long.js"],[1559507890775,"^1?",["^ ","^1@",null,"^1A",["^H",[]],"^1B",["^Q","^1D","~$goog.reflect"]]],["^12","goog/string/internal.js"],[1559507890775,"^1?",["^ ","^1@",null,"^1A",["^H",[]],"^1B",["^Q"]]],["^12","goog/functions/functions.js"],[1559507890775,"^1?",["^ ","^1@",null,"^1A",["^H",[]],"^1B",["^Q"]]],["^12","goog/structs/map.js"],[1559507890775,"^1?",["^ ","^1@",null,"^1A",["^H",[]],"^1B",["^Q","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^12","goog/asserts/asserts.js"],[1559507890775,"^1?",["^ ","^1@",null,"^1A",["^H",[]],"^1B",["^Q","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^12","goog/uri/uri.js"],[1559507890775,"^1?",["^ ","^1@",null,"^1A",["^H",[]],"^1B",["^Q","^1C","^1D","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^12","thi/ng/geom/core.cljc"],[1569959626067,"^1?",["^ ","^1@",null,"^1A",["^H",[]],"^1B",["^Q","^P"]]],["^12","goog/base.js"],[1559507890775,"^1?",["^ ","^1@",null,"^1A",["^H",[]],"^1B",[]]],["^12","goog/structs/structs.js"],[1559507890775,"^1?",["^ ","^1@",null,"^1A",["^H",[]],"^1B",["^Q","^1C","~$goog.object"]]],["^12","goog/string/string.js"],[1559507890775,"^1?",["^ ","^1@",null,"^1A",["^H",[]],"^1B",["^Q","~$goog.string.internal"]]],["^12","goog/reflect/reflect.js"],[1559507890775,"^1?",["^ ","^1@",null,"^1A",["^H",[]],"^1B",["^Q"]]],["^12","goog/string/stringbuffer.js"],[1559507890775,"^1?",["^ ","^1@",null,"^1A",["^H",[]],"^1B",["^Q"]]],["^12","goog/iter/iter.js"],[1559507890775,"^1?",["^ ","^1@",null,"^1A",["^H",[]],"^1B",["^Q","^1C","^1D","~$goog.functions","~$goog.math"]]],["^12","cljs/core.cljs"],[1556316222100,"^1?",["^ ","^1@",null,"^1A",["^H",[]],"^1B",["~$goog.math.Long","~$goog.math.Integer","^1K","^1Q","^1C","~$goog.Uri","~$goog.string.StringBuffer"]]],["^12","goog/math/integer.js"],[1559507890775,"^1?",["^ ","^1@",null,"^1A",["^H",[]],"^1B",["^Q"]]],["^12","goog/uri/utils.js"],[1559507890775,"^1?",["^ ","^1@",null,"^1A",["^H",[]],"^1B",["^Q","^1C","^1D","^1K"]]]]],"~:clj-info",["^ ","jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/default_data_readers.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/inspect.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/reader_types.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/errors.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1556312825000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1556316222000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",1,"^8",5,"^9",1,"^:",21],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"~:shadow/protocol-prefixes",["^H",["thi$ng$geom$core$IVectorReduce$","thi$ng$geom$core$IBounds$","thi$ng$geom$core$IAlign$","thi$ng$geom$core$IReflect$","thi$ng$geom$core$INormalAccess$","thi$ng$geom$core$IConvexHull$","thi$ng$geom$core$IProximity$","thi$ng$geom$core$IExtrude$","thi$ng$geom$core$ISlice$","thi$ng$geom$core$IEdgeAccess$","thi$ng$geom$core$IArea$","thi$ng$geom$core$ISubdivide$","thi$ng$geom$core$IBoundingSphere$","thi$ng$geom$core$IClassify$","thi$ng$geom$core$IVolume$","thi$ng$geom$core$ITransform$","thi$ng$geom$core$IPointMap$","thi$ng$geom$core$IClear$","thi$ng$geom$core$IVertexAccess$","thi$ng$geom$core$ISpatialTree$","thi$ng$geom$core$IRawAccess$","thi$ng$geom$core$IRotate3D$","thi$ng$geom$core$IScale$","thi$ng$geom$core$ITranslate$","thi$ng$geom$core$IInset$","thi$ng$geom$core$IVectorTransform$","thi$ng$geom$core$IClip$","thi$ng$geom$core$IMeshConvert$","thi$ng$geom$core$IBoundingCircle$","thi$ng$geom$core$IHeading$","thi$ng$geom$core$ICenter$","thi$ng$geom$core$ISample$","thi$ng$geom$core$IGraph$","thi$ng$geom$core$IAttributeAccess$","thi$ng$geom$core$IFlip$","thi$ng$geom$core$INormal$","thi$ng$geom$core$IDirectedGraph$","thi$ng$geom$core$ICircumference$","thi$ng$geom$core$IIntersect$","thi$ng$geom$core$IPolygonConvert$","thi$ng$geom$core$IPolar$","thi$ng$geom$core$IMutableProps$","thi$ng$geom$core$IGeomContainer$","thi$ng$geom$core$IDistance$","thi$ng$geom$core$IBoundary$","thi$ng$geom$core$IRotate$","thi$ng$geom$core$IShear$","thi$ng$geom$core$IGraphConvert$","thi$ng$geom$core$IFaceAccess$","thi$ng$geom$core$ITessellate$","thi$ng$geom$core$IMatrixConvert$"]],"^F",null,"^G",["^H",["^I"]],"^J","^K","^N",null,"^O",["^ ","^P","^P","^Q","^Q"],"^R",["^H",[]],"~:shadow/js-access-global",["^H",["Error"]],"^S",null,"~:defs",["^ ","~$rotate-x",["^ ","~:protocol-inline",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",34,"^8",4,"^9",34,"^:",12,"~:protocol","~$thi.ng.geom.core/IRotate3D","~:doc",null,"~:arglists",["^V",["~$quote",["^V",[["~$_","~$t"]]]]]],"^2L","^2M","^J","~$thi.ng.geom.core/rotate-x","^6","thi/ng/geom/core.cljc","^:",12,"~:method-params",["^V",[["~$_","~$t"]]],"~:protocol-impl",null,"~:arglists-meta",["^V",[null,null]],"^8",1,"~:variadic?",false,"^7",33,"~:ret-tag","~$any","^9",34,"~:max-fixed-arity",2,"~:fn-var",true,"^2O",["^V",["^2P",["^V",[["~$_","~$t"]]]]],"^2N",null],"~$IBoundary",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",122,"^8",14,"^9",122,"^:",23,"~:protocol-symbol",true,"~:jsdoc",["^V",["@interface"]],"~:protocol-info",["^ ","~:methods",["^ ","~$contains-entity?",[["~$_","~$s"]],"~$contains-point?",[["~$_","~$p"]]]]],"^2[",true,"^J","~$thi.ng.geom.core/IBoundary","^6","thi/ng/geom/core.cljc","^:",23,"^8",1,"^7",122,"^31",["^ ","^32",["^ ","^33",[["~$_","~$s"]],"^34",[["~$_","~$p"]]]],"~:info",null,"^9",122,"~:tag","^2W","~:impls",["^H",[]],"^30",["^V",["@interface"]]],"~$IRotate",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",30,"^8",14,"^9",30,"^:",21,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","~$rotate",[["~$_","~$t"]]]]],"^2[",true,"^J","~$thi.ng.geom.core/IRotate","^6","thi/ng/geom/core.cljc","^:",21,"^8",1,"^7",30,"^31",["^ ","^32",["^ ","^3:",[["~$_","~$t"]]]],"^36",null,"^9",30,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"~$ISample",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",198,"^8",14,"^9",198,"^:",21,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","~$point-at",[["~$_","~$t"],["~$_","~$u","~$v"]],"~$random-point",[["~$_"]],"~$random-point-inside",[["~$_"]],"~$sample-uniform",[["~$_","~$dist","~$include-last?"]],"~$sample-with-resolution",[["~$_","~$res"]]]]],"^2[",true,"^J","~$thi.ng.geom.core/ISample","^6","thi/ng/geom/core.cljc","^:",21,"^8",1,"^7",198,"^31",["^ ","^32",["^ ","^3=",[["~$_","~$t"],["~$_","~$u","~$v"]],"^3>",[["~$_"]],"^3?",[["~$_"]],"^3@",[["~$_","^3A","^3B"]],"^3C",[["~$_","^3D"]]]],"^36",null,"^9",198,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"~$IRotate3D",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",33,"^8",14,"^9",33,"^:",23,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","^2J",[["~$_","~$t"]],"~$rotate-y",[["~$_","~$t"]],"~$rotate-z",[["~$_","~$t"]],"~$rotate-around-axis",[["~$_","~$a","~$t"]]]]],"^2[",true,"^J","^2M","^6","thi/ng/geom/core.cljc","^:",23,"^8",1,"^7",33,"^31",["^ ","^32",["^ ","^2J",[["~$_","~$t"]],"^3G",[["~$_","~$t"]],"^3H",[["~$_","~$t"]],"^3I",[["~$_","~$a","~$t"]]]],"^36",null,"^9",33,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"^3H",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",36,"^8",4,"^9",36,"^:",12,"^2L","^2M","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$t"]]]]]],"^2L","^2M","^J","~$thi.ng.geom.core/rotate-z","^6","thi/ng/geom/core.cljc","^:",12,"^2R",["^V",[["~$_","~$t"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",33,"^2V","^2W","^9",36,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$t"]]]]],"^2N",null],"~$replace-vertex",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",67,"^8",4,"^9",67,"^:",18,"^2L","~$thi.ng.geom.core/IGraph","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$a","~$b"]]]]]],"^2L","^3L","^J","~$thi.ng.geom.core/replace-vertex","^6","thi/ng/geom/core.cljc","^:",18,"^2R",["^V",[["~$_","~$a","~$b"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",61,"^2V","^2W","^9",67,"^2X",3,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$a","~$b"]]]]],"^2N",null],"~$subdivide-face",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",211,"^8",4,"^9",211,"^:",18,"^2L","~$thi.ng.geom.core/ISubdivide","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$f","~$p","~$displace","~$splits"]]]]]],"^2L","^3O","^J","~$thi.ng.geom.core/subdivide-face","^6","thi/ng/geom/core.cljc","^:",18,"^2R",["^V",[["~$_","~$f","~$p","^3P","^3Q"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",208,"^2V","^2W","^9",211,"^2X",5,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$f","~$p","^3P","^3Q"]]]]],"^2N",null],"~$get-prop",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",227,"^8",4,"^9",227,"^:",12,"^2L","~$thi.ng.geom.core/IMutableProps","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$k"]]]]]],"^2L","^3T","^J","~$thi.ng.geom.core/get-prop","^6","thi/ng/geom/core.cljc","^:",12,"^2R",["^V",[["~$_","~$k"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",226,"^2V","^2W","^9",227,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$k"]]]]],"^2N",null],"~$face-normal",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",104,"^8",4,"^9",104,"^:",15,"^2L","~$thi.ng.geom.core/INormalAccess","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$f"]]]]]],"^2L","^3W","^J","~$thi.ng.geom.core/face-normal","^6","thi/ng/geom/core.cljc","^:",15,"^2R",["^V",[["~$_","~$f"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",100,"^2V","^2W","^9",104,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$f"]]]]],"^2N",null],"~$IConvexHull",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",162,"^8",14,"^9",162,"^:",25,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","~$convex-hull",[["~$_"]]]]],"^2[",true,"^J","~$thi.ng.geom.core/IConvexHull","^6","thi/ng/geom/core.cljc","^:",25,"^8",1,"^7",162,"^31",["^ ","^32",["^ ","^3Z",[["~$_"]]]],"^36",null,"^9",162,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"~$extrude",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",166,"^8",4,"^9",166,"^:",11,"^2L","~$thi.ng.geom.core/IExtrude","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$opts"]]]]]],"^2L","^41","^J","~$thi.ng.geom.core/extrude","^6","thi/ng/geom/core.cljc","^:",11,"^2R",["^V",[["~$_","^42"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",165,"^2V","^2W","^9",166,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","^42"]]]]],"^2N",null],"~$ITessellate",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",213,"^8",14,"^9",213,"^:",25,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","~$tessellate",[["~$_"],["~$_","^42"]]]]],"^2[",true,"^J","~$thi.ng.geom.core/ITessellate","^6","thi/ng/geom/core.cljc","^:",25,"^8",1,"^7",213,"^31",["^ ","^32",["^ ","^45",[["~$_"],["~$_","^42"]]]],"^36",null,"^9",213,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"~$remove-vertex",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",66,"^8",4,"^9",66,"^:",17,"^2L","^3L","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$v"]]]]]],"^2L","^3L","^J","~$thi.ng.geom.core/remove-vertex","^6","thi/ng/geom/core.cljc","^:",17,"^2R",["^V",[["~$_","~$v"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",61,"^2V","^2W","^9",66,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$v"]]]]],"^2N",null],"^3?",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",201,"^8",4,"^9",201,"^:",23,"^2L","^3E","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^3E","^J","~$thi.ng.geom.core/random-point-inside","^6","thi/ng/geom/core.cljc","^:",23,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",198,"^2V","^2W","^9",201,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N",null],"^34",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",124,"^8",4,"^9",124,"^:",19,"^2L","^35","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$p"]]]]]],"^2L","^35","^J","~$thi.ng.geom.core/contains-point?","^6","thi/ng/geom/core.cljc","^:",19,"^2R",["^V",[["~$_","~$p"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",122,"^2V","^2W","^9",124,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$p"]]]]],"^2N",null],"~$ISubdivide",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",208,"^8",14,"^9",208,"^:",24,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","~$subdivide",[["~$_"],["~$_","^42"]],"~$subdivide-edge",[["~$_","~$a","~$b","^3Q"]],"^3N",[["~$_","~$f","~$p","^3P","^3Q"]]]]],"^2[",true,"^J","^3O","^6","thi/ng/geom/core.cljc","^:",24,"^8",1,"^7",208,"^31",["^ ","^32",["^ ","^4<",[["~$_"],["~$_","^42"]],"^4=",[["~$_","~$a","~$b","^3Q"]],"^3N",[["~$_","~$f","~$p","^3P","^3Q"]]]],"^36",null,"^9",208,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"~$IPolar",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",23,"^8",14,"^9",23,"^:",20,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","~$as-polar",[["~$_"]],"~$as-cartesian",[["~$_"]]]]],"^2[",true,"^J","~$thi.ng.geom.core/IPolar","^6","thi/ng/geom/core.cljc","^:",20,"^8",1,"^7",23,"^31",["^ ","^32",["^ ","^4?",[["~$_"]],"^4@",[["~$_"]]]],"^36",null,"^9",23,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"~$edges",["^ ","^2K",null,"^5",["^ ","^2L","~$thi.ng.geom.core/IEdgeAccess","^6","thi/ng/geom/core.cljc","^:",9,"~:top-fn",["^ ","^2U",false,"~:fixed-arity",2,"^2X",2,"^2R",["^V",[["~$_"],["~$_","^42"]]],"^2O",["^V",[["~$_"],["~$_","^42"]]],"^2T",["^V",[null,null]]],"^8",4,"^7",81,"^9",81,"^2O",["^V",["^2P",["^V",[["~$_"],["~$_","^42"]]]]],"^2N",null],"^2L","^4C","^J","~$thi.ng.geom.core/edges","^6","thi/ng/geom/core.cljc","^:",9,"^4D",["^ ","^2U",false,"^4E",2,"^2X",2,"^2R",["^V",[["~$_"],["~$_","^42"]]],"^2O",["^V",[["~$_"],["~$_","^42"]]],"^2T",["^V",[null,null]]],"^2R",["^V",[["~$_"],["~$_","^42"]]],"^2S",null,"^4E",2,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^32",[["^ ","^4E",1,"^2U",false,"^37","^2W"],["^ ","^4E",2,"^2U",false,"^37","^2W"]],"^7",80,"^9",81,"^2X",2,"^2Y",true,"^2O",["^V",[["~$_"],["~$_","^42"]]],"^2N",null],"~$IDirectedGraph",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",70,"^8",14,"^9",70,"^:",28,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","~$in-vertices",[["~$_","~$v"]],"~$out-vertices",[["~$_","~$v"]]]]],"^2[",true,"^J","~$thi.ng.geom.core/IDirectedGraph","^6","thi/ng/geom/core.cljc","^:",28,"^8",1,"^7",70,"^31",["^ ","^32",["^ ","^4H",[["~$_","~$v"]],"^4I",[["~$_","~$v"]]]],"^36",null,"^9",70,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"^4@",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",25,"^8",4,"^9",25,"^:",16,"^2L","^4A","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^4A","^J","~$thi.ng.geom.core/as-cartesian","^6","thi/ng/geom/core.cljc","^:",16,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",23,"^2V","^2W","^9",25,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N",null],"~$scale-size",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",44,"^8",4,"^9",44,"^:",14,"^2L","~$thi.ng.geom.core/IScale","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$s"]]]]]],"^2L","^4M","^J","~$thi.ng.geom.core/scale-size","^6","thi/ng/geom/core.cljc","^:",14,"^2R",["^V",[["~$_","~$s"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",42,"^2V","^2W","^9",44,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$s"]]]]],"^2N",null],"~$ISpatialTree",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",220,"^8",14,"^9",220,"^:",26,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","~$add-point",[["~$_","~$p","~$d"]],"~$delete-point",[["~$_","~$p"]],"~$get-point",[["~$_"]],"~$get-point-data",[["~$_"]]]]],"^2[",true,"^J","~$thi.ng.geom.core/ISpatialTree","^6","thi/ng/geom/core.cljc","^:",26,"^8",1,"^7",220,"^31",["^ ","^32",["^ ","^4P",[["~$_","~$p","~$d"]],"^4Q",[["~$_","~$p"]],"^4R",[["~$_"]],"^4S",[["~$_"]]]],"^36",null,"^9",220,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"~$reflect",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",40,"^8",4,"^9",40,"^:",11,"^2L","~$thi.ng.geom.core/IReflect","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$r"]]]]]],"^2L","^4V","^J","~$thi.ng.geom.core/reflect","^6","thi/ng/geom/core.cljc","^:",11,"^2R",["^V",[["~$_","~$r"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",39,"^2V","^2W","^9",40,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$r"]]]]],"^2N",null],"~$height",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",137,"^8",4,"^9",137,"^:",10,"^2L","~$thi.ng.geom.core/IBounds","^2N","Returns entity's extent along Y axis","^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^4Y","^J","~$thi.ng.geom.core/height","^6","thi/ng/geom/core.cljc","^:",10,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",132,"^2V","^2W","^9",137,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N","Returns entity's extent along Y axis"],"~$intersect-shape",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",181,"^8",4,"^9",181,"^:",19,"^2L","~$thi.ng.geom.core/IIntersect","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$s"]]]]]],"^2L","^50","^J","~$thi.ng.geom.core/intersect-shape","^6","thi/ng/geom/core.cljc","^:",19,"^2R",["^V",[["~$_","~$s"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",178,"^2V","^2W","^9",181,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$s"]]]]],"^2N",null],"~$IBoundingSphere",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",129,"^8",14,"^9",129,"^:",29,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","~$bounding-sphere",[["~$_"]]]]],"^2[",true,"^J","~$thi.ng.geom.core/IBoundingSphere","^6","thi/ng/geom/core.cljc","^:",29,"^8",1,"^7",129,"^31",["^ ","^32",["^ ","^53",[["~$_"]]]],"^36",null,"^9",129,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"~$as-mesh",["^ ","^2K",null,"^5",["^ ","^2L","~$thi.ng.geom.core/IMeshConvert","^6","thi/ng/geom/core.cljc","^:",11,"^4D",["^ ","^2U",false,"^4E",2,"^2X",2,"^2R",["^V",[["~$_"],["~$_","^42"]]],"^2O",["^V",[["~$_"],["~$_","^42"]]],"^2T",["^V",[null,null]]],"^8",4,"^7",184,"^9",184,"^2O",["^V",["^2P",["^V",[["~$_"],["~$_","^42"]]]]],"^2N","Transforms the current enitity into a mesh instance"],"^2L","^56","^J","~$thi.ng.geom.core/as-mesh","^6","thi/ng/geom/core.cljc","^:",11,"^4D",["^ ","^2U",false,"^4E",2,"^2X",2,"^2R",["^V",[["~$_"],["~$_","^42"]]],"^2O",["^V",[["~$_"],["~$_","^42"]]],"^2T",["^V",[null,null]]],"^2R",["^V",[["~$_"],["~$_","^42"]]],"^2S",null,"^4E",2,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^32",[["^ ","^4E",1,"^2U",false,"^37","^2W"],["^ ","^4E",2,"^2U",false,"^37","^2W"]],"^7",183,"^9",184,"^2X",2,"^2Y",true,"^2O",["^V",[["~$_"],["~$_","^42"]]],"^2N","Transforms the current enitity into a mesh instance"],"~$as-matrix",["^ ","^2K",null,"^5",["^ ","^2L","~$thi.ng.geom.core/IMatrixConvert","^6","thi/ng/geom/core.cljc","^:",13,"^4D",["^ ","^2U",false,"^4E",2,"^2X",2,"^2R",["^V",[["~$_"],["~$_","^42"]]],"^2O",["^V",[["~$_"],["~$_","^42"]]],"^2T",["^V",[null,null]]],"^8",4,"^7",59,"^9",59,"^2O",["^V",["^2P",["^V",[["~$_"],["~$_","^42"]]]]],"^2N",null],"^2L","^59","^J","~$thi.ng.geom.core/as-matrix","^6","thi/ng/geom/core.cljc","^:",13,"^4D",["^ ","^2U",false,"^4E",2,"^2X",2,"^2R",["^V",[["~$_"],["~$_","^42"]]],"^2O",["^V",[["~$_"],["~$_","^42"]]],"^2T",["^V",[null,null]]],"^2R",["^V",[["~$_"],["~$_","^42"]]],"^2S",null,"^4E",2,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^32",[["^ ","^4E",1,"^2U",false,"^37","^2W"],["^ ","^4E",2,"^2U",false,"^37","^2W"]],"^7",58,"^9",59,"^2X",2,"^2Y",true,"^2O",["^V",[["~$_"],["~$_","^42"]]],"^2N",null],"~$vertex-normals",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",105,"^8",4,"^9",105,"^:",18,"^2L","^3W","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$force?"]]]]]],"^2L","^3W","^J","~$thi.ng.geom.core/vertex-normals","^6","thi/ng/geom/core.cljc","^:",18,"^2R",["^V",[["~$_","^5<"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",100,"^2V","^2W","^9",105,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","^5<"]]]]],"^2N",null],"~$heading",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",11,"^8",4,"^9",11,"^:",11,"^2L","~$thi.ng.geom.core/IHeading","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^5?","^J","~$thi.ng.geom.core/heading","^6","thi/ng/geom/core.cljc","^:",11,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",10,"^2V","^2W","^9",11,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N",null],"~$map-point",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",188,"^8",4,"^9",188,"^:",13,"^2L","~$thi.ng.geom.core/IPointMap","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$p"]]]]]],"^2L","^5B","^J","~$thi.ng.geom.core/map-point","^6","thi/ng/geom/core.cljc","^:",13,"^2R",["^V",[["~$_","~$p"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",187,"^2V","^2W","^9",188,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$p"]]]]],"^2N",null],"~$merge-vertices",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",68,"^8",4,"^9",68,"^:",18,"^2L","^3L","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$a","~$b"]]]]]],"^2L","^3L","^J","~$thi.ng.geom.core/merge-vertices","^6","thi/ng/geom/core.cljc","^:",18,"^2R",["^V",[["~$_","~$a","~$b"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",61,"^2V","^2W","^9",68,"^2X",3,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$a","~$b"]]]]],"^2N",null],"~$IBounds",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",132,"^8",14,"^9",132,"^:",21,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","~$bounds",[["~$_"]],"~$depth",[["~$_"]],"^4X",[["~$_"]],"~$width",[["~$_"]]]]],"^2[",true,"^J","^4Y","^6","thi/ng/geom/core.cljc","^:",21,"^8",1,"^7",132,"^31",["^ ","^32",["^ ","^5G",[["~$_"]],"^5H",[["~$_"]],"^4X",[["~$_"]],"^5I",[["~$_"]]]],"^36",null,"^9",132,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"~$slope-xy",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",16,"^8",4,"^9",16,"^:",12,"^2L","^5?","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^5?","^J","~$thi.ng.geom.core/slope-xy","^6","thi/ng/geom/core.cljc","^:",12,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",10,"^2V","^2W","^9",16,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N",null],"~$IPolygonConvert",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",191,"^8",14,"^9",191,"^:",29,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","~$as-polygon",[["~$_"],["~$_","^3D"]]]]],"^2[",true,"^J","~$thi.ng.geom.core/IPolygonConvert","^6","thi/ng/geom/core.cljc","^:",29,"^8",1,"^7",191,"^31",["^ ","^32",["^ ","^5M",[["~$_"],["~$_","^3D"]]]],"^36",null,"^9",191,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"~$IVertexAccess",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",77,"^8",14,"^9",77,"^:",27,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","~$vertices",[["~$_"],["~$_","^42"]]]]],"^2[",true,"^J","~$thi.ng.geom.core/IVertexAccess","^6","thi/ng/geom/core.cljc","^:",27,"^8",1,"^7",77,"^31",["^ ","^32",["^ ","^5P",[["~$_"],["~$_","^42"]]]],"^36",null,"^9",77,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"~$update-prop!",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",229,"^8",4,"^9",229,"^:",16,"^2L","^3T","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$k","~$f"]]]]]],"^2L","^3T","^J","~$thi.ng.geom.core/update-prop!","^6","thi/ng/geom/core.cljc","^:",16,"^2R",["^V",[["~$_","~$k","~$f"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",226,"^2V","^2W","^9",229,"^2X",3,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$k","~$f"]]]]],"^2N",null],"~$transform-vector",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",56,"^8",4,"^9",56,"^:",20,"^2L","~$thi.ng.geom.core/IVectorTransform","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$v"]]]]]],"^2L","^5U","^J","~$thi.ng.geom.core/transform-vector","^6","thi/ng/geom/core.cljc","^:",20,"^2R",["^V",[["~$_","~$v"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",55,"^2V","^2W","^9",56,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$v"]]]]],"^2N",null],"^4I",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",72,"^8",4,"^9",72,"^:",16,"^2L","^4J","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$v"]]]]]],"^2L","^4J","^J","~$thi.ng.geom.core/out-vertices","^6","thi/ng/geom/core.cljc","^:",16,"^2R",["^V",[["~$_","~$v"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",70,"^2V","^2W","^9",72,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$v"]]]]],"^2N",null],"~$ITransform",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",49,"^8",14,"^9",49,"^:",24,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","~$transform",[["~$_","~$tx"]]]]],"^2[",true,"^J","~$thi.ng.geom.core/ITransform","^6","thi/ng/geom/core.cljc","^:",24,"^8",1,"^7",49,"^31",["^ ","^32",["^ ","^5Y",[["~$_","^5Z"]]]],"^36",null,"^9",49,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"^4S",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",224,"^8",4,"^9",224,"^:",18,"^2L","^4T","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^4T","^J","~$thi.ng.geom.core/get-point-data","^6","thi/ng/geom/core.cljc","^:",18,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",220,"^2V","^2W","^9",224,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N",null],"^3G",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",35,"^8",4,"^9",35,"^:",12,"^2L","^2M","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$t"]]]]]],"^2L","^2M","^J","~$thi.ng.geom.core/rotate-y","^6","thi/ng/geom/core.cljc","^:",12,"^2R",["^V",[["~$_","~$t"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",33,"^2V","^2W","^9",35,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$t"]]]]],"^2N",null],"~$IInset",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",175,"^8",14,"^9",175,"^:",20,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","~$inset",[["~$_","^63"]]]]],"^2[",true,"^J","~$thi.ng.geom.core/IInset","^6","thi/ng/geom/core.cljc","^:",20,"^8",1,"^7",175,"^31",["^ ","^32",["^ ","^63",[["~$_","^63"]]]],"^36",null,"^9",175,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"~$as-graph",["^ ","^2K",null,"^5",["^ ","^2L","~$thi.ng.geom.core/IGraphConvert","^6","thi/ng/geom/core.cljc","^:",12,"^4D",["^ ","^2U",false,"^4E",2,"^2X",2,"^2R",["^V",[["~$_"],["~$_","^42"]]],"^2O",["^V",[["~$_"],["~$_","^42"]]],"^2T",["^V",[null,null]]],"^8",4,"^7",75,"^9",75,"^2O",["^V",["^2P",["^V",[["~$_"],["~$_","^42"]]]]],"^2N",null],"^2L","^66","^J","~$thi.ng.geom.core/as-graph","^6","thi/ng/geom/core.cljc","^:",12,"^4D",["^ ","^2U",false,"^4E",2,"^2X",2,"^2R",["^V",[["~$_"],["~$_","^42"]]],"^2O",["^V",[["~$_"],["~$_","^42"]]],"^2T",["^V",[null,null]]],"^2R",["^V",[["~$_"],["~$_","^42"]]],"^2S",null,"^4E",2,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^32",[["^ ","^4E",1,"^2U",false,"^37","^2W"],["^ ","^4E",2,"^2U",false,"^37","^2W"]],"^7",74,"^9",75,"^2X",2,"^2Y",true,"^2O",["^V",[["~$_"],["~$_","^42"]]],"^2N",null],"^5P",["^ ","^2K",null,"^5",["^ ","^2L","^5Q","^6","thi/ng/geom/core.cljc","^:",12,"^4D",["^ ","^2U",false,"^4E",2,"^2X",2,"^2R",["^V",[["~$_"],["~$_","^42"]]],"^2O",["^V",[["~$_"],["~$_","^42"]]],"^2T",["^V",[null,null]]],"^8",4,"^7",78,"^9",78,"^2O",["^V",["^2P",["^V",[["~$_"],["~$_","^42"]]]]],"^2N",null],"^2L","^5Q","^J","~$thi.ng.geom.core/vertices","^6","thi/ng/geom/core.cljc","^:",12,"^4D",["^ ","^2U",false,"^4E",2,"^2X",2,"^2R",["^V",[["~$_"],["~$_","^42"]]],"^2O",["^V",[["~$_"],["~$_","^42"]]],"^2T",["^V",[null,null]]],"^2R",["^V",[["~$_"],["~$_","^42"]]],"^2S",null,"^4E",2,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^32",[["^ ","^4E",1,"^2U",false,"^37","^2W"],["^ ","^4E",2,"^2U",false,"^37","^2W"]],"^7",77,"^9",78,"^2X",2,"^2Y",true,"^2O",["^V",[["~$_"],["~$_","^42"]]],"^2N",null],"^I",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",173,"^8",4,"^9",173,"^:",8,"^2L","~$thi.ng.geom.core/IGeomContainer","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$m"]]]]]],"^2L","^69","^J","~$thi.ng.geom.core/into","^6","thi/ng/geom/core.cljc","^:",8,"^2R",["^V",[["~$_","~$m"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",172,"^2V","^2W","^9",173,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$m"]]]]],"^2N",null],"^5Y",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",50,"^8",4,"^9",50,"^:",13,"^2L","^5[","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","^5Z"]]]]]],"^2L","^5[","^J","~$thi.ng.geom.core/transform","^6","thi/ng/geom/core.cljc","^:",13,"^2R",["^V",[["~$_","^5Z"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",49,"^2V","^2W","^9",50,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","^5Z"]]]]],"^2N",null],"~$classify-point",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",153,"^8",4,"^9",153,"^:",18,"^2L","~$thi.ng.geom.core/IClassify","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$p"]]]]]],"^2L","^6=","^J","~$thi.ng.geom.core/classify-point","^6","thi/ng/geom/core.cljc","^:",18,"^2R",["^V",[["~$_","~$p"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",152,"^2V","^2W","^9",153,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$p"]]]]],"^2N",null],"~$IGraph",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",61,"^8",14,"^9",61,"^:",20,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","~$connected-components",[["~$_"]],"~$cyclic?",[["~$_"]],"~$vertex-valence",[["~$_","~$v"]],"~$vertex-neighbors",[["~$_","~$v"]],"^47",[["~$_","~$v"]],"^3K",[["~$_","~$a","~$b"]],"^5D",[["~$_","~$a","~$b"]]]]],"^2[",true,"^J","^3L","^6","thi/ng/geom/core.cljc","^:",20,"^8",1,"^7",61,"^31",["^ ","^32",["^ ","^6@",[["~$_"]],"^6A",[["~$_"]],"^6B",[["~$_","~$v"]],"^6C",[["~$_","~$v"]],"^47",[["~$_","~$v"]],"^3K",[["~$_","~$a","~$b"]],"^5D",[["~$_","~$a","~$b"]]]],"^36",null,"^9",61,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"~$IArea",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",118,"^8",14,"^9",118,"^:",19,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","~$area",[["~$_"]]]]],"^2[",true,"^J","~$thi.ng.geom.core/IArea","^6","thi/ng/geom/core.cljc","^:",19,"^8",1,"^7",118,"^31",["^ ","^32",["^ ","^6E",[["~$_"]]]],"^36",null,"^9",118,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"^63",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",176,"^8",4,"^9",176,"^:",9,"^2L","^64","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","^63"]]]]]],"^2L","^64","^J","~$thi.ng.geom.core/inset","^6","thi/ng/geom/core.cljc","^:",9,"^2R",["^V",[["~$_","^63"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",175,"^2V","^2W","^9",176,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","^63"]]]]],"^2N",null],"^4P",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",221,"^8",4,"^9",221,"^:",13,"^2L","^4T","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$p","~$d"]]]]]],"^2L","^4T","^J","~$thi.ng.geom.core/add-point","^6","thi/ng/geom/core.cljc","^:",13,"^2R",["^V",[["~$_","~$p","~$d"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",220,"^2V","^2W","^9",221,"^2X",3,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$p","~$d"]]]]],"^2N",null],"~$IPointMap",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",187,"^8",14,"^9",187,"^:",23,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","^5A",[["~$_","~$p"]],"~$unmap-point",[["~$_","~$p"]]]]],"^2[",true,"^J","^5B","^6","thi/ng/geom/core.cljc","^:",23,"^8",1,"^7",187,"^31",["^ ","^32",["^ ","^5A",[["~$_","~$p"]],"^6J",[["~$_","~$p"]]]],"^36",null,"^9",187,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"~$slope-xz",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",17,"^8",4,"^9",17,"^:",12,"^2L","^5?","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^5?","^J","~$thi.ng.geom.core/slope-xz","^6","thi/ng/geom/core.cljc","^:",12,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",10,"^2V","^2W","^9",17,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N",null],"^3Z",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",163,"^8",4,"^9",163,"^:",15,"^2L","^3[","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^3[","^J","~$thi.ng.geom.core/convex-hull","^6","thi/ng/geom/core.cljc","^:",15,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",162,"^2V","^2W","^9",163,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N",null],"~$shear",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",47,"^8",4,"^9",47,"^:",9,"^2L","~$thi.ng.geom.core/IShear","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$s"]]]]]],"^2L","^6O","^J","~$thi.ng.geom.core/shear","^6","thi/ng/geom/core.cljc","^:",9,"^2R",["^V",[["~$_","~$s"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",46,"^2V","^2W","^9",47,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$s"]]]]],"^2N",null],"^6@",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",62,"^8",4,"^9",62,"^:",24,"^2L","^3L","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^3L","^J","~$thi.ng.geom.core/connected-components","^6","thi/ng/geom/core.cljc","^:",24,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",61,"^2V","^2W","^9",62,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N",null],"~$heading-xy",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",12,"^8",4,"^9",12,"^:",14,"^2L","^5?","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^5?","^J","~$thi.ng.geom.core/heading-xy","^6","thi/ng/geom/core.cljc","^:",14,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",10,"^2V","^2W","^9",12,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N",null],"~$INormalAccess",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",100,"^8",14,"^9",100,"^:",27,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","~$compute-face-normals",[["~$_"]],"~$compute-vertex-normals",[["~$_"]],"~$face-normals",[["~$_","^5<"]],"^3V",[["~$_","~$f"]],"^5;",[["~$_","^5<"]],"~$vertex-normal",[["~$_","~$v"]]]]],"^2[",true,"^J","^3W","^6","thi/ng/geom/core.cljc","^:",27,"^8",1,"^7",100,"^31",["^ ","^32",["^ ","^6U",[["~$_"]],"^6V",[["~$_"]],"^6W",[["~$_","^5<"]],"^3V",[["~$_","~$f"]],"^5;",[["~$_","^5<"]],"^6X",[["~$_","~$v"]]]],"^36",null,"^9",100,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"~$flip",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",170,"^8",4,"^9",170,"^:",8,"^2L","~$thi.ng.geom.core/IFlip","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^6Z","^J","~$thi.ng.geom.core/flip","^6","thi/ng/geom/core.cljc","^:",8,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",169,"^2V","^2W","^9",170,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N",null],"^6C",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",65,"^8",4,"^9",65,"^:",20,"^2L","^3L","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$v"]]]]]],"^2L","^3L","^J","~$thi.ng.geom.core/vertex-neighbors","^6","thi/ng/geom/core.cljc","^:",20,"^2R",["^V",[["~$_","~$v"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",61,"^2V","^2W","^9",65,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$v"]]]]],"^2N",null],"^6U",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",101,"^8",4,"^9",101,"^:",24,"^2L","^3W","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^3W","^J","~$thi.ng.geom.core/compute-face-normals","^6","thi/ng/geom/core.cljc","^:",24,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",100,"^2V","^2W","^9",101,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N",null],"~$IScale",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",42,"^8",14,"^9",42,"^:",20,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","~$scale",[["~$_","~$s"]],"^4L",[["~$_","~$s"]]]]],"^2[",true,"^J","^4M","^6","thi/ng/geom/core.cljc","^:",20,"^8",1,"^7",42,"^31",["^ ","^32",["^ ","^73",[["~$_","~$s"]],"^4L",[["~$_","~$s"]]]],"^36",null,"^9",42,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"~$align-with",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",115,"^8",4,"^9",115,"^:",14,"^2L","~$thi.ng.geom.core/IAlign","^2N","Returns updated entity aligned with `x` in the specified manner","^2O",["^V",["^2P",["^V",[["~$_","~$x","^42"]]]]]],"^2L","^75","^J","~$thi.ng.geom.core/align-with","^6","thi/ng/geom/core.cljc","^:",14,"^2R",["^V",[["~$_","~$x","^42"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",114,"^2V","^2W","^9",115,"^2X",3,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$x","^42"]]]]],"^2N","Returns updated entity aligned with `x` in the specified manner"],"~$IAttributeAccess",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",108,"^8",14,"^9",108,"^:",30,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","~$attribs",[["~$_","~$ctx"],["~$_","^79","~$attr"]]]]],"^2[",true,"^J","~$thi.ng.geom.core/IAttributeAccess","^6","thi/ng/geom/core.cljc","^:",30,"^8",1,"^7",108,"^31",["^ ","^32",["^ ","^78",[["~$_","^79"],["~$_","^79","^7:"]]]],"^36",null,"^9",108,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"~$clip-with",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",160,"^8",4,"^9",160,"^:",13,"^2L","~$thi.ng.geom.core/IClip","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$s"]]]]]],"^2L","^7=","^J","~$thi.ng.geom.core/clip-with","^6","thi/ng/geom/core.cljc","^:",13,"^2R",["^V",[["~$_","~$s"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",159,"^2V","^2W","^9",160,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$s"]]]]],"^2N",null],"^6X",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",106,"^8",4,"^9",106,"^:",17,"^2L","^3W","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$v"]]]]]],"^2L","^3W","^J","~$thi.ng.geom.core/vertex-normal","^6","thi/ng/geom/core.cljc","^:",17,"^2R",["^V",[["~$_","~$v"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",100,"^2V","^2W","^9",106,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$v"]]]]],"^2N",null],"~$IGeomContainer",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",172,"^8",14,"^9",172,"^:",28,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","^I",[["~$_","~$m"]]]]],"^2[",true,"^J","^69","^6","thi/ng/geom/core.cljc","^:",28,"^8",1,"^7",172,"^31",["^ ","^32",["^ ","^I",[["~$_","~$m"]]]],"^36",null,"^9",172,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"^3=",["^ ","^2K",null,"^5",["^ ","^2L","^3E","^6","thi/ng/geom/core.cljc","^:",12,"^4D",["^ ","^2U",false,"^4E",3,"^2X",3,"^2R",["^V",[["~$_","~$t"],["~$_","~$u","~$v"]]],"^2O",["^V",[["~$_","~$t"],["~$_","~$u","~$v"]]],"^2T",["^V",[null,null]]],"^8",4,"^7",199,"^9",199,"^2O",["^V",["^2P",["^V",[["~$_","~$t"],["~$_","~$u","~$v"]]]]],"^2N",null],"^2L","^3E","^J","~$thi.ng.geom.core/point-at","^6","thi/ng/geom/core.cljc","^:",12,"^4D",["^ ","^2U",false,"^4E",3,"^2X",3,"^2R",["^V",[["~$_","~$t"],["~$_","~$u","~$v"]]],"^2O",["^V",[["~$_","~$t"],["~$_","~$u","~$v"]]],"^2T",["^V",[null,null]]],"^2R",["^V",[["~$_","~$t"],["~$_","~$u","~$v"]]],"^2S",null,"^4E",3,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^32",[["^ ","^4E",2,"^2U",false,"^37","^2W"],["^ ","^4E",3,"^2U",false,"^37","^2W"]],"^7",198,"^9",199,"^2X",3,"^2Y",true,"^2O",["^V",[["~$_","~$t"],["~$_","~$u","~$v"]]],"^2N",null],"~$IHeading",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",10,"^8",14,"^9",10,"^:",22,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","^5>",[["~$_"]],"^6R",[["~$_"]],"~$heading-xz",[["~$_"]],"~$heading-yz",[["~$_"]],"~$angle-between",[["~$_","~$a"]],"^5J",[["~$_"]],"^6K",[["~$_"]],"~$slope-yz",[["~$_"]]]]],"^2[",true,"^J","^5?","^6","thi/ng/geom/core.cljc","^:",22,"^8",1,"^7",10,"^31",["^ ","^32",["^ ","^5>",[["~$_"]],"^6R",[["~$_"]],"^7C",[["~$_"]],"^7D",[["~$_"]],"^7E",[["~$_","~$a"]],"^5J",[["~$_"]],"^6K",[["~$_"]],"^7F",[["~$_"]]]],"^36",null,"^9",10,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"^73",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",43,"^8",4,"^9",43,"^:",9,"^2L","^4M","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$s"]]]]]],"^2L","^4M","^J","~$thi.ng.geom.core/scale","^6","thi/ng/geom/core.cljc","^:",9,"^2R",["^V",[["~$_","~$s"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",42,"^2V","^2W","^9",43,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$s"]]]]],"^2N",null],"~$IProximity",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",195,"^8",14,"^9",195,"^:",24,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","~$closest-point",[["~$_","~$p"]]]]],"^2[",true,"^J","~$thi.ng.geom.core/IProximity","^6","thi/ng/geom/core.cljc","^:",24,"^8",1,"^7",195,"^31",["^ ","^32",["^ ","^7I",[["~$_","~$p"]]]],"^36",null,"^9",195,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"~$IVectorTransform",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",55,"^8",14,"^9",55,"^:",30,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","^5T",[["~$_","~$v"]]]]],"^2[",true,"^J","^5U","^6","thi/ng/geom/core.cljc","^:",30,"^8",1,"^7",55,"^31",["^ ","^32",["^ ","^5T",[["~$_","~$v"]]]],"^36",null,"^9",55,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"^33",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",123,"^8",4,"^9",123,"^:",20,"^2L","^35","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$s"]]]]]],"^2L","^35","^J","~$thi.ng.geom.core/contains-entity?","^6","thi/ng/geom/core.cljc","^:",20,"^2R",["^V",[["~$_","~$s"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",122,"^2V","^2W","^9",123,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$s"]]]]],"^2N",null],"~$IShear",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",46,"^8",14,"^9",46,"^:",20,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","^6N",[["~$_","~$s"]]]]],"^2[",true,"^J","^6O","^6","thi/ng/geom/core.cljc","^:",20,"^8",1,"^7",46,"^31",["^ ","^32",["^ ","^6N",[["~$_","~$s"]]]],"^36",null,"^9",46,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"^7C",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",13,"^8",4,"^9",13,"^:",14,"^2L","^5?","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^5?","^J","~$thi.ng.geom.core/heading-xz","^6","thi/ng/geom/core.cljc","^:",14,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",10,"^2V","^2W","^9",13,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N",null],"~$raw",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",112,"^8",4,"^9",112,"^:",7,"^2L","~$thi.ng.geom.core/IRawAccess","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","^79"]]]]]],"^2L","^7P","^J","~$thi.ng.geom.core/raw","^6","thi/ng/geom/core.cljc","^:",7,"^2R",["^V",[["~$_","^79"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",111,"^2V","^2W","^9",112,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","^79"]]]]],"^2N",null],"^3A",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",7,"^8",4,"^9",7,"^:",8,"^2L","~$thi.ng.geom.core/IDistance","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$a"]]]]]],"^2L","^7R","^J","~$thi.ng.geom.core/dist","^6","thi/ng/geom/core.cljc","^:",8,"^2R",["^V",[["~$_","~$a"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",6,"^2V","^2W","^9",7,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$a"]]]]],"^2N",null],"^3I",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",37,"^8",4,"^9",37,"^:",22,"^2L","^2M","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$a","~$t"]]]]]],"^2L","^2M","^J","~$thi.ng.geom.core/rotate-around-axis","^6","thi/ng/geom/core.cljc","^:",22,"^2R",["^V",[["~$_","~$a","~$t"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",33,"^2V","^2W","^9",37,"^2X",3,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$a","~$t"]]]]],"^2N",null],"~$IRawAccess",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",111,"^8",14,"^9",111,"^:",24,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","^7O",[["~$_","^79"]]]]],"^2[",true,"^J","^7P","^6","thi/ng/geom/core.cljc","^:",24,"^8",1,"^7",111,"^31",["^ ","^32",["^ ","^7O",[["~$_","^79"]]]],"^36",null,"^9",111,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"~$IDistance",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",6,"^8",14,"^9",6,"^:",23,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","^3A",[["~$_","~$a"]],"~$dist-squared",[["~$_","~$a"]]]]],"^2[",true,"^J","^7R","^6","thi/ng/geom/core.cljc","^:",23,"^8",1,"^7",6,"^31",["^ ","^32",["^ ","^3A",[["~$_","~$a"]],"^7W",[["~$_","~$a"]]]],"^36",null,"^9",6,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"^6J",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",189,"^8",4,"^9",189,"^:",15,"^2L","^5B","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$p"]]]]]],"^2L","^5B","^J","~$thi.ng.geom.core/unmap-point","^6","thi/ng/geom/core.cljc","^:",15,"^2R",["^V",[["~$_","~$p"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",187,"^2V","^2W","^9",189,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$p"]]]]],"^2N",null],"~$IReflect",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",39,"^8",14,"^9",39,"^:",22,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","^4U",[["~$_","~$r"]]]]],"^2[",true,"^J","^4V","^6","thi/ng/geom/core.cljc","^:",22,"^8",1,"^7",39,"^31",["^ ","^32",["^ ","^4U",[["~$_","~$r"]]]],"^36",null,"^9",39,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"~$extrude-shell",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",167,"^8",4,"^9",167,"^:",17,"^2L","^41","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","^42"]]]]]],"^2L","^41","^J","~$thi.ng.geom.core/extrude-shell","^6","thi/ng/geom/core.cljc","^:",17,"^2R",["^V",[["~$_","^42"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",165,"^2V","^2W","^9",167,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","^42"]]]]],"^2N",null],"~$slice-with",["^ ","^2K",null,"^5",["^ ","^2L","~$thi.ng.geom.core/ISlice","^6","thi/ng/geom/core.cljc","^:",14,"^4D",["^ ","^2U",false,"^4E",4,"^2X",4,"^2R",["^V",[["~$_","~$e"],["~$_","~$e","~$classifier"],["~$_","~$e","^82","~$parts"]]],"^2O",["^V",[["~$_","~$e"],["~$_","~$e","^82"],["~$_","~$e","^82","^83"]]],"^2T",["^V",[null,null,null]]],"^8",4,"^7",206,"^9",206,"^2O",["^V",["^2P",["^V",[["~$_","~$e"],["~$_","~$e","^82"],["~$_","~$e","^82","^83"]]]]],"^2N",null],"^2L","^81","^J","~$thi.ng.geom.core/slice-with","^6","thi/ng/geom/core.cljc","^:",14,"^4D",["^ ","^2U",false,"^4E",4,"^2X",4,"^2R",["^V",[["~$_","~$e"],["~$_","~$e","^82"],["~$_","~$e","^82","^83"]]],"^2O",["^V",[["~$_","~$e"],["~$_","~$e","^82"],["~$_","~$e","^82","^83"]]],"^2T",["^V",[null,null,null]]],"^2R",["^V",[["~$_","~$e"],["~$_","~$e","^82"],["~$_","~$e","^82","^83"]]],"^2S",null,"^4E",4,"^2T",["^V",[null,null,null]],"^8",1,"^2U",false,"^32",[["^ ","^4E",2,"^2U",false,"^37","^2W"],["^ ","^4E",3,"^2U",false,"^37","^2W"],["^ ","^4E",4,"^2U",false,"^37","^2W"]],"^7",205,"^9",206,"^2X",4,"^2Y",true,"^2O",["^V",[["~$_","~$e"],["~$_","~$e","^82"],["~$_","~$e","^82","^83"]]],"^2N",null],"~$IClear",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",155,"^8",14,"^9",155,"^:",20,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","~$clear*",[["~$_"]],"~$clear!",[["~$_"]]]]],"^2[",true,"^J","~$thi.ng.geom.core/IClear","^6","thi/ng/geom/core.cljc","^:",20,"^8",1,"^7",155,"^31",["^ ","^32",["^ ","^86",[["~$_"]],"^87",[["~$_"]]]],"^36",null,"^9",155,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"~$circumference",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",149,"^8",4,"^9",149,"^:",17,"^2L","~$thi.ng.geom.core/ICircumference","^2N","Returns an entity's circumference","^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^8:","^J","~$thi.ng.geom.core/circumference","^6","thi/ng/geom/core.cljc","^:",17,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",148,"^2V","^2W","^9",149,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N","Returns an entity's circumference"],"~$reduce-vector",["^ ","^2K",null,"^5",["^ ","^2L","~$thi.ng.geom.core/IVectorReduce","^6","thi/ng/geom/core.cljc","^:",17,"^4D",["^ ","^2U",false,"^4E",4,"^2X",4,"^2R",["^V",[["~$_","~$f","~$xs"],["~$_","~$f","~$f2","^8>"]]],"^2O",["^V",[["~$_","~$f","^8>"],["~$_","~$f","^8?","^8>"]]],"^2T",["^V",[null,null]]],"^8",4,"^7",28,"^9",28,"^2O",["^V",["^2P",["^V",[["~$_","~$f","^8>"],["~$_","~$f","^8?","^8>"]]]]],"^2N",null],"^2L","^8=","^J","~$thi.ng.geom.core/reduce-vector","^6","thi/ng/geom/core.cljc","^:",17,"^4D",["^ ","^2U",false,"^4E",4,"^2X",4,"^2R",["^V",[["~$_","~$f","^8>"],["~$_","~$f","^8?","^8>"]]],"^2O",["^V",[["~$_","~$f","^8>"],["~$_","~$f","^8?","^8>"]]],"^2T",["^V",[null,null]]],"^2R",["^V",[["~$_","~$f","^8>"],["~$_","~$f","^8?","^8>"]]],"^2S",null,"^4E",4,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^32",[["^ ","^4E",3,"^2U",false,"^37","^2W"],["^ ","^4E",4,"^2U",false,"^37","^2W"]],"^7",27,"^9",28,"^2X",4,"^2Y",true,"^2O",["^V",[["~$_","~$f","^8>"],["~$_","~$f","^8?","^8>"]]],"^2N",null],"~$IEdgeAccess",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",80,"^8",14,"^9",80,"^:",25,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","^4B",[["~$_"],["~$_","^42"]]]]],"^2[",true,"^J","^4C","^6","thi/ng/geom/core.cljc","^:",25,"^8",1,"^7",80,"^31",["^ ","^32",["^ ","^4B",[["~$_"],["~$_","^42"]]]],"^36",null,"^9",80,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"~$ICenter",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",142,"^8",14,"^9",142,"^:",21,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","~$center",[["~$_"],["~$_","~$p"]],"~$centroid",[["~$_"]]]]],"^2[",true,"^J","~$thi.ng.geom.core/ICenter","^6","thi/ng/geom/core.cljc","^:",21,"^8",1,"^7",142,"^31",["^ ","^32",["^ ","^8C",[["~$_"],["~$_","~$p"]],"^8D",[["~$_"]]]],"^36",null,"^9",142,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"^4?",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",24,"^8",4,"^9",24,"^:",12,"^2L","^4A","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^4A","^J","~$thi.ng.geom.core/as-polar","^6","thi/ng/geom/core.cljc","^:",12,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",23,"^2V","^2W","^9",24,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N",null],"~$IAlign",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",114,"^8",14,"^9",114,"^:",20,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","^74",[["~$_","~$x","^42"]]]]],"^2[",true,"^J","^75","^6","thi/ng/geom/core.cljc","^:",20,"^8",1,"^7",114,"^31",["^ ","^32",["^ ","^74",[["~$_","~$x","^42"]]]],"^36",null,"^9",114,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"~$IFlip",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",169,"^8",14,"^9",169,"^:",19,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","^6Y",[["~$_"]]]]],"^2[",true,"^J","^6Z","^6","thi/ng/geom/core.cljc","^:",19,"^8",1,"^7",169,"^31",["^ ","^32",["^ ","^6Y",[["~$_"]]]],"^36",null,"^9",169,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"^5I",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",139,"^8",4,"^9",139,"^:",9,"^2L","^4Y","^2N","Returns entity's extent along X axis","^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^4Y","^J","~$thi.ng.geom.core/width","^6","thi/ng/geom/core.cljc","^:",9,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",132,"^2V","^2W","^9",139,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N","Returns entity's extent along X axis"],"^7I",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",196,"^8",4,"^9",196,"^:",17,"^2L","^7J","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$p"]]]]]],"^2L","^7J","^J","~$thi.ng.geom.core/closest-point","^6","thi/ng/geom/core.cljc","^:",17,"^2R",["^V",[["~$_","~$p"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",195,"^2V","^2W","^9",196,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$p"]]]]],"^2N",null],"^6B",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",64,"^8",4,"^9",64,"^:",18,"^2L","^3L","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$v"]]]]]],"^2L","^3L","^J","~$thi.ng.geom.core/vertex-valence","^6","thi/ng/geom/core.cljc","^:",18,"^2R",["^V",[["~$_","~$v"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",61,"^2V","^2W","^9",64,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$v"]]]]],"^2N",null],"~$bounding-circle",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",127,"^8",4,"^9",127,"^:",19,"^2L","~$thi.ng.geom.core/IBoundingCircle","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^8M","^J","~$thi.ng.geom.core/bounding-circle","^6","thi/ng/geom/core.cljc","^:",19,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",126,"^2V","^2W","^9",127,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N",null],"~$IExtrude",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",165,"^8",14,"^9",165,"^:",22,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","^40",[["~$_","^42"]],"^7Z",[["~$_","^42"]]]]],"^2[",true,"^J","^41","^6","thi/ng/geom/core.cljc","^:",22,"^8",1,"^7",165,"^31",["^ ","^32",["^ ","^40",[["~$_","^42"]],"^7Z",[["~$_","^42"]]]],"^36",null,"^9",165,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"^3@",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",202,"^8",4,"^9",202,"^:",18,"^2L","^3E","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","^3A","^3B"]]]]]],"^2L","^3E","^J","~$thi.ng.geom.core/sample-uniform","^6","thi/ng/geom/core.cljc","^:",18,"^2R",["^V",[["~$_","^3A","^3B"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",198,"^2V","^2W","^9",202,"^2X",3,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","^3A","^3B"]]]]],"^2N",null],"^3>",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",200,"^8",4,"^9",200,"^:",16,"^2L","^3E","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^3E","^J","~$thi.ng.geom.core/random-point","^6","thi/ng/geom/core.cljc","^:",16,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",198,"^2V","^2W","^9",200,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N",null],"~$IVolume",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",216,"^8",14,"^9",216,"^:",21,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","~$volume",[["~$_"]],"~$signed-volume",[["~$_"]]]]],"^2[",true,"^J","~$thi.ng.geom.core/IVolume","^6","thi/ng/geom/core.cljc","^:",21,"^8",1,"^7",216,"^31",["^ ","^32",["^ ","^8S",[["~$_"]],"^8T",[["~$_"]]]],"^36",null,"^9",216,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"~$set-prop!",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",228,"^8",4,"^9",228,"^:",13,"^2L","^3T","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$k","~$v"]]]]]],"^2L","^3T","^J","~$thi.ng.geom.core/set-prop!","^6","thi/ng/geom/core.cljc","^:",13,"^2R",["^V",[["~$_","~$k","~$v"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",226,"^2V","^2W","^9",228,"^2X",3,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$k","~$v"]]]]],"^2N",null],"~$ICircumference",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",148,"^8",14,"^9",148,"^:",28,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","^89",[["~$_"]]]]],"^2[",true,"^J","^8:","^6","thi/ng/geom/core.cljc","^:",28,"^8",1,"^7",148,"^31",["^ ","^32",["^ ","^89",[["~$_"]]]],"^36",null,"^9",148,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"~$normal",["^ ","^2K",null,"^5",["^ ","^2L","~$thi.ng.geom.core/INormal","^6","thi/ng/geom/core.cljc","^:",10,"^4D",["^ ","^2U",false,"^4E",2,"^2X",2,"^2R",["^V",[["~$_"],["~$_","~$a"]]],"^2O",["^V",[["~$_"],["~$_","~$a"]]],"^2T",["^V",[null,null]]],"^8",4,"^7",21,"^9",21,"^2O",["^V",["^2P",["^V",[["~$_"],["~$_","~$a"]]]]],"^2N",null],"^2L","^8Z","^J","~$thi.ng.geom.core/normal","^6","thi/ng/geom/core.cljc","^:",10,"^4D",["^ ","^2U",false,"^4E",2,"^2X",2,"^2R",["^V",[["~$_"],["~$_","~$a"]]],"^2O",["^V",[["~$_"],["~$_","~$a"]]],"^2T",["^V",[null,null]]],"^2R",["^V",[["~$_"],["~$_","~$a"]]],"^2S",null,"^4E",2,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^32",[["^ ","^4E",1,"^2U",false,"^37","^2W"],["^ ","^4E",2,"^2U",false,"^37","^2W"]],"^7",20,"^9",21,"^2X",2,"^2Y",true,"^2O",["^V",[["~$_"],["~$_","~$a"]]],"^2N",null],"^87",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",157,"^8",4,"^9",157,"^:",10,"^2L","^88","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^88","^J","~$thi.ng.geom.core/clear!","^6","thi/ng/geom/core.cljc","^:",10,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",155,"^2V","^2W","^9",157,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N",null],"~$IFaceAccess",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",83,"^8",14,"^9",83,"^:",25,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","~$add-face",[["~$_","~$face"]],"~$faces",[["~$_"],["~$_","^42"]],"~$remove-face",[["~$_","~$fverts"]],"~$vertex-faces",[["~$_","~$v"]]]]],"^2[",true,"^J","~$thi.ng.geom.core/IFaceAccess","^6","thi/ng/geom/core.cljc","^:",25,"^8",1,"^7",83,"^31",["^ ","^32",["^ ","^92",[["~$_","^93"]],"^94",[["~$_"],["~$_","^42"]],"^95",[["~$_","^96"]],"^97",[["~$_","~$v"]]]],"^36",null,"^9",83,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"^97",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",97,"^8",4,"^9",97,"^:",16,"^2L","^98","^2N","Returns seq of faces the given vertex is part of.","^2O",["^V",["^2P",["^V",[["~$_","~$v"]]]]]],"^2L","^98","^J","~$thi.ng.geom.core/vertex-faces","^6","thi/ng/geom/core.cljc","^:",16,"^2R",["^V",[["~$_","~$v"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",83,"^2V","^2W","^9",97,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$v"]]]]],"^2N","Returns seq of faces the given vertex is part of."],"~$IVectorReduce",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",27,"^8",14,"^9",27,"^:",27,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","^8<",[["~$_","~$f","^8>"],["~$_","~$f","^8?","^8>"]]]]],"^2[",true,"^J","^8=","^6","thi/ng/geom/core.cljc","^:",27,"^8",1,"^7",27,"^31",["^ ","^32",["^ ","^8<",[["~$_","~$f","^8>"],["~$_","~$f","^8?","^8>"]]]],"^36",null,"^9",27,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"~$IMeshConvert",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",183,"^8",14,"^9",183,"^:",26,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","^55",[["~$_"],["~$_","^42"]]]]],"^2[",true,"^J","^56","^6","thi/ng/geom/core.cljc","^:",26,"^8",1,"^7",183,"^31",["^ ","^32",["^ ","^55",[["~$_"],["~$_","^42"]]]],"^36",null,"^9",183,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"^8T",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",218,"^8",4,"^9",218,"^:",17,"^2L","^8U","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^8U","^J","~$thi.ng.geom.core/signed-volume","^6","thi/ng/geom/core.cljc","^:",17,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",216,"^2V","^2W","^9",218,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N",null],"^6A",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",63,"^8",4,"^9",63,"^:",11,"^2L","^3L","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^3L","^J","~$thi.ng.geom.core/cyclic?","^6","thi/ng/geom/core.cljc","^:",11,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",61,"^2V","^2W","^9",63,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N",null],"^8S",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",217,"^8",4,"^9",217,"^:",10,"^2L","^8U","^2N","Returns an entity's inner volume.","^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^8U","^J","~$thi.ng.geom.core/volume","^6","thi/ng/geom/core.cljc","^:",10,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",216,"^2V","^2W","^9",217,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N","Returns an entity's inner volume."],"~$INormal",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",20,"^8",14,"^9",20,"^:",21,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","^8Y",[["~$_"],["~$_","~$a"]]]]],"^2[",true,"^J","^8Z","^6","thi/ng/geom/core.cljc","^:",21,"^8",1,"^7",20,"^31",["^ ","^32",["^ ","^8Y",[["~$_"],["~$_","~$a"]]]],"^36",null,"^9",20,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"^5G",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",133,"^8",4,"^9",133,"^:",10,"^2L","^4Y","^2N","Returns bounding rect for 2d entities or box for 3d","^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^4Y","^J","~$thi.ng.geom.core/bounds","^6","thi/ng/geom/core.cljc","^:",10,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",132,"^2V","^2W","^9",133,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N","Returns bounding rect for 2d entities or box for 3d"],"^8C",["^ ","^2K",null,"^5",["^ ","^2L","^8E","^6","thi/ng/geom/core.cljc","^:",10,"^4D",["^ ","^2U",false,"^4E",2,"^2X",2,"^2R",["^V",[["~$_"],["~$_","~$p"]]],"^2O",["^V",[["~$_"],["~$_","~$p"]]],"^2T",["^V",[null,null]]],"^8",4,"^7",143,"^9",143,"^2O",["^V",["^2P",["^V",[["~$_"],["~$_","~$p"]]]]],"^2N","Returns updated entity centered around world origin or given point"],"^2L","^8E","^J","~$thi.ng.geom.core/center","^6","thi/ng/geom/core.cljc","^:",10,"^4D",["^ ","^2U",false,"^4E",2,"^2X",2,"^2R",["^V",[["~$_"],["~$_","~$p"]]],"^2O",["^V",[["~$_"],["~$_","~$p"]]],"^2T",["^V",[null,null]]],"^2R",["^V",[["~$_"],["~$_","~$p"]]],"^2S",null,"^4E",2,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^32",[["^ ","^4E",1,"^2U",false,"^37","^2W"],["^ ","^4E",2,"^2U",false,"^37","^2W"]],"^7",142,"^9",143,"^2X",2,"^2Y",true,"^2O",["^V",[["~$_"],["~$_","~$p"]]],"^2N","Returns updated entity centered around world origin or given point"],"~$IGraphConvert",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",74,"^8",14,"^9",74,"^:",27,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","^65",[["~$_"],["~$_","^42"]]]]],"^2[",true,"^J","^66","^6","thi/ng/geom/core.cljc","^:",27,"^8",1,"^7",74,"^31",["^ ","^32",["^ ","^65",[["~$_"],["~$_","^42"]]]],"^36",null,"^9",74,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"^7E",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",15,"^8",4,"^9",15,"^:",17,"^2L","^5?","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$a"]]]]]],"^2L","^5?","^J","~$thi.ng.geom.core/angle-between","^6","thi/ng/geom/core.cljc","^:",17,"^2R",["^V",[["~$_","~$a"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",10,"^2V","^2W","^9",15,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$a"]]]]],"^2N",null],"^92",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",84,"^8",4,"^9",84,"^:",12,"^2L","^98","^2N","Adds a new face to a mesh. The face arg is a 2-element vector\n    of [vertices attributes], where attributes is a map of arbitrary\n    vertex attributes. E.g. (g/add-face m [verts {:uv [[0 0] [1 0] [1 1]]}])","^2O",["^V",["^2P",["^V",[["~$_","^93"]]]]]],"^2L","^98","^J","~$thi.ng.geom.core/add-face","^6","thi/ng/geom/core.cljc","^:",12,"^2R",["^V",[["~$_","^93"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",83,"^2V","^2W","^9",84,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","^93"]]]]],"^2N","Adds a new face to a mesh. The face arg is a 2-element vector\n    of [vertices attributes], where attributes is a map of arbitrary\n    vertex attributes. E.g. (g/add-face m [verts {:uv [[0 0] [1 0] [1 1]]}])"],"~$IMutableProps",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",226,"^8",14,"^9",226,"^:",27,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","^3S",[["~$_","~$k"]],"^8V",[["~$_","~$k","~$v"]],"^5R",[["~$_","~$k","~$f"]]]]],"^2[",true,"^J","^3T","^6","thi/ng/geom/core.cljc","^:",27,"^8",1,"^7",226,"^31",["^ ","^32",["^ ","^3S",[["~$_","~$k"]],"^8V",[["~$_","~$k","~$v"]],"^5R",[["~$_","~$k","~$f"]]]],"^36",null,"^9",226,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"^4R",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",223,"^8",4,"^9",223,"^:",13,"^2L","^4T","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^4T","^J","~$thi.ng.geom.core/get-point","^6","thi/ng/geom/core.cljc","^:",13,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",220,"^2V","^2W","^9",223,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N",null],"^6W",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",103,"^8",4,"^9",103,"^:",16,"^2L","^3W","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","^5<"]]]]]],"^2L","^3W","^J","~$thi.ng.geom.core/face-normals","^6","thi/ng/geom/core.cljc","^:",16,"^2R",["^V",[["~$_","^5<"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",100,"^2V","^2W","^9",103,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","^5<"]]]]],"^2N",null],"^5M",["^ ","^2K",null,"^5",["^ ","^2L","^5N","^6","thi/ng/geom/core.cljc","^:",14,"^4D",["^ ","^2U",false,"^4E",2,"^2X",2,"^2R",["^V",[["~$_"],["~$_","^3D"]]],"^2O",["^V",[["~$_"],["~$_","^3D"]]],"^2T",["^V",[null,null]]],"^8",4,"^7",192,"^9",192,"^2O",["^V",["^2P",["^V",[["~$_"],["~$_","^3D"]]]]],"^2N","Transforms current entity into a Polygon2 instance"],"^2L","^5N","^J","~$thi.ng.geom.core/as-polygon","^6","thi/ng/geom/core.cljc","^:",14,"^4D",["^ ","^2U",false,"^4E",2,"^2X",2,"^2R",["^V",[["~$_"],["~$_","^3D"]]],"^2O",["^V",[["~$_"],["~$_","^3D"]]],"^2T",["^V",[null,null]]],"^2R",["^V",[["~$_"],["~$_","^3D"]]],"^2S",null,"^4E",2,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^32",[["^ ","^4E",1,"^2U",false,"^37","^2W"],["^ ","^4E",2,"^2U",false,"^37","^2W"]],"^7",191,"^9",192,"^2X",2,"^2Y",true,"^2O",["^V",[["~$_"],["~$_","^3D"]]],"^2N","Transforms current entity into a Polygon2 instance"],"~$IIntersect",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",178,"^8",14,"^9",178,"^:",24,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","~$intersect-line",[["~$_","~$l"],["~$_","~$p","~$q"]],"~$intersect-ray",[["~$_","~$r"],["~$_","~$p","~$dir"]],"^4[",[["~$_","~$s"]]]]],"^2[",true,"^J","^50","^6","thi/ng/geom/core.cljc","^:",24,"^8",1,"^7",178,"^31",["^ ","^32",["^ ","^9J",[["~$_","~$l"],["~$_","~$p","~$q"]],"^9K",[["~$_","~$r"],["~$_","~$p","^9L"]],"^4[",[["~$_","~$s"]]]],"^36",null,"^9",178,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"^9J",["^ ","^2K",null,"^5",["^ ","^2L","^50","^6","thi/ng/geom/core.cljc","^:",18,"^4D",["^ ","^2U",false,"^4E",3,"^2X",3,"^2R",["^V",[["~$_","~$l"],["~$_","~$p","~$q"]]],"^2O",["^V",[["~$_","~$l"],["~$_","~$p","~$q"]]],"^2T",["^V",[null,null]]],"^8",4,"^7",179,"^9",179,"^2O",["^V",["^2P",["^V",[["~$_","~$l"],["~$_","~$p","~$q"]]]]],"^2N",null],"^2L","^50","^J","~$thi.ng.geom.core/intersect-line","^6","thi/ng/geom/core.cljc","^:",18,"^4D",["^ ","^2U",false,"^4E",3,"^2X",3,"^2R",["^V",[["~$_","~$l"],["~$_","~$p","~$q"]]],"^2O",["^V",[["~$_","~$l"],["~$_","~$p","~$q"]]],"^2T",["^V",[null,null]]],"^2R",["^V",[["~$_","~$l"],["~$_","~$p","~$q"]]],"^2S",null,"^4E",3,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^32",[["^ ","^4E",2,"^2U",false,"^37","^2W"],["^ ","^4E",3,"^2U",false,"^37","^2W"]],"^7",178,"^9",179,"^2X",3,"^2Y",true,"^2O",["^V",[["~$_","~$l"],["~$_","~$p","~$q"]]],"^2N",null],"^4Q",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",222,"^8",4,"^9",222,"^:",16,"^2L","^4T","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$p"]]]]]],"^2L","^4T","^J","~$thi.ng.geom.core/delete-point","^6","thi/ng/geom/core.cljc","^:",16,"^2R",["^V",[["~$_","~$p"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",220,"^2V","^2W","^9",222,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$p"]]]]],"^2N",null],"^4=",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",210,"^8",4,"^9",210,"^:",18,"^2L","^3O","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$a","~$b","^3Q"]]]]]],"^2L","^3O","^J","~$thi.ng.geom.core/subdivide-edge","^6","thi/ng/geom/core.cljc","^:",18,"^2R",["^V",[["~$_","~$a","~$b","^3Q"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",208,"^2V","^2W","^9",210,"^2X",4,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$a","~$b","^3Q"]]]]],"^2N",null],"^8D",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",145,"^8",4,"^9",145,"^:",12,"^2L","^8E","^2N","Returns centroid of entity","^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^8E","^J","~$thi.ng.geom.core/centroid","^6","thi/ng/geom/core.cljc","^:",12,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",142,"^2V","^2W","^9",145,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N","Returns centroid of entity"],"~$ITranslate",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",52,"^8",14,"^9",52,"^:",24,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","~$translate",[["~$_","~$t"]]]]],"^2[",true,"^J","~$thi.ng.geom.core/ITranslate","^6","thi/ng/geom/core.cljc","^:",24,"^8",1,"^7",52,"^31",["^ ","^32",["^ ","^9R",[["~$_","~$t"]]]],"^36",null,"^9",52,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"^78",["^ ","^2K",null,"^5",["^ ","^2L","^7;","^6","thi/ng/geom/core.cljc","^:",11,"^4D",["^ ","^2U",false,"^4E",3,"^2X",3,"^2R",["^V",[["~$_","^79"],["~$_","^79","^7:"]]],"^2O",["^V",[["~$_","^79"],["~$_","^79","^7:"]]],"^2T",["^V",[null,null]]],"^8",4,"^7",109,"^9",109,"^2O",["^V",["^2P",["^V",[["~$_","^79"],["~$_","^79","^7:"]]]]],"^2N",null],"^2L","^7;","^J","~$thi.ng.geom.core/attribs","^6","thi/ng/geom/core.cljc","^:",11,"^4D",["^ ","^2U",false,"^4E",3,"^2X",3,"^2R",["^V",[["~$_","^79"],["~$_","^79","^7:"]]],"^2O",["^V",[["~$_","^79"],["~$_","^79","^7:"]]],"^2T",["^V",[null,null]]],"^2R",["^V",[["~$_","^79"],["~$_","^79","^7:"]]],"^2S",null,"^4E",3,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^32",[["^ ","^4E",2,"^2U",false,"^37","^2W"],["^ ","^4E",3,"^2U",false,"^37","^2W"]],"^7",108,"^9",109,"^2X",3,"^2Y",true,"^2O",["^V",[["~$_","^79"],["~$_","^79","^7:"]]],"^2N",null],"^86",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",156,"^8",4,"^9",156,"^:",10,"^2L","^88","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^88","^J","~$thi.ng.geom.core/clear*","^6","thi/ng/geom/core.cljc","^:",10,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",155,"^2V","^2W","^9",156,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N",null],"~$IClip",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",159,"^8",14,"^9",159,"^:",19,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","^7<",[["~$_","~$s"]]]]],"^2[",true,"^J","^7=","^6","thi/ng/geom/core.cljc","^:",19,"^8",1,"^7",159,"^31",["^ ","^32",["^ ","^7<",[["~$_","~$s"]]]],"^36",null,"^9",159,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"^45",["^ ","^2K",null,"^5",["^ ","^2L","^46","^6","thi/ng/geom/core.cljc","^:",14,"^4D",["^ ","^2U",false,"^4E",2,"^2X",2,"^2R",["^V",[["~$_"],["~$_","^42"]]],"^2O",["^V",[["~$_"],["~$_","^42"]]],"^2T",["^V",[null,null]]],"^8",4,"^7",214,"^9",214,"^2O",["^V",["^2P",["^V",[["~$_"],["~$_","^42"]]]]],"^2N",null],"^2L","^46","^J","~$thi.ng.geom.core/tessellate","^6","thi/ng/geom/core.cljc","^:",14,"^4D",["^ ","^2U",false,"^4E",2,"^2X",2,"^2R",["^V",[["~$_"],["~$_","^42"]]],"^2O",["^V",[["~$_"],["~$_","^42"]]],"^2T",["^V",[null,null]]],"^2R",["^V",[["~$_"],["~$_","^42"]]],"^2S",null,"^4E",2,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^32",[["^ ","^4E",1,"^2U",false,"^37","^2W"],["^ ","^4E",2,"^2U",false,"^37","^2W"]],"^7",213,"^9",214,"^2X",2,"^2Y",true,"^2O",["^V",[["~$_"],["~$_","^42"]]],"^2N",null],"~$*resolution*",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",4,"^8",16,"^9",4,"^:",28,"~:dynamic",true],"^J","~$thi.ng.geom.core/*resolution*","^6","thi/ng/geom/core.cljc","^:",28,"^8",1,"^9Y",true,"^7",4,"^9",4,"^37","~$number"],"~$IMatrixConvert",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",58,"^8",14,"^9",58,"^:",28,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","^58",[["~$_"],["~$_","^42"]]]]],"^2[",true,"^J","^59","^6","thi/ng/geom/core.cljc","^:",28,"^8",1,"^7",58,"^31",["^ ","^32",["^ ","^58",[["~$_"],["~$_","^42"]]]],"^36",null,"^9",58,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"^7W",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",8,"^8",4,"^9",8,"^:",16,"^2L","^7R","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$a"]]]]]],"^2L","^7R","^J","~$thi.ng.geom.core/dist-squared","^6","thi/ng/geom/core.cljc","^:",16,"^2R",["^V",[["~$_","~$a"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",6,"^2V","^2W","^9",8,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$a"]]]]],"^2N",null],"^53",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",130,"^8",4,"^9",130,"^:",19,"^2L","^54","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^54","^J","~$thi.ng.geom.core/bounding-sphere","^6","thi/ng/geom/core.cljc","^:",19,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",129,"^2V","^2W","^9",130,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N",null],"^4<",["^ ","^2K",null,"^5",["^ ","^2L","^3O","^6","thi/ng/geom/core.cljc","^:",13,"^4D",["^ ","^2U",false,"^4E",2,"^2X",2,"^2R",["^V",[["~$_"],["~$_","^42"]]],"^2O",["^V",[["~$_"],["~$_","^42"]]],"^2T",["^V",[null,null]]],"^8",4,"^7",209,"^9",209,"^2O",["^V",["^2P",["^V",[["~$_"],["~$_","^42"]]]]],"^2N",null],"^2L","^3O","^J","~$thi.ng.geom.core/subdivide","^6","thi/ng/geom/core.cljc","^:",13,"^4D",["^ ","^2U",false,"^4E",2,"^2X",2,"^2R",["^V",[["~$_"],["~$_","^42"]]],"^2O",["^V",[["~$_"],["~$_","^42"]]],"^2T",["^V",[null,null]]],"^2R",["^V",[["~$_"],["~$_","^42"]]],"^2S",null,"^4E",2,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^32",[["^ ","^4E",1,"^2U",false,"^37","^2W"],["^ ","^4E",2,"^2U",false,"^37","^2W"]],"^7",208,"^9",209,"^2X",2,"^2Y",true,"^2O",["^V",[["~$_"],["~$_","^42"]]],"^2N",null],"~$IBoundingCircle",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",126,"^8",14,"^9",126,"^:",29,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","^8L",[["~$_"]]]]],"^2[",true,"^J","^8M","^6","thi/ng/geom/core.cljc","^:",29,"^8",1,"^7",126,"^31",["^ ","^32",["^ ","^8L",[["~$_"]]]],"^36",null,"^9",126,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"^4H",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",71,"^8",4,"^9",71,"^:",15,"^2L","^4J","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$v"]]]]]],"^2L","^4J","^J","~$thi.ng.geom.core/in-vertices","^6","thi/ng/geom/core.cljc","^:",15,"^2R",["^V",[["~$_","~$v"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",70,"^2V","^2W","^9",71,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$v"]]]]],"^2N",null],"^3C",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",203,"^8",4,"^9",203,"^:",26,"^2L","^3E","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","^3D"]]]]]],"^2L","^3E","^J","~$thi.ng.geom.core/sample-with-resolution","^6","thi/ng/geom/core.cljc","^:",26,"^2R",["^V",[["~$_","^3D"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",198,"^2V","^2W","^9",203,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","^3D"]]]]],"^2N",null],"^9K",["^ ","^2K",null,"^5",["^ ","^2L","^50","^6","thi/ng/geom/core.cljc","^:",17,"^4D",["^ ","^2U",false,"^4E",3,"^2X",3,"^2R",["^V",[["~$_","~$r"],["~$_","~$p","^9L"]]],"^2O",["^V",[["~$_","~$r"],["~$_","~$p","^9L"]]],"^2T",["^V",[null,null]]],"^8",4,"^7",180,"^9",180,"^2O",["^V",["^2P",["^V",[["~$_","~$r"],["~$_","~$p","^9L"]]]]],"^2N",null],"^2L","^50","^J","~$thi.ng.geom.core/intersect-ray","^6","thi/ng/geom/core.cljc","^:",17,"^4D",["^ ","^2U",false,"^4E",3,"^2X",3,"^2R",["^V",[["~$_","~$r"],["~$_","~$p","^9L"]]],"^2O",["^V",[["~$_","~$r"],["~$_","~$p","^9L"]]],"^2T",["^V",[null,null]]],"^2R",["^V",[["~$_","~$r"],["~$_","~$p","^9L"]]],"^2S",null,"^4E",3,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^32",[["^ ","^4E",2,"^2U",false,"^37","^2W"],["^ ","^4E",3,"^2U",false,"^37","^2W"]],"^7",178,"^9",180,"^2X",3,"^2Y",true,"^2O",["^V",[["~$_","~$r"],["~$_","~$p","^9L"]]],"^2N",null],"~$IClassify",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",152,"^8",14,"^9",152,"^:",23,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","^6<",[["~$_","~$p"]]]]],"^2[",true,"^J","^6=","^6","thi/ng/geom/core.cljc","^:",23,"^8",1,"^7",152,"^31",["^ ","^32",["^ ","^6<",[["~$_","~$p"]]]],"^36",null,"^9",152,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"^3:",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",31,"^8",4,"^9",31,"^:",10,"^2L","^3;","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$t"]]]]]],"^2L","^3;","^J","~$thi.ng.geom.core/rotate","^6","thi/ng/geom/core.cljc","^:",10,"^2R",["^V",[["~$_","~$t"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",30,"^2V","^2W","^9",31,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$t"]]]]],"^2N",null],"^9R",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",53,"^8",4,"^9",53,"^:",13,"^2L","^9S","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_","~$t"]]]]]],"^2L","^9S","^J","~$thi.ng.geom.core/translate","^6","thi/ng/geom/core.cljc","^:",13,"^2R",["^V",[["~$_","~$t"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",52,"^2V","^2W","^9",53,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","~$t"]]]]],"^2N",null],"^7D",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",14,"^8",4,"^9",14,"^:",14,"^2L","^5?","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^5?","^J","~$thi.ng.geom.core/heading-yz","^6","thi/ng/geom/core.cljc","^:",14,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",10,"^2V","^2W","^9",14,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N",null],"^5H",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",135,"^8",4,"^9",135,"^:",9,"^2L","^4Y","^2N","Returns entity's extent along Z (zero for 2d)","^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^4Y","^J","~$thi.ng.geom.core/depth","^6","thi/ng/geom/core.cljc","^:",9,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",132,"^2V","^2W","^9",135,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N","Returns entity's extent along Z (zero for 2d)"],"^6E",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",119,"^8",4,"^9",119,"^:",8,"^2L","^6F","^2N","Returns an entity's total surface area","^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^6F","^J","~$thi.ng.geom.core/area","^6","thi/ng/geom/core.cljc","^:",8,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",118,"^2V","^2W","^9",119,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N","Returns an entity's total surface area"],"^7F",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",18,"^8",4,"^9",18,"^:",12,"^2L","^5?","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^5?","^J","~$thi.ng.geom.core/slope-yz","^6","thi/ng/geom/core.cljc","^:",12,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",10,"^2V","^2W","^9",18,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N",null],"^95",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",94,"^8",4,"^9",94,"^:",15,"^2L","^98","^2N","Takes a vector of vertices defining a face in the mesh and\n    returns updated mesh without that face.","^2O",["^V",["^2P",["^V",[["~$_","^96"]]]]]],"^2L","^98","^J","~$thi.ng.geom.core/remove-face","^6","thi/ng/geom/core.cljc","^:",15,"^2R",["^V",[["~$_","^96"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",83,"^2V","^2W","^9",94,"^2X",2,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_","^96"]]]]],"^2N","Takes a vector of vertices defining a face in the mesh and\n    returns updated mesh without that face."],"^94",["^ ","^2K",null,"^5",["^ ","^2L","^98","^6","thi/ng/geom/core.cljc","^:",9,"^4D",["^ ","^2U",false,"^4E",2,"^2X",2,"^2R",["^V",[["~$_"],["~$_","^42"]]],"^2O",["^V",[["~$_"],["~$_","^42"]]],"^2T",["^V",[null,null]]],"^8",4,"^7",88,"^9",88,"^2O",["^V",["^2P",["^V",[["~$_"],["~$_","^42"]]]]],"^2N","Returns a mesh's face collection. If called without opts arg,\n    returns faces directly as used internally by the mesh. If opts is\n    truthy, returns each face as vector with a vector of face vertices\n    as its first element. If the mesh supports vertex attributes,\n    they're returned as the 2nd element in each face vector."],"^2L","^98","^J","~$thi.ng.geom.core/faces","^6","thi/ng/geom/core.cljc","^:",9,"^4D",["^ ","^2U",false,"^4E",2,"^2X",2,"^2R",["^V",[["~$_"],["~$_","^42"]]],"^2O",["^V",[["~$_"],["~$_","^42"]]],"^2T",["^V",[null,null]]],"^2R",["^V",[["~$_"],["~$_","^42"]]],"^2S",null,"^4E",2,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^32",[["^ ","^4E",1,"^2U",false,"^37","^2W"],["^ ","^4E",2,"^2U",false,"^37","^2W"]],"^7",83,"^9",88,"^2X",2,"^2Y",true,"^2O",["^V",[["~$_"],["~$_","^42"]]],"^2N","Returns a mesh's face collection. If called without opts arg,\n    returns faces directly as used internally by the mesh. If opts is\n    truthy, returns each face as vector with a vector of face vertices\n    as its first element. If the mesh supports vertex attributes,\n    they're returned as the 2nd element in each face vector."],"~$ISlice",["^ ","^5",["^ ","^6","thi/ng/geom/core.cljc","^7",205,"^8",14,"^9",205,"^:",20,"^2[",true,"^30",["^V",["@interface"]],"^31",["^ ","^32",["^ ","^80",[["~$_","~$e"],["~$_","~$e","^82"],["~$_","~$e","^82","^83"]]]]],"^2[",true,"^J","^81","^6","thi/ng/geom/core.cljc","^:",20,"^8",1,"^7",205,"^31",["^ ","^32",["^ ","^80",[["~$_","~$e"],["~$_","~$e","^82"],["~$_","~$e","^82","^83"]]]],"^36",null,"^9",205,"^37","^2W","^38",["^H",[]],"^30",["^V",["@interface"]]],"^6V",["^ ","^2K",null,"^5",["^ ","^6","thi/ng/geom/core.cljc","^7",102,"^8",4,"^9",102,"^:",26,"^2L","^3W","^2N",null,"^2O",["^V",["^2P",["^V",[["~$_"]]]]]],"^2L","^3W","^J","~$thi.ng.geom.core/compute-vertex-normals","^6","thi/ng/geom/core.cljc","^:",26,"^2R",["^V",[["~$_"]]],"^2S",null,"^2T",["^V",[null,null]],"^8",1,"^2U",false,"^7",100,"^2V","^2W","^9",102,"^2X",1,"^2Y",true,"^2O",["^V",["^2P",["^V",[["~$_"]]]]],"^2N",null]],"^T",["^ ","^P","^P"],"^Z",["^ "],"^[",["^ "],"^10",["^Q","^P"]],"^M","^K","~:ns-specs",["^ "],"~:ns-spec-vars",[],"~:compiler-options",["^1>",[["^:E","~:static-fns"],true,["^:E","~:elide-asserts"],false,["^:E","~:optimize-constants"],null,["^:E","^15"],null,["^:E","~:external-config"],null,["^:E","~:tooling-config"],null,["^:E","~:emit-constants"],null,["^:E","~:load-tests"],null,["^:E","~:form-size-threshold"],null,["^:E","~:infer-externs"],true,["^:E","^17"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^:E","~:fn-invoke-direct"],null,["^:E","~:source-map"],"/dev/null"]]]