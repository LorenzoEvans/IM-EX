["^ ","~:output",["^ ","~:js","goog.provide('thi.ng.geom.attribs');\ngoog.require('cljs.core');\ngoog.require('thi.ng.geom.core');\ngoog.require('thi.ng.geom.utils');\ngoog.require('thi.ng.geom.vector');\ngoog.require('thi.ng.geom.matrix');\ngoog.require('thi.ng.math.core');\n/**\n * Vertex attribute generator using given seq of attribs. The seq\n *   should contain at least the same number of elements as there are\n *   faces to be generated. Each item itself is a vector of attrib\n *   values (in vertex order) to be assigned to each vertex. Returns\n *   generator fn.\n */\nthi.ng.geom.attribs.face_attribs = (function thi$ng$geom$attribs$face_attribs(fattribs){\nreturn (function (fid,vid,_,___$1){\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(fattribs,fid),vid);\n});\n});\n/**\n * Similar to face-attribs fn, but for attributes which are constant\n *   for all vertices of a single face. Takes a seq of attrib values and\n *   returns generator fn.\n */\nthi.ng.geom.attribs.const_face_attribs = (function thi$ng$geom$attribs$const_face_attribs(fattribs){\nreturn (function (fid,_,___$1,___$2){\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(fattribs,fid);\n});\n});\n/**\n * Takes a vector of face vertices, face id, a map of vertex attribute\n *   generator fns and an options arg passed to the attribute generator\n *   fns. Returns 2-elem vector of [verts vert-attribs]. The generator\n *   fns themselves take these 4 args and should return the attribute for\n *   a single vertex: face-id, vertex-id, vertex, opts (a map).\n */\nthi.ng.geom.attribs.generate_face_attribs = (function thi$ng$geom$attribs$generate_face_attribs(verts,face_id,attribs,opts){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [verts,((cljs.core.seq(attribs))?cljs.core.reduce_kv((function (acc,k,f){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(acc,k,cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2((function (p1__45420_SHARP_,p2__45421_SHARP_){\nreturn (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(face_id,p1__45420_SHARP_,p2__45421_SHARP_,opts) : f.call(null,face_id,p1__45420_SHARP_,p2__45421_SHARP_,opts));\n}),verts));\n}),cljs.core.PersistentArrayMap.EMPTY,attribs):null)], null);\n});\n/**\n * Higher order helper, returns attribute generator fn for types which\n *   emit pre-computed values as part of their `as-mesh` impl. Takes\n *   attrib key and for each vertex looks up value in opts map (which is\n *   supplied by supporting types, e.g. sphere). If called via 2 args,\n *   the looked up values will also be passed to transformation fn (2nd\n *   arg).\n */\nthi.ng.geom.attribs.supplied_attrib = (function thi$ng$geom$attribs$supplied_attrib(var_args){\nvar G__45429 = arguments.length;\nswitch (G__45429) {\ncase 1:\nreturn thi.ng.geom.attribs.supplied_attrib.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn thi.ng.geom.attribs.supplied_attrib.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.attribs.supplied_attrib.cljs$core$IFn$_invoke$arity$1 = (function (attrib){\nreturn (function (_,id,___$1,opts){\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,attrib),id);\n});\n});\n\nthi.ng.geom.attribs.supplied_attrib.cljs$core$IFn$_invoke$arity$2 = (function (attrib,tx){\nreturn (function (_,id,___$1,opts){\nvar G__45430 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,attrib),id);\nreturn (tx.cljs$core$IFn$_invoke$arity$1 ? tx.cljs$core$IFn$_invoke$arity$1(G__45430) : tx.call(null,G__45430));\n});\n});\n\nthi.ng.geom.attribs.supplied_attrib.cljs$lang$maxFixedArity = 2;\n\nthi.ng.geom.attribs.uv_rect_for_size = (function thi$ng$geom$attribs$uv_rect_for_size(var_args){\nvar G__45435 = arguments.length;\nswitch (G__45435) {\ncase 1:\nreturn thi.ng.geom.attribs.uv_rect_for_size.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn thi.ng.geom.attribs.uv_rect_for_size.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 6:\nreturn thi.ng.geom.attribs.uv_rect_for_size.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.attribs.uv_rect_for_size.cljs$core$IFn$_invoke$arity$1 = (function (w){\nreturn thi.ng.geom.attribs.uv_rect_for_size.cljs$core$IFn$_invoke$arity$2(w,w);\n});\n\nthi.ng.geom.attribs.uv_rect_for_size.cljs$core$IFn$_invoke$arity$2 = (function (w,h){\nreturn thi.ng.geom.attribs.uv_rect_for_size.cljs$core$IFn$_invoke$arity$6(w,w,0.0,0.0,1.0,1.0);\n});\n\nthi.ng.geom.attribs.uv_rect_for_size.cljs$core$IFn$_invoke$arity$6 = (function (w,h,x,y,uw,vh){\nvar u = (0.5 * (uw / w));\nvar v = (0.5 * (vh / h));\nvar iu = (uw - u);\nvar iv = (vh - v);\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (u,v,iu,iv){\nreturn (function (p1__45431_SHARP_){\nreturn thi.ng.math.core._PLUS_.cljs$core$IFn$_invoke$arity$3(p1__45431_SHARP_,x,y);\n});})(u,v,iu,iv))\n,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [thi.ng.geom.vector.vec2.cljs$core$IFn$_invoke$arity$2(u,v),thi.ng.geom.vector.vec2.cljs$core$IFn$_invoke$arity$2(iu,v),thi.ng.geom.vector.vec2.cljs$core$IFn$_invoke$arity$2(iu,iv),thi.ng.geom.vector.vec2.cljs$core$IFn$_invoke$arity$2(u,iv)], null));\n});\n\nthi.ng.geom.attribs.uv_rect_for_size.cljs$lang$maxFixedArity = 6;\n\nthi.ng.geom.attribs.uv_cube_map_h = (function thi$ng$geom$attribs$uv_cube_map_h(var_args){\nvar G__45456 = arguments.length;\nswitch (G__45456) {\ncase 1:\nreturn thi.ng.geom.attribs.uv_cube_map_h.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn thi.ng.geom.attribs.uv_cube_map_h.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.attribs.uv_cube_map_h.cljs$core$IFn$_invoke$arity$1 = (function (h){\nreturn thi.ng.geom.attribs.uv_cube_map_h.cljs$core$IFn$_invoke$arity$2(h,false);\n});\n\nthi.ng.geom.attribs.uv_cube_map_h.cljs$core$IFn$_invoke$arity$2 = (function (h,pow2_QMARK_){\nvar w = (h * (6));\nvar tw = (cljs.core.truth_(pow2_QMARK_)?thi.ng.math.core.ceil_pow2(w):w);\nvar fw = ((w / tw) / 6.0);\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (w,tw,fw){\nreturn (function (p1__45442_SHARP_){\nreturn thi.ng.geom.attribs.uv_rect_for_size.cljs$core$IFn$_invoke$arity$6(h,h,(p1__45442_SHARP_ * fw),0.0,fw,1.0);\n});})(w,tw,fw))\n,cljs.core.range.cljs$core$IFn$_invoke$arity$1((6)));\n});\n\nthi.ng.geom.attribs.uv_cube_map_h.cljs$lang$maxFixedArity = 2;\n\nthi.ng.geom.attribs.uv_cube_map_v = (function thi$ng$geom$attribs$uv_cube_map_v(var_args){\nvar G__45473 = arguments.length;\nswitch (G__45473) {\ncase 1:\nreturn thi.ng.geom.attribs.uv_cube_map_v.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn thi.ng.geom.attribs.uv_cube_map_v.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.attribs.uv_cube_map_v.cljs$core$IFn$_invoke$arity$1 = (function (h){\nreturn thi.ng.geom.attribs.uv_cube_map_v.cljs$core$IFn$_invoke$arity$2(h,false);\n});\n\nthi.ng.geom.attribs.uv_cube_map_v.cljs$core$IFn$_invoke$arity$2 = (function (w,pow2_QMARK_){\nvar h = (w * (6));\nvar th = (cljs.core.truth_(pow2_QMARK_)?thi.ng.math.core.ceil_pow2(h):h);\nvar fh = ((h / th) / 6.0);\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(((function (h,th,fh){\nreturn (function (p1__45461_SHARP_){\nreturn thi.ng.geom.attribs.uv_rect_for_size.cljs$core$IFn$_invoke$arity$6(w,w,0.0,(p1__45461_SHARP_ * fh),1.0,fh);\n});})(h,th,fh))\n,cljs.core.range.cljs$core$IFn$_invoke$arity$1((6)));\n});\n\nthi.ng.geom.attribs.uv_cube_map_v.cljs$lang$maxFixedArity = 2;\n\nthi.ng.geom.attribs.uv_default_rect = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [thi.ng.geom.vector.vec2.cljs$core$IFn$_invoke$arity$0(),thi.ng.geom.vector.vec2.cljs$core$IFn$_invoke$arity$2(1.0,0.0),thi.ng.geom.vector.vec2.cljs$core$IFn$_invoke$arity$1(1.0),thi.ng.geom.vector.vec2.cljs$core$IFn$_invoke$arity$2(0.0,1.0)], null);\nthi.ng.geom.attribs.uv_faces = thi.ng.geom.attribs.face_attribs(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(thi.ng.geom.attribs.uv_default_rect));\n/**\n * Generates tubular UV coordinates, using data provided in\n *   options map (:u :v :du :dv keys)\n */\nthi.ng.geom.attribs.uv_tube = (function thi$ng$geom$attribs$uv_tube(_,vid,___$1,p__45482){\nvar map__45483 = p__45482;\nvar map__45483__$1 = (((((!((map__45483 == null))))?(((((map__45483.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__45483.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__45483):map__45483);\nvar u = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45483__$1,new cljs.core.Keyword(null,\"u\",\"u\",-1156634785));\nvar v = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45483__$1,new cljs.core.Keyword(null,\"v\",\"v\",21465059));\nvar du = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45483__$1,new cljs.core.Keyword(null,\"du\",\"du\",1000321745));\nvar dv = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45483__$1,new cljs.core.Keyword(null,\"dv\",\"dv\",781315158));\nvar G__45485 = (vid | (0));\nswitch (G__45485) {\ncase (0):\nreturn thi.ng.geom.vector.vec2.cljs$core$IFn$_invoke$arity$2(u,v);\n\nbreak;\ncase (1):\nreturn thi.ng.geom.vector.vec2.cljs$core$IFn$_invoke$arity$2((u + du),v);\n\nbreak;\ncase (2):\nreturn thi.ng.geom.vector.vec2.cljs$core$IFn$_invoke$arity$2((u + du),(v + dv));\n\nbreak;\ndefault:\nreturn thi.ng.geom.vector.vec2.cljs$core$IFn$_invoke$arity$2(u,(v + dv));\n\n}\n});\n/**\n * Generates UV coordinates for a circle/trianglefan, using data\n *   provided in options map (:theta & :r keys). The first vertex of each\n *   triangle is assumed to be in the center of the circle, the other 2\n *   vertices are located at the circles perimeter.\n */\nthi.ng.geom.attribs.uv_flat_disc = (function thi$ng$geom$attribs$uv_flat_disc(_,vid,___$1,p__45488){\nvar map__45489 = p__45488;\nvar map__45489__$1 = (((((!((map__45489 == null))))?(((((map__45489.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__45489.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__45489):map__45489);\nvar opts = map__45489__$1;\nvar theta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45489__$1,new cljs.core.Keyword(null,\"theta\",\"theta\",-427510258));\nvar r = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__45489__$1,new cljs.core.Keyword(null,\"r\",\"r\",-471384190));\nvar G__45497 = (vid | (0));\nswitch (G__45497) {\ncase (0):\nreturn thi.ng.geom.vector.vec2.cljs$core$IFn$_invoke$arity$1(0.5);\n\nbreak;\ncase (1):\nreturn thi.ng.geom.vector.vec2.cljs$core$IFn$_invoke$arity$2(((Math.cos(theta) * r) + 0.5),((Math.sin(theta) * r) + 0.5));\n\nbreak;\ndefault:\nvar theta__$1 = (theta + cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,\"delta\",\"delta\",108939957)));\nreturn thi.ng.geom.vector.vec2.cljs$core$IFn$_invoke$arity$2(((Math.cos(theta__$1) * r) + 0.5),((Math.sin(theta__$1) * r) + 0.5));\n\n}\n});\n/**\n * HOF UV generator for polygons/polyhedras. Takes polygon resolution\n *   and computes N UV coords, returns generator fn\n */\nthi.ng.geom.attribs.uv_polygon_disc = (function thi$ng$geom$attribs$uv_polygon_disc(res){\nreturn thi.ng.geom.attribs.face_attribs(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__45498_SHARP_){\nreturn thi.ng.math.core._PLUS_.cljs$core$IFn$_invoke$arity$2(thi.ng.geom.vector.vec2.cljs$core$IFn$_invoke$arity$2(0.5,(p1__45498_SHARP_ * thi.ng.math.core.TWO_PI)).thi$ng$geom$core$IPolar$as_cartesian$arity$1(null),0.5);\n}),thi.ng.math.core.norm_range(res))));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","thi/ng/geom/attribs.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",24],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$thi.ng.geom.attribs","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$thi.ng.geom.matrix","^O","~$thi.ng.geom.utils","^P","~$thi.ng.geom.core","^Q","~$gu","^P","~$cljs.core","^S","~$v","~$thi.ng.geom.vector","~$goog","^U","~$thi.ng.math.core","^V","~$m","^V","^T","^T","~$g","^Q"],"~:seen",["^H",["~:require","~:require-macros"]],"~:uses",["^ ","~$vec2","^T","~$vec3","^T","~$M44","^O"],"^Y",["^ ","~$thi.ng.math.macros","^12","~$mm","^12","^S","^S"],"~:form",["~#list",["~$ns","^J",["^15",["^Y",["^12","~:as","^13"]]],["^15",["^X",["^Q","^17","~$g"],["^P","^17","^R"],["^T","^17","~$v","~:refer",["^[","^10"]],["^O","^18",["^11"]],["^V","^17","~$m"]]]]],"~:flags",["^ ","^Y",["^H",[]],"^X",["^H",[]]],"~:js-deps",["^ "],"~:deps",["^U","^S","^Q","^P","^T","^O","^V"]],"^L","^J","~:resource-id",["~:shadow.build.classpath/resource","thi/ng/geom/attribs.cljc"],"~:compiled-at",1569963470052,"~:resource-name","thi/ng/geom/attribs.cljc","~:warnings",[],"~:source","(ns thi.ng.geom.attribs\n  #?(:cljs (:require-macros [thi.ng.math.macros :as mm]))\n  (:require\n   [thi.ng.geom.core :as g]\n   [thi.ng.geom.utils :as gu]\n   [thi.ng.geom.vector :as v :refer [vec2 vec3]]\n   [thi.ng.geom.matrix :refer [M44]]\n   [thi.ng.math.core :as m]\n   #?(:clj [thi.ng.math.macros :as mm])))\n\n;; This namespace provides vertex attribute generators and utilities used\n;; by various other geom namespaces to simplify the creation of\n;; attributed meshes.\n;;\n;; This project uses a functional approach for vertex attribute\n;; generation and relies on attribute generator fns accepting these 4\n;; arguments, in order:\n;;\n;; | *Arg*       | *Type*    | *Description*                                            |\n;; |-------------+-----------+----------------------------------------------------------|\n;; | `face-id`   | int       | ID of face currently being generated                     |\n;; | `vertex-id` | int       | ID of vertex in current face (usually 0-3 or 0-4)        |\n;; | `vertex`    | vec2/vec3 | the actual vertex                                        |\n;; | `opts`      | map       | extra data supplied by type to help w/ attrib generation |\n;;\n;; ** Types supporting attribute generation\n;;\n;; Eventually, all shape types provided will support vertex attribute\n;; generation as part of their `g/as-mesh` implementations. At current,\n;; this is only supported by the following implementations, though. Since\n;; UV texture coordinates are one of the most common applications of\n;; vertex attributes, the table also lists which attribute generator\n;; should/could be used for each type.\n;;\n;; *Note:* Vertex attributes are only supported by the following mesh types:\n;;\n;; - `thi.ng.geom.IndexedMesh`\n;; - `thi.ng.geom.gl.GLMesh`\n;; - `thi.ng.geom.gl.IndexedGLMesh`\n;;\n;; | *Type*          | *UV generation examples*                                              |\n;; |-----------------+-----------------------------------------------------------------------|\n;; | AABB            | `(g/as-mesh a {:mesh ... :attribs {:uv (attr/uv-cube-map-v)}})`       |\n;; | Circle          | `(g/as-mesh a {:mesh ... :attribs {:uv attr/uv-flat-disc}})`          |\n;; | Cuboid          | `(g/as-mesh a {:mesh ... :attribs {:uv (attr/uv-cube-map-v)}})`       |\n;; | Polygon2        | `(g/as-mesh a {:mesh ... :attribs {:uv (attr/supplied-attrib :uv)}})` |\n;; | Polyhedron mesh | `(polyhedron-mesh f {:mesh ... :attribs {:uv ...}})`                  |\n;; | PTF             | `(g/as-mesh a {:mesh ... :attribs {:uv attr/uv-tube}})`               |\n;; | Rect2           | `(g/as-mesh a {:mesh ... :attribs {:uv (attr/supplied-attrib :uv)}})` |\n;; | Sphere          | `(g/as-mesh a {:mesh ... :attribs {:uv (attr/supplied-attrib :uv)}})` |\n;;\n;; ** Attribute generation & application\n\n(defn face-attribs\n  \"Vertex attribute generator using given seq of attribs. The seq\n  should contain at least the same number of elements as there are\n  faces to be generated. Each item itself is a vector of attrib\n  values (in vertex order) to be assigned to each vertex. Returns\n  generator fn.\"\n  [fattribs] (fn [fid vid _ _] (-> fattribs (nth fid) (nth vid))))\n\n(defn const-face-attribs\n  \"Similar to face-attribs fn, but for attributes which are constant\n  for all vertices of a single face. Takes a seq of attrib values and\n  returns generator fn.\"\n  [fattribs] (fn [fid _ _ _] (nth fattribs fid)))\n\n(defn generate-face-attribs\n  \"Takes a vector of face vertices, face id, a map of vertex attribute\n  generator fns and an options arg passed to the attribute generator\n  fns. Returns 2-elem vector of [verts vert-attribs]. The generator\n  fns themselves take these 4 args and should return the attribute for\n  a single vertex: face-id, vertex-id, vertex, opts (a map).\"\n  [verts face-id attribs opts]\n  [verts\n   (when (seq attribs)\n     (reduce-kv\n      (fn [acc k f] (assoc acc k (map-indexed #(f face-id % %2 opts) verts)))\n      {} attribs))])\n\n;; ** Attribute generation\n;; *** Generic\n;;\n;; Several types provide useful additional data to attribute generator\n;; functions, which sometimes even is directly usable as attribute\n;; values. E.g. the sphere type's =as-mesh= implementation internally\n;; requires UV coordinates, which then are also supplied to attribute\n;; generators and can directly be harnessed for the actual vertex\n;; attributes.\n;;\n;; In general, if available, this kind of additional data is provided via\n;; a map as the 4th argument to an attribute generator fn. The following\n;; generic helper function can be used to select such a pre-computed\n;; attribute value (and optionally transform it).\n\n(defn supplied-attrib\n  \"Higher order helper, returns attribute generator fn for types which\n  emit pre-computed values as part of their `as-mesh` impl. Takes\n  attrib key and for each vertex looks up value in opts map (which is\n  supplied by supporting types, e.g. sphere). If called via 2 args,\n  the looked up values will also be passed to transformation fn (2nd\n  arg).\"\n  ([attrib] (fn [_ id _ opts] (-> opts (get attrib) (nth id))))\n  ([attrib tx] (fn [_ id _ opts] (-> opts (get attrib) (nth id) tx))))\n\n;; *** UV texture coordinates\n;; **** Cube\n\n(defn uv-rect-for-size\n  ([w] (uv-rect-for-size w w))\n  ([w h] (uv-rect-for-size w w 0.0 0.0 1.0 1.0))\n  ([w h x y uw vh]\n   (let [u  (* 0.5 (/ uw w))\n         v  (* 0.5 (/ vh h))\n         iu (- uw u)\n         iv (- vh v)]\n     (mapv #(m/+ % x y) [(vec2 u v) (vec2 iu v) (vec2 iu iv) (vec2 u iv)]))))\n\n(defn uv-cube-map-h\n  ([h] (uv-cube-map-h h false))\n  ([h pow2?]\n   (let [w  (* h 6)\n         tw (if pow2? (m/ceil-pow2 w) w)\n         fw (/ (/ w tw) 6.0)]\n     (mapv #(uv-rect-for-size h h (* % fw) 0.0 fw 1.0) (range 6)))))\n\n(defn uv-cube-map-v\n  ([h] (uv-cube-map-v h false))\n  ([w pow2?]\n   (let [h  (* w 6)\n         th (if pow2? (m/ceil-pow2 h) h)\n         fh (/ (/ h th) 6.0)]\n     (mapv #(uv-rect-for-size w w 0.0 (* % fh) 1.0 fh) (range 6)))))\n\n(def uv-default-rect [(vec2) (vec2 1.0 0.0) (vec2 1.0) (vec2 0.0 1.0)])\n\n(def uv-faces (face-attribs (repeat uv-default-rect)))\n\n;; **** Tube\n;;\n;; Tube UV mapping is currently only supported by the following implementations:\n;;\n;; - PTF `sweep-mesh`\n\n(defn uv-tube\n  \"Generates tubular UV coordinates, using data provided in\n  options map (:u :v :du :dv keys)\"\n  [_ vid _ {:keys [u v du dv]}]\n  (case (int vid)\n    0 (v/vec2 u v)\n    1 (v/vec2 (+ u du) v)\n    2 (v/vec2 (+ u du) (+ v dv))\n    (v/vec2 u (+ v dv))))\n\n;; **** Disc\n\n(defn uv-flat-disc\n  \"Generates UV coordinates for a circle/trianglefan, using data\n  provided in options map (:theta & :r keys). The first vertex of each\n  triangle is assumed to be in the center of the circle, the other 2\n  vertices are located at the circles perimeter.\"\n  [_ vid _ {:keys [theta r] :as opts}]\n  (case (int vid)\n    0 (vec2 0.5)\n    1 (vec2 (mm/madd (Math/cos theta) r 0.5)\n            (mm/madd (Math/sin theta) r 0.5))\n    (let [theta (+ theta (get opts :delta))]\n      (vec2 (mm/madd (Math/cos theta) r 0.5)\n            (mm/madd (Math/sin theta) r 0.5)))))\n\n(defn uv-polygon-disc\n  \"HOF UV generator for polygons/polyhedras. Takes polygon resolution\n  and computes N UV coords, returns generator fn\"\n  [res]\n  (->> res\n       m/norm-range\n       (mapv #(m/+ (g/as-cartesian (vec2 0.5 (* % m/TWO_PI))) 0.5))\n       repeat\n       face-attribs))\n","~:reader-features",["^H",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["thi.ng.geom.attribs/face-attribs","fattribs","fid","vid","_","cljs.core.nth.cljs$core$IFn$_invoke$arity$2","thi.ng.geom.attribs/const-face-attribs","thi.ng.geom.attribs/generate-face-attribs","verts","face-id","attribs","opts","cljs.core/seq","cljs.core/reduce-kv","acc","k","f","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","p1__45420#","p2__45421#","cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2","var_args","G__45429","thi.ng.geom.attribs/supplied-attrib","js/Error","attrib","id","cljs.core.get.cljs$core$IFn$_invoke$arity$2","tx","G__45430","G__45435","thi.ng.geom.attribs/uv-rect-for-size","w","thi.ng.geom.attribs.uv_rect_for_size.cljs$core$IFn$_invoke$arity$2","h","thi.ng.geom.attribs.uv_rect_for_size.cljs$core$IFn$_invoke$arity$6","x","y","uw","vh","u","v","iu","iv","p1__45431#","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2","thi.ng.math.core._PLUS_.cljs$core$IFn$_invoke$arity$3","thi.ng.geom.vector.vec2.cljs$core$IFn$_invoke$arity$2","G__45456","thi.ng.geom.attribs/uv-cube-map-h","thi.ng.geom.attribs.uv_cube_map_h.cljs$core$IFn$_invoke$arity$2","pow2?","tw","thi.ng.math.core/ceil-pow2","fw","p1__45442#","cljs.core.range.cljs$core$IFn$_invoke$arity$1","G__45473","thi.ng.geom.attribs/uv-cube-map-v","thi.ng.geom.attribs.uv_cube_map_v.cljs$core$IFn$_invoke$arity$2","th","fh","p1__45461#","thi.ng.geom.attribs/uv-default-rect","thi.ng.geom.vector.vec2.cljs$core$IFn$_invoke$arity$0","thi.ng.geom.vector.vec2.cljs$core$IFn$_invoke$arity$1","thi.ng.geom.attribs/uv-faces","cljs.core.repeat.cljs$core$IFn$_invoke$arity$1","p__45482","map__45483","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","thi.ng.geom.attribs/uv-tube","du","dv","G__45485","p__45488","map__45489","thi.ng.geom.attribs/uv-flat-disc","theta","r","G__45497","Math/cos","Math/sin","thi.ng.geom.attribs/uv-polygon-disc","res","thi.ng.math.core/norm-range","p1__45498#","thi.ng.math.core._PLUS_.cljs$core$IFn$_invoke$arity$2","thi.ng.math.core/TWO_PI"]]],"~:cache-keys",["~#cmap",[["^1=","thi/ng/xerror/core.cljc"],[1569959626590,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^H",[]],"~:deps-syms",["^U","^S"]]],["^1=","goog/math/math.js"],[1559507890775,"^1J",["^ ","^1K",null,"^1L",["^H",[]],"^1M",["^U","~$goog.array","~$goog.asserts"]]],["^1=","goog/array/array.js"],[1559507890775,"^1J",["^ ","^1K",null,"^1L",["^H",[]],"^1M",["^U","^1O"]]],["^1=","goog/debug/error.js"],[1559507890775,"^1J",["^ ","^1K",null,"^1L",["^H",[]],"^1M",["^U"]]],["^1=","goog/dom/nodetype.js"],[1559507890775,"^1J",["^ ","^1K",null,"^1L",["^H",[]],"^1M",["^U"]]],["^1=","thi/ng/math/core.cljc"],[1569959625673,"^1J",["^ ","^1K",null,"^1L",["^H",[]],"^1M",["^U","^S"]]],["^1=","goog/object/object.js"],[1559507890775,"^1J",["^ ","^1K",null,"^1L",["^H",[]],"^1M",["^U"]]],"~:SHADOW-TIMESTAMP",[1569627608000,1556316222000],["^1=","goog/math/long.js"],[1559507890775,"^1J",["^ ","^1K",null,"^1L",["^H",[]],"^1M",["^U","^1O","~$goog.reflect"]]],["^1=","goog/string/internal.js"],[1559507890775,"^1J",["^ ","^1K",null,"^1L",["^H",[]],"^1M",["^U"]]],["^1=","goog/functions/functions.js"],[1559507890775,"^1J",["^ ","^1K",null,"^1L",["^H",[]],"^1M",["^U"]]],["^1=","thi/ng/geom/matrix.cljc"],[1569959626067,"^1J",["^ ","^1K",null,"^1L",["^H",[]],"^1M",["^U","^S","^Q","^P","^T","^V","~$thi.ng.xerror.core"]]],["^1=","goog/structs/map.js"],[1559507890775,"^1J",["^ ","^1K",null,"^1L",["^H",[]],"^1M",["^U","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1=","thi/ng/geom/attribs.cljc"],[1569959626067,"^1J",["^ ","^1K",null,"^1L",["^H",[]],"^1M",["^U","^S","^Q","^P","^T","^O","^V"]]],["^1=","goog/asserts/asserts.js"],[1559507890775,"^1J",["^ ","^1K",null,"^1L",["^H",[]],"^1M",["^U","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1=","goog/uri/uri.js"],[1559507890775,"^1J",["^ ","^1K",null,"^1L",["^H",[]],"^1M",["^U","^1N","^1O","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1=","thi/ng/geom/vector.cljc"],[1569959626067,"^1J",["^ ","^1K",null,"^1L",["^H",[]],"^1M",["^U","^S","^Q","^V","~$thi.ng.dstruct.streams","^1R"]]],["^1=","thi/ng/dstruct/core.cljc"],[1569959625696,"^1J",["^ ","^1K",null,"^1L",["^H",[]],"^1M",["^U","^S"]]],["^1=","thi/ng/geom/utils.cljc"],[1569959626067,"^1J",["^ ","^1K",null,"^1L",["^H",[]],"^1M",["^U","^S","^Q","^T","~$thi.ng.geom.types","~$thi.ng.dstruct.core","^V"]]],["^1=","thi/ng/geom/core.cljc"],[1569959626067,"^1J",["^ ","^1K",null,"^1L",["^H",[]],"^1M",["^U","^S"]]],["^1=","goog/base.js"],[1559507890775,"^1J",["^ ","^1K",null,"^1L",["^H",[]],"^1M",[]]],["^1=","goog/structs/structs.js"],[1559507890775,"^1J",["^ ","^1K",null,"^1L",["^H",[]],"^1M",["^U","^1N","~$goog.object"]]],["^1=","thi/ng/dstruct/streams.cljc"],[1569959625696,"^1J",["^ ","^1K",null,"^1L",["^H",[]],"^1M",["^U","^S","^1R"]]],["^1=","goog/string/string.js"],[1559507890775,"^1J",["^ ","^1K",null,"^1L",["^H",[]],"^1M",["^U","~$goog.string.internal"]]],["^1=","goog/reflect/reflect.js"],[1559507890775,"^1J",["^ ","^1K",null,"^1L",["^H",[]],"^1M",["^U"]]],["^1=","goog/string/stringbuffer.js"],[1559507890775,"^1J",["^ ","^1K",null,"^1L",["^H",[]],"^1M",["^U"]]],["^1=","goog/iter/iter.js"],[1559507890775,"^1J",["^ ","^1K",null,"^1L",["^H",[]],"^1M",["^U","^1N","^1O","~$goog.functions","~$goog.math"]]],["^1=","thi/ng/geom/types.cljc"],[1569959626067,"^1J",["^ ","^1K",null,"^1L",["^H",[]],"^1M",["^U","^S","^T"]]],["^1=","cljs/core.cljs"],[1556316222100,"^1J",["^ ","^1K",null,"^1L",["^H",[]],"^1M",["~$goog.math.Long","~$goog.math.Integer","^1W","^24","^1N","~$goog.Uri","~$goog.string.StringBuffer"]]],["^1=","goog/math/integer.js"],[1559507890775,"^1J",["^ ","^1K",null,"^1L",["^H",[]],"^1M",["^U"]]],["^1=","goog/uri/utils.js"],[1559507890775,"^1J",["^ ","^1K",null,"^1L",["^H",[]],"^1M",["^U","^1N","^1O","^1W"]]]]],"~:clj-info",["^ ","jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/default_data_readers.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/thi/ng/dstruct/0.2.1/dstruct-0.2.1.jar!/thi/ng/dstruct/core.cljc",1569959625000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/thi/ng/geom/1.0.0-RC3/geom-1.0.0-RC3.jar!/thi/ng/geom/macros/vector.clj",1569959626000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/inspect.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/reader_types.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/thi/ng/math/0.2.1/math-0.2.1.jar!/thi/ng/math/macros.clj",1569959625000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/errors.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/thi/ng/xerror/0.1.0/xerror-0.1.0.jar!/thi/ng/xerror/core.cljc",1569959626000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/thi/ng/geom/1.0.0-RC3/geom-1.0.0-RC3.jar!/thi/ng/geom/macros/matrix.clj",1569959626000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1556312825000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1556316222000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","thi/ng/geom/attribs.cljc","^7",1,"^8",5,"^9",1,"^:",24],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",null,"^G",["^H",[]],"^I","^J","^M",null,"^N",["^ ","^O","^O","^P","^P","^Q","^Q","^R","^P","^S","^S","~$v","^T","^U","^U","^V","^V","~$m","^V","^T","^T","~$g","^Q"],"^W",["^H",["^X","^Y"]],"~:shadow/js-access-global",["^H",["Error"]],"^Z",["^ ","^[","^T","^10","^T","^11","^O"],"~:defs",["^ ","~$uv-tube",["^ ","~:protocol-inline",null,"^5",["^ ","^6","thi/ng/geom/attribs.cljc","^7",145,"^8",7,"^9",145,"^:",14,"~:arglists",["^15",["~$quote",["^15",[["~$_","~$vid","~$_",["^ ","~:keys",["~$u","~$v","~$du","~$dv"]]]]]]],"~:doc","Generates tubular UV coordinates, using data provided in\n  options map (:u :v :du :dv keys)"],"^I","~$thi.ng.geom.attribs/uv-tube","^6","thi/ng/geom/attribs.cljc","^:",14,"~:method-params",["^15",[["~$_","^35","~$_","~$p__45482"]]],"~:protocol-impl",null,"~:arglists-meta",["^15",[null,null]],"^8",1,"~:variadic?",false,"^7",145,"^9",145,"~:max-fixed-arity",4,"~:fn-var",true,"^33",["^15",["^34",["^15",[["~$_","^35","~$_",["^ ","^36",["~$u","~$v","^37","^38"]]]]]]],"^39","Generates tubular UV coordinates, using data provided in\n  options map (:u :v :du :dv keys)"],"~$generate-face-attribs",["^ ","^32",null,"^5",["^ ","^6","thi/ng/geom/attribs.cljc","^7",68,"^8",7,"^9",68,"^:",28,"^33",["^15",["^34",["^15",[["~$verts","~$face-id","~$attribs","~$opts"]]]]],"^39","Takes a vector of face vertices, face id, a map of vertex attribute\n  generator fns and an options arg passed to the attribute generator\n  fns. Returns 2-elem vector of [verts vert-attribs]. The generator\n  fns themselves take these 4 args and should return the attribute for\n  a single vertex: face-id, vertex-id, vertex, opts (a map)."],"^I","~$thi.ng.geom.attribs/generate-face-attribs","^6","thi/ng/geom/attribs.cljc","^:",28,"^3;",["^15",[["^3C","^3D","^3E","^3F"]]],"^3=",null,"^3>",["^15",[null,null]],"^8",1,"^3?",false,"^7",68,"~:ret-tag","~$cljs.core/IVector","^9",68,"^3@",4,"^3A",true,"^33",["^15",["^34",["^15",[["^3C","^3D","^3E","^3F"]]]]],"^39","Takes a vector of face vertices, face id, a map of vertex attribute\n  generator fns and an options arg passed to the attribute generator\n  fns. Returns 2-elem vector of [verts vert-attribs]. The generator\n  fns themselves take these 4 args and should return the attribute for\n  a single vertex: face-id, vertex-id, vertex, opts (a map)."],"~$face-attribs",["^ ","^32",null,"^5",["^ ","^6","thi/ng/geom/attribs.cljc","^7",54,"^8",7,"^9",54,"^:",19,"^33",["^15",["^34",["^15",[["~$fattribs"]]]]],"^39","Vertex attribute generator using given seq of attribs. The seq\n  should contain at least the same number of elements as there are\n  faces to be generated. Each item itself is a vector of attrib\n  values (in vertex order) to be assigned to each vertex. Returns\n  generator fn."],"^I","~$thi.ng.geom.attribs/face-attribs","^6","thi/ng/geom/attribs.cljc","^:",19,"^3;",["^15",[["^3K"]]],"^3=",null,"^3>",["^15",[null,null]],"^8",1,"^3?",false,"^7",54,"^3H","~$function","^9",54,"^3@",1,"^3A",true,"^33",["^15",["^34",["^15",[["^3K"]]]]],"^39","Vertex attribute generator using given seq of attribs. The seq\n  should contain at least the same number of elements as there are\n  faces to be generated. Each item itself is a vector of attrib\n  values (in vertex order) to be assigned to each vertex. Returns\n  generator fn."],"~$uv-polygon-disc",["^ ","^32",null,"^5",["^ ","^6","thi/ng/geom/attribs.cljc","^7",171,"^8",7,"^9",171,"^:",22,"^33",["^15",["^34",["^15",[["~$res"]]]]],"^39","HOF UV generator for polygons/polyhedras. Takes polygon resolution\n  and computes N UV coords, returns generator fn"],"^I","~$thi.ng.geom.attribs/uv-polygon-disc","^6","thi/ng/geom/attribs.cljc","^:",22,"^3;",["^15",[["^3O"]]],"^3=",null,"^3>",["^15",[null,null]],"^8",1,"^3?",false,"^7",171,"^3H","^3M","^9",171,"^3@",1,"^3A",true,"^33",["^15",["^34",["^15",[["^3O"]]]]],"^39","HOF UV generator for polygons/polyhedras. Takes polygon resolution\n  and computes N UV coords, returns generator fn"],"~$uv-default-rect",["^ ","^I","~$thi.ng.geom.attribs/uv-default-rect","^6","thi/ng/geom/attribs.cljc","^7",135,"^8",1,"^9",135,"^:",21,"^5",["^ ","^6","thi/ng/geom/attribs.cljc","^7",135,"^8",6,"^9",135,"^:",21],"~:tag","^3I"],"~$supplied-attrib",["^ ","^32",null,"^5",["^ ","^6","thi/ng/geom/attribs.cljc","^7",96,"^8",7,"^9",96,"^:",22,"^33",["^15",["^34",["^15",[["~$attrib"],["^3U","~$tx"]]]]],"^39","Higher order helper, returns attribute generator fn for types which\n  emit pre-computed values as part of their `as-mesh` impl. Takes\n  attrib key and for each vertex looks up value in opts map (which is\n  supplied by supporting types, e.g. sphere). If called via 2 args,\n  the looked up values will also be passed to transformation fn (2nd\n  arg).","~:top-fn",["^ ","^3?",false,"~:fixed-arity",2,"^3@",2,"^3;",["^15",[["^3U"],["^3U","^3V"]]],"^33",["^15",[["^3U"],["^3U","^3V"]]],"^3>",["^15",[null,null]]]],"^I","~$thi.ng.geom.attribs/supplied-attrib","^6","thi/ng/geom/attribs.cljc","^:",22,"^3W",["^ ","^3?",false,"^3X",2,"^3@",2,"^3;",["^15",[["^3U"],["^3U","^3V"]]],"^33",["^15",[["^3U"],["^3U","^3V"]]],"^3>",["^15",[null,null]]],"^3;",["^15",[["^3U"],["^3U","^3V"]]],"^3=",null,"^3X",2,"^3>",["^15",[null,null]],"^8",1,"^3?",false,"~:methods",[["^ ","^3X",1,"^3?",false,"^3S","^3M"],["^ ","^3X",2,"^3?",false,"^3S","^3M"]],"^7",96,"^9",96,"^3@",2,"^3A",true,"^33",["^15",[["^3U"],["^3U","^3V"]]],"^39","Higher order helper, returns attribute generator fn for types which\n  emit pre-computed values as part of their `as-mesh` impl. Takes\n  attrib key and for each vertex looks up value in opts map (which is\n  supplied by supporting types, e.g. sphere). If called via 2 args,\n  the looked up values will also be passed to transformation fn (2nd\n  arg)."],"~$const-face-attribs",["^ ","^32",null,"^5",["^ ","^6","thi/ng/geom/attribs.cljc","^7",62,"^8",7,"^9",62,"^:",25,"^33",["^15",["^34",["^15",[["^3K"]]]]],"^39","Similar to face-attribs fn, but for attributes which are constant\n  for all vertices of a single face. Takes a seq of attrib values and\n  returns generator fn."],"^I","~$thi.ng.geom.attribs/const-face-attribs","^6","thi/ng/geom/attribs.cljc","^:",25,"^3;",["^15",[["^3K"]]],"^3=",null,"^3>",["^15",[null,null]],"^8",1,"^3?",false,"^7",62,"^3H","^3M","^9",62,"^3@",1,"^3A",true,"^33",["^15",["^34",["^15",[["^3K"]]]]],"^39","Similar to face-attribs fn, but for attributes which are constant\n  for all vertices of a single face. Takes a seq of attrib values and\n  returns generator fn."],"~$uv-flat-disc",["^ ","^32",null,"^5",["^ ","^6","thi/ng/geom/attribs.cljc","^7",157,"^8",7,"^9",157,"^:",19,"^33",["^15",["^34",["^15",[["~$_","^35","~$_",["^ ","^36",["~$theta","~$r"],"^17","^3F"]]]]]],"^39","Generates UV coordinates for a circle/trianglefan, using data\n  provided in options map (:theta & :r keys). The first vertex of each\n  triangle is assumed to be in the center of the circle, the other 2\n  vertices are located at the circles perimeter."],"^I","~$thi.ng.geom.attribs/uv-flat-disc","^6","thi/ng/geom/attribs.cljc","^:",19,"^3;",["^15",[["~$_","^35","~$_","~$p__45488"]]],"^3=",null,"^3>",["^15",[null,null]],"^8",1,"^3?",false,"^7",157,"^9",157,"^3@",4,"^3A",true,"^33",["^15",["^34",["^15",[["~$_","^35","~$_",["^ ","^36",["^42","~$r"],"^17","^3F"]]]]]],"^39","Generates UV coordinates for a circle/trianglefan, using data\n  provided in options map (:theta & :r keys). The first vertex of each\n  triangle is assumed to be in the center of the circle, the other 2\n  vertices are located at the circles perimeter."],"~$uv-rect-for-size",["^ ","^32",null,"^5",["^ ","^6","thi/ng/geom/attribs.cljc","^7",109,"^8",7,"^9",109,"^:",23,"^33",["^15",["^34",["^15",[["~$w"],["~$w","~$h"],["~$w","~$h","~$x","~$y","~$uw","~$vh"]]]]],"^3W",["^ ","^3?",false,"^3X",6,"^3@",6,"^3;",["^15",[["~$w"],["~$w","~$h"],["~$w","~$h","~$x","~$y","^46","^47"]]],"^33",["^15",[["~$w"],["~$w","~$h"],["~$w","~$h","~$x","~$y","^46","^47"]]],"^3>",["^15",[null,null,null]]]],"^I","~$thi.ng.geom.attribs/uv-rect-for-size","^6","thi/ng/geom/attribs.cljc","^:",23,"^3W",["^ ","^3?",false,"^3X",6,"^3@",6,"^3;",["^15",[["~$w"],["~$w","~$h"],["~$w","~$h","~$x","~$y","^46","^47"]]],"^33",["^15",[["~$w"],["~$w","~$h"],["~$w","~$h","~$x","~$y","^46","^47"]]],"^3>",["^15",[null,null,null]]],"^3;",["^15",[["~$w"],["~$w","~$h"],["~$w","~$h","~$x","~$y","^46","^47"]]],"^3=",null,"^3X",6,"^3>",["^15",[null,null,null]],"^8",1,"^3?",false,"^3Z",[["^ ","^3X",1,"^3?",false,"^3S","~$any"],["^ ","^3X",2,"^3?",false,"^3S","^49"],["^ ","^3X",6,"^3?",false,"^3S","~$clj"]],"^7",109,"^9",109,"^3@",6,"^3A",true,"^33",["^15",[["~$w"],["~$w","~$h"],["~$w","~$h","~$x","~$y","^46","^47"]]]],"~$uv-faces",["^ ","^I","~$thi.ng.geom.attribs/uv-faces","^6","thi/ng/geom/attribs.cljc","^7",137,"^8",1,"^9",137,"^:",14,"^5",["^ ","^6","thi/ng/geom/attribs.cljc","^7",137,"^8",6,"^9",137,"^:",14],"^3S","^3M"],"~$uv-cube-map-h",["^ ","^32",null,"^5",["^ ","^6","thi/ng/geom/attribs.cljc","^7",119,"^8",7,"^9",119,"^:",20,"^33",["^15",["^34",["^15",[["~$h"],["~$h","~$pow2?"]]]]],"^3W",["^ ","^3?",false,"^3X",2,"^3@",2,"^3;",["^15",[["~$h"],["~$h","^4>"]]],"^33",["^15",[["~$h"],["~$h","^4>"]]],"^3>",["^15",[null,null]]]],"^I","~$thi.ng.geom.attribs/uv-cube-map-h","^6","thi/ng/geom/attribs.cljc","^:",20,"^3W",["^ ","^3?",false,"^3X",2,"^3@",2,"^3;",["^15",[["~$h"],["~$h","^4>"]]],"^33",["^15",[["~$h"],["~$h","^4>"]]],"^3>",["^15",[null,null]]],"^3;",["^15",[["~$h"],["~$h","^4>"]]],"^3=",null,"^3X",2,"^3>",["^15",[null,null]],"^8",1,"^3?",false,"^3Z",[["^ ","^3X",1,"^3?",false,"^3S","^49"],["^ ","^3X",2,"^3?",false,"^3S","^4:"]],"^7",119,"^9",119,"^3@",2,"^3A",true,"^33",["^15",[["~$h"],["~$h","^4>"]]]],"~$uv-cube-map-v",["^ ","^32",null,"^5",["^ ","^6","thi/ng/geom/attribs.cljc","^7",127,"^8",7,"^9",127,"^:",20,"^33",["^15",["^34",["^15",[["~$h"],["~$w","^4>"]]]]],"^3W",["^ ","^3?",false,"^3X",2,"^3@",2,"^3;",["^15",[["~$h"],["~$w","^4>"]]],"^33",["^15",[["~$h"],["~$w","^4>"]]],"^3>",["^15",[null,null]]]],"^I","~$thi.ng.geom.attribs/uv-cube-map-v","^6","thi/ng/geom/attribs.cljc","^:",20,"^3W",["^ ","^3?",false,"^3X",2,"^3@",2,"^3;",["^15",[["~$h"],["~$w","^4>"]]],"^33",["^15",[["~$h"],["~$w","^4>"]]],"^3>",["^15",[null,null]]],"^3;",["^15",[["~$h"],["~$w","^4>"]]],"^3=",null,"^3X",2,"^3>",["^15",[null,null]],"^8",1,"^3?",false,"^3Z",[["^ ","^3X",1,"^3?",false,"^3S","^49"],["^ ","^3X",2,"^3?",false,"^3S","^4:"]],"^7",127,"^9",127,"^3@",2,"^3A",true,"^33",["^15",[["~$h"],["~$w","^4>"]]]]],"^Y",["^ ","^12","^12","^13","^12","^S","^S"],"~:cljs.analyzer/constants",["^ ","^W",["^H",["~:r","~:v","~:theta","~:du","~:delta","~:dv","~:u"]],"~:order",["~:u","~:v","^4D","^4F","^4C","~:r","^4E"]],"^19",["^ ","^Y",["^H",[]],"^X",["^H",[]]],"^1:",["^ "],"^1;",["^U","^S","^Q","^P","^T","^O","^V"]],"^L","^J","~:ns-specs",["^ "],"~:ns-spec-vars",[],"~:compiler-options",["^1I",[["^4J","~:static-fns"],true,["^4J","~:elide-asserts"],false,["^4J","~:optimize-constants"],null,["^4J","^1@"],null,["^4J","~:external-config"],null,["^4J","~:tooling-config"],null,["^4J","~:emit-constants"],null,["^4J","~:load-tests"],null,["^4J","~:form-size-threshold"],null,["^4J","~:infer-externs"],true,["^4J","^1B"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^4J","~:fn-invoke-direct"],null,["^4J","~:source-map"],"/dev/null"]]]