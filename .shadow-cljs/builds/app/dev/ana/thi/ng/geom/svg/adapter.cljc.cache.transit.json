["^ ","~:output",["^ ","~:js","goog.provide('thi.ng.geom.svg.adapter');\ngoog.require('cljs.core');\ngoog.require('thi.ng.math.core');\ngoog.require('thi.ng.geom.svg.core');\ngoog.require('thi.ng.geom.core');\ngoog.require('thi.ng.geom.types');\ngoog.require('thi.ng.dstruct.core');\nthi.ng.geom.types.Line2.prototype.thi$ng$geom$svg$core$ISVGConvert$ = cljs.core.PROTOCOL_SENTINEL;\n\nthi.ng.geom.types.Line2.prototype.thi$ng$geom$svg$core$ISVGConvert$as_svg$arity$2 = (function (p__46284,p__46285){\nvar map__46286 = p__46284;\nvar map__46286__$1 = (((((!((map__46286 == null))))?(((((map__46286.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__46286.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__46286):map__46286);\nvar p = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46286__$1,new cljs.core.Keyword(null,\"points\",\"points\",-1486596883));\nvar map__46287 = p__46285;\nvar map__46287__$1 = (((((!((map__46287 == null))))?(((((map__46287.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__46287.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__46287):map__46287);\nvar opts = map__46287__$1;\nvar __start = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46287__$1,new cljs.core.Keyword(null,\"__start\",\"__start\",1668051488));\nvar __end = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46287__$1,new cljs.core.Keyword(null,\"__end\",\"__end\",-548095553));\nvar map__46290 = this;\nvar map__46290__$1 = (((((!((map__46290 == null))))?(((((map__46290.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__46290.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__46290):map__46290);\nvar p__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46290__$1,new cljs.core.Keyword(null,\"points\",\"points\",-1486596883));\nif(cljs.core.truth_((function (){var or__4131__auto__ = __start;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn __end;\n}\n})())){\nreturn thi.ng.geom.svg.core.line_decorated.cljs$core$IFn$_invoke$arity$5((p__$1.cljs$core$IFn$_invoke$arity$1 ? p__$1.cljs$core$IFn$_invoke$arity$1((0)) : p__$1.call(null,(0))),(p__$1.cljs$core$IFn$_invoke$arity$1 ? p__$1.cljs$core$IFn$_invoke$arity$1((1)) : p__$1.call(null,(1))),__start,__end,opts);\n} else {\nreturn thi.ng.geom.svg.core.line.cljs$core$IFn$_invoke$arity$3((p__$1.cljs$core$IFn$_invoke$arity$1 ? p__$1.cljs$core$IFn$_invoke$arity$1((0)) : p__$1.call(null,(0))),(p__$1.cljs$core$IFn$_invoke$arity$1 ? p__$1.cljs$core$IFn$_invoke$arity$1((1)) : p__$1.call(null,(1))),opts);\n}\n});\n\nthi.ng.geom.types.Circle2.prototype.thi$ng$geom$svg$core$ISVGConvert$ = cljs.core.PROTOCOL_SENTINEL;\n\nthi.ng.geom.types.Circle2.prototype.thi$ng$geom$svg$core$ISVGConvert$as_svg$arity$2 = (function (_,opts){\nvar ___$1 = this;\nreturn thi.ng.geom.svg.core.circle.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(___$1,new cljs.core.Keyword(null,\"p\",\"p\",151049309)),cljs.core.get.cljs$core$IFn$_invoke$arity$2(___$1,new cljs.core.Keyword(null,\"r\",\"r\",-471384190)),opts);\n});\n\nthi.ng.geom.types.LineStrip2.prototype.thi$ng$geom$svg$core$ISVGConvert$ = cljs.core.PROTOCOL_SENTINEL;\n\nthi.ng.geom.types.LineStrip2.prototype.thi$ng$geom$svg$core$ISVGConvert$as_svg$arity$2 = (function (p__46297,p__46298){\nvar map__46299 = p__46297;\nvar map__46299__$1 = (((((!((map__46299 == null))))?(((((map__46299.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__46299.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__46299):map__46299);\nvar points = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46299__$1,new cljs.core.Keyword(null,\"points\",\"points\",-1486596883));\nvar map__46300 = p__46298;\nvar map__46300__$1 = (((((!((map__46300 == null))))?(((((map__46300.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__46300.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__46300):map__46300);\nvar opts = map__46300__$1;\nvar __start = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46300__$1,new cljs.core.Keyword(null,\"__start\",\"__start\",1668051488));\nvar __segment = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46300__$1,new cljs.core.Keyword(null,\"__segment\",\"__segment\",-1509807730));\nvar __end = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46300__$1,new cljs.core.Keyword(null,\"__end\",\"__end\",-548095553));\nvar map__46306 = this;\nvar map__46306__$1 = (((((!((map__46306 == null))))?(((((map__46306.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__46306.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__46306):map__46306);\nvar points__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46306__$1,new cljs.core.Keyword(null,\"points\",\"points\",-1486596883));\nif(cljs.core.truth_((function (){var or__4131__auto__ = __start;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nvar or__4131__auto____$1 = __segment;\nif(cljs.core.truth_(or__4131__auto____$1)){\nreturn or__4131__auto____$1;\n} else {\nreturn __end;\n}\n}\n})())){\nreturn thi.ng.geom.svg.core.line_strip_decorated.cljs$core$IFn$_invoke$arity$5(points__$1,__start,__segment,__end,opts);\n} else {\nreturn thi.ng.geom.svg.core.line_strip.cljs$core$IFn$_invoke$arity$2(points__$1,opts);\n}\n});\n\nthi.ng.geom.types.Polygon2.prototype.thi$ng$geom$svg$core$ISVGConvert$ = cljs.core.PROTOCOL_SENTINEL;\n\nthi.ng.geom.types.Polygon2.prototype.thi$ng$geom$svg$core$ISVGConvert$as_svg$arity$2 = (function (_,opts){\nvar ___$1 = this;\nreturn thi.ng.geom.svg.core.polygon.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(___$1,new cljs.core.Keyword(null,\"points\",\"points\",-1486596883)),opts);\n});\n\nthi.ng.geom.types.Rect2.prototype.thi$ng$geom$svg$core$ISVGConvert$ = cljs.core.PROTOCOL_SENTINEL;\n\nthi.ng.geom.types.Rect2.prototype.thi$ng$geom$svg$core$ISVGConvert$as_svg$arity$2 = (function (p__46310,opts){\nvar map__46312 = p__46310;\nvar map__46312__$1 = (((((!((map__46312 == null))))?(((((map__46312.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__46312.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__46312):map__46312);\nvar p = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46312__$1,new cljs.core.Keyword(null,\"p\",\"p\",151049309));\nvar size = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46312__$1,new cljs.core.Keyword(null,\"size\",\"size\",1098693007));\nvar map__46314 = this;\nvar map__46314__$1 = (((((!((map__46314 == null))))?(((((map__46314.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__46314.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__46314):map__46314);\nvar p__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46314__$1,new cljs.core.Keyword(null,\"p\",\"p\",151049309));\nvar size__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46314__$1,new cljs.core.Keyword(null,\"size\",\"size\",1098693007));\nreturn thi.ng.geom.svg.core.rect.cljs$core$IFn$_invoke$arity$4(p__$1,(size__$1.cljs$core$IFn$_invoke$arity$1 ? size__$1.cljs$core$IFn$_invoke$arity$1((0)) : size__$1.call(null,(0))),(size__$1.cljs$core$IFn$_invoke$arity$1 ? size__$1.cljs$core$IFn$_invoke$arity$1((1)) : size__$1.call(null,(1))),opts);\n});\n\nthi.ng.geom.types.Triangle2.prototype.thi$ng$geom$svg$core$ISVGConvert$ = cljs.core.PROTOCOL_SENTINEL;\n\nthi.ng.geom.types.Triangle2.prototype.thi$ng$geom$svg$core$ISVGConvert$as_svg$arity$2 = (function (_,opts){\nvar ___$1 = this;\nreturn thi.ng.geom.svg.core.polygon.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(___$1,new cljs.core.Keyword(null,\"points\",\"points\",-1486596883)),opts);\n});\nthi.ng.geom.svg.adapter.all_as_svg = (function thi$ng$geom$svg$adapter$all_as_svg(form){\nreturn thi.ng.dstruct.core.postwalk((function (x){\nif((((!((x == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === x.thi$ng$geom$svg$core$ISVGConvert$))))?true:(((!x.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(thi.ng.geom.svg.core.ISVGConvert,x):false)):cljs.core.native_satisfies_QMARK_(thi.ng.geom.svg.core.ISVGConvert,x))){\nreturn thi.ng.geom.svg.core.as_svg(x,cljs.core.meta(x));\n} else {\nreturn x;\n}\n}),form);\n});\n/**\n * To be used with inject-element-attribs, generates an unique :key\n *   attrib for each SVG element w/o :key attrib. Returns updated attribs.\n */\nthi.ng.geom.svg.adapter.key_attrib_injector = (function thi$ng$geom$svg$adapter$key_attrib_injector(el,attribs){\nif(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(attribs,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587)))){\nreturn attribs;\n} else {\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(attribs,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.gensym.cljs$core$IFn$_invoke$arity$0()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.hash(el))].join(''));\n}\n});\n/**\n * Walks SVG DOM tree with thi.ng.dstruct.core/postwalk and applies\n *   given function to each element node. The fn takes 2 args: the\n *   element itself and its attribute map. The fn's return value will be\n *   used as the new attribute map.\n */\nthi.ng.geom.svg.adapter.inject_element_attribs = (function thi$ng$geom$svg$adapter$inject_element_attribs(var_args){\nvar G__46325 = arguments.length;\nswitch (G__46325) {\ncase 1:\nreturn thi.ng.geom.svg.adapter.inject_element_attribs.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn thi.ng.geom.svg.adapter.inject_element_attribs.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\nthi.ng.geom.svg.adapter.inject_element_attribs.cljs$core$IFn$_invoke$arity$1 = (function (root){\nreturn thi.ng.geom.svg.adapter.inject_element_attribs.cljs$core$IFn$_invoke$arity$2(thi.ng.geom.svg.adapter.key_attrib_injector,root);\n});\n\nthi.ng.geom.svg.adapter.inject_element_attribs.cljs$core$IFn$_invoke$arity$2 = (function (f,root){\nreturn thi.ng.dstruct.core.postwalk((function (x){\nif(cljs.core.vector_QMARK_(x)){\nvar y = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(x,(1));\nif((((y == null)) || (cljs.core.map_QMARK_(y)))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(x,(1),(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x,y) : f.call(null,x,y)));\n} else {\nreturn x;\n}\n} else {\nreturn x;\n}\n}),root);\n});\n\nthi.ng.geom.svg.adapter.inject_element_attribs.cljs$lang$maxFixedArity = 2;\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","thi/ng/geom/svg/adapter.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",28],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$thi.ng.geom.svg.adapter","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$thi.ng.geom.core","^O","~$cljs.core","^P","~$goog","^Q","~$thi.ng.geom.svg.core","^R","~$thi.ng.math.core","^S","~$m","^S","~$thi.ng.dstruct.core","^T","~$thi.ng.geom.types","^U","~$g","^O","~$svg","^R","~$d","^T"],"~:seen",["^H",["~:require"]],"~:uses",["^ ","~$Circle2","^U","~$Line2","^U","~$LineStrip2","^U","~$Polygon2","^U","~$Rect2","^U","~$Triangle2","^U"],"~:require-macros",["^ ","^P","^P"],"~:form",["~#list",["~$ns","^J",["^16",["^X",["^S","~:as","~$m"],["^R","^18","^V"],["^O","^18","~$g"],["^U","~:refer",["^Z","^[","^10","^11","^12","^13"]],["^T","^18","~$d"]]]]],"~:flags",["^ ","^X",["^H",[]]],"~:js-deps",["^ "],"~:deps",["^Q","^P","^S","^R","^O","^U","^T"]],"^L","^J","~:resource-id",["~:shadow.build.classpath/resource","thi/ng/geom/svg/adapter.cljc"],"~:compiled-at",1569963472488,"~:resource-name","thi/ng/geom/svg/adapter.cljc","~:warnings",[],"~:source","(ns thi.ng.geom.svg.adapter\n  (:require\n   [thi.ng.math.core :as m]\n   [thi.ng.geom.svg.core :as svg]\n   [thi.ng.geom.core :as g]\n   #?(:clj [thi.ng.geom.types]\n      :cljs [thi.ng.geom.types :refer [Circle2 Line2 LineStrip2 Polygon2 Rect2 Triangle2]])\n   [thi.ng.dstruct.core :as d])\n  #?(:clj\n     (:import\n      [thi.ng.geom.types Circle2 Line2 LineStrip2 Polygon2 Rect2 Triangle2])))\n\n;; SVG conversions for geom.types\n;;\n;; This namespace provides some simple wrappers to allow direct use of\n;; the shape entities defined in `src/types.cljc`, without having to\n;; manually convert them into their SVG representations.\n;;\n;; The adapters work by providing implementations of the `ISVGConvert`\n;; protocol for all built-in 2D types and a simple helper function to\n;; recursively transform any such types used within an SVG scene.\n;;\n;; Any 3D entities (e.g. meshes) need to be processed via the\n;; `thi.ng.geom.svg.renderer` namespace.\n\n\n;; Adapter implementations\n\n(extend-protocol svg/ISVGConvert\n\n  Line2\n  (as-svg\n    [{p :points} {:keys [__start __end] :as opts}]\n    (if (or __start __end)\n      (svg/line-decorated (p 0) (p 1) __start __end opts)\n      (svg/line (p 0) (p 1) opts)))\n\n  Circle2\n  (as-svg\n    [_ opts] (svg/circle (get _ :p) (get _ :r) opts))\n\n  LineStrip2\n  (as-svg\n    [{:keys [points]} {:keys [__start __segment __end] :as opts}]\n    (if (or __start __segment __end)\n      (svg/line-strip-decorated points __start __segment __end opts)\n      (svg/line-strip points opts)))\n\n  Polygon2\n  (as-svg\n    [_ opts] (svg/polygon (get _ :points) opts))\n\n  Rect2\n  (as-svg\n    [{:keys [p size]} opts] (svg/rect p (size 0) (size 1) opts))\n\n  Triangle2\n  (as-svg\n    [_ opts] (svg/polygon (get _ :points) opts)))\n\n(defn all-as-svg\n  [form]\n  (d/postwalk\n   (fn [x] (if (satisfies? svg/ISVGConvert x) (svg/as-svg x (meta x)) x))\n   form))\n\n;; React.js :key prop injection\n\n(defn key-attrib-injector\n  \"To be used with inject-element-attribs, generates an unique :key\n  attrib for each SVG element w/o :key attrib. Returns updated attribs.\"\n  [el attribs] (if (get attribs :key)\n                 attribs\n                 (assoc attribs :key (str (gensym) (hash el)))))\n\n(defn inject-element-attribs\n  \"Walks SVG DOM tree with thi.ng.dstruct.core/postwalk and applies\n  given function to each element node. The fn takes 2 args: the\n  element itself and its attribute map. The fn's return value will be\n  used as the new attribute map.\"\n  ([root]\n   (inject-element-attribs key-attrib-injector root))\n  ([f root]\n   (d/postwalk\n    (fn [x]\n      (if (vector? x)\n        (let [y (nth x 1)]\n          (if (or (nil? y) (map? y))\n            (assoc x 1 (f x y))\n            x))\n        x))\n    root)))\n","~:reader-features",["^H",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["cljs.core/PROTOCOL_SENTINEL","thi.ng.geom.types/Line2","p__46284","p__46285","map__46286","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","map__46287","map__46290","p","__start","__end","opts","or__4131__auto__","thi.ng.geom.svg.core.line_decorated.cljs$core$IFn$_invoke$arity$5","thi.ng.geom.svg.core.line.cljs$core$IFn$_invoke$arity$3","thi.ng.geom.types/Circle2","_","thi.ng.geom.svg.core.circle.cljs$core$IFn$_invoke$arity$3","thi.ng.geom.types/LineStrip2","p__46297","p__46298","map__46299","map__46300","map__46306","points","__segment","thi.ng.geom.svg.core.line_strip_decorated.cljs$core$IFn$_invoke$arity$5","thi.ng.geom.svg.core.line_strip.cljs$core$IFn$_invoke$arity$2","thi.ng.geom.types/Polygon2","thi.ng.geom.svg.core.polygon.cljs$core$IFn$_invoke$arity$2","thi.ng.geom.types/Rect2","p__46310","map__46312","map__46314","size","thi.ng.geom.svg.core.rect.cljs$core$IFn$_invoke$arity$4","thi.ng.geom.types/Triangle2","thi.ng.geom.svg.adapter/all-as-svg","form","thi.ng.dstruct.core/postwalk","x","cljs.core/native-satisfies?","thi.ng.geom.svg.core/ISVGConvert","thi.ng.geom.svg.core/as-svg","cljs.core/meta","thi.ng.geom.svg.adapter/key-attrib-injector","el","attribs","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","cljs.core.gensym.cljs$core$IFn$_invoke$arity$0","cljs.core/hash","var_args","G__46325","thi.ng.geom.svg.adapter/inject-element-attribs","js/Error","root","thi.ng.geom.svg.adapter.inject_element_attribs.cljs$core$IFn$_invoke$arity$2","f","cljs.core/vector?","y","cljs.core.nth.cljs$core$IFn$_invoke$arity$2","cljs.core/map?"]]],"~:cache-keys",["~#cmap",[["^1>","thi/ng/xerror/core.cljc"],[1569959626590,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^H",[]],"~:deps-syms",["^Q","^P"]]],["^1>","thi/ng/typedarrays/core.cljs"],[1569959626548,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q","^P"]]],["^1>","goog/math/math.js"],[1559507890775,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q","~$goog.array","~$goog.asserts"]]],["^1>","goog/array/array.js"],[1559507890775,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q","^1P"]]],["^1>","goog/debug/error.js"],[1559507890775,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q"]]],["^1>","goog/dom/nodetype.js"],[1559507890775,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q"]]],["^1>","thi/ng/math/core.cljc"],[1569959625673,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q","^P"]]],["^1>","goog/object/object.js"],[1559507890775,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q"]]],"~:SHADOW-TIMESTAMP",[1569627608000,1556316222000],["^1>","goog/math/long.js"],[1559507890775,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q","^1P","~$goog.reflect"]]],["^1>","goog/string/internal.js"],[1559507890775,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q"]]],["^1>","goog/functions/functions.js"],[1559507890775,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q"]]],["^1>","thi/ng/geom/matrix.cljc"],[1569959626067,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q","^P","^O","~$thi.ng.geom.utils","~$thi.ng.geom.vector","^S","~$thi.ng.xerror.core"]]],["^1>","goog/structs/map.js"],[1559507890775,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1>","thi/ng/geom/svg/adapter.cljc"],[1569959626067,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q","^P","^S","^R","^O","^U","^T"]]],["^1>","goog/asserts/asserts.js"],[1559507890775,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1>","thi/ng/strf/core.cljc"],[1569959626259,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q","^P","~$clojure.string"]]],["^1>","goog/uri/uri.js"],[1559507890775,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q","^1O","^1P","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1>","thi/ng/geom/vector.cljc"],[1569959626067,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q","^P","^O","^S","~$thi.ng.dstruct.streams","^1U"]]],["^1>","thi/ng/dstruct/core.cljc"],[1569959625696,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q","^P"]]],["^1>","thi/ng/geom/utils.cljc"],[1569959626067,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q","^P","^O","^1T","^U","^T","^S"]]],["^1>","thi/ng/geom/core.cljc"],[1569959626067,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q","^P"]]],["^1>","goog/base.js"],[1559507890775,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",[]]],["^1>","goog/structs/structs.js"],[1559507890775,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q","^1O","~$goog.object"]]],["^1>","clojure/string.cljs"],[1556316222100,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q","^P","^1[","~$goog.string.StringBuffer"]]],["^1>","thi/ng/dstruct/streams.cljc"],[1569959625696,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q","^P","^1U"]]],["^1>","goog/string/string.js"],[1559507890775,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q","~$goog.string.internal"]]],["^1>","goog/reflect/reflect.js"],[1559507890775,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q"]]],["^1>","goog/string/stringbuffer.js"],[1559507890775,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q"]]],["^1>","goog/iter/iter.js"],[1559507890775,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q","^1O","^1P","~$goog.functions","~$goog.math"]]],["^1>","thi/ng/geom/types.cljc"],[1569959626067,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q","^P","^1T"]]],["^1>","cljs/core.cljs"],[1556316222100,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["~$goog.math.Long","~$goog.math.Integer","^1[","^26","^1O","~$goog.Uri","^27"]]],["^1>","goog/math/integer.js"],[1559507890775,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q"]]],["^1>","thi/ng/color/core.cljc"],[1569959625681,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q","^P","^S","^25","~$thi.ng.strf.core","^1U","~$thi.ng.typedarrays.core"]]],["^1>","goog/uri/utils.js"],[1559507890775,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q","^1O","^1P","^1["]]],["^1>","thi/ng/geom/svg/core.cljc"],[1569959626067,"^1K",["^ ","^1L",null,"^1M",["^H",[]],"^1N",["^Q","^P","^1Z","^S","^O","^1S","^1T","~$thi.ng.geom.matrix","^2>","~$thi.ng.color.core"]]]]],"~:clj-info",["^ ","jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/default_data_readers.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/thi/ng/dstruct/0.2.1/dstruct-0.2.1.jar!/thi/ng/dstruct/core.cljc",1569959625000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/thi/ng/geom/1.0.0-RC3/geom-1.0.0-RC3.jar!/thi/ng/geom/macros/vector.clj",1569959626000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/inspect.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/reader_types.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/thi/ng/math/0.2.1/math-0.2.1.jar!/thi/ng/math/macros.clj",1569959625000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/errors.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1556316222000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1559876774000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/thi/ng/xerror/0.1.0/xerror-0.1.0.jar!/thi/ng/xerror/core.cljc",1569959626000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/thi/ng/geom/1.0.0-RC3/geom-1.0.0-RC3.jar!/thi/ng/geom/macros/matrix.clj",1569959626000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1556312825000,"jar:file:/Users/lambda_school_loaner_94/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1556316222000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","thi/ng/geom/svg/adapter.cljc","^7",1,"^8",5,"^9",1,"^:",28],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",null,"^G",["^H",[]],"^I","^J","^M",null,"^N",["^ ","^O","^O","^P","^P","^Q","^Q","^R","^R","^S","^S","~$m","^S","^T","^T","^U","^U","~$g","^O","^V","^R","~$d","^T"],"^W",["^H",["^X"]],"~:shadow/js-access-global",["^H",["Error"]],"^Y",["^ ","^Z","^U","^[","^U","^10","^U","^11","^U","^12","^U","^13","^U"],"~:defs",["^ ","~$all-as-svg",["^ ","~:protocol-inline",null,"^5",["^ ","^6","thi/ng/geom/svg/adapter.cljc","^7",61,"^8",7,"^9",61,"^:",17,"~:arglists",["^16",["~$quote",["^16",[["~$form"]]]]]],"^I","~$thi.ng.geom.svg.adapter/all-as-svg","^6","thi/ng/geom/svg/adapter.cljc","^:",17,"~:method-params",["^16",[["^3;"]]],"~:protocol-impl",null,"~:arglists-meta",["^16",[null,null]],"^8",1,"~:variadic?",false,"^7",61,"~:ret-tag","~$any","^9",61,"~:max-fixed-arity",1,"~:fn-var",true,"^39",["^16",["^3:",["^16",[["^3;"]]]]]],"~$key-attrib-injector",["^ ","^38",null,"^5",["^ ","^6","thi/ng/geom/svg/adapter.cljc","^7",69,"^8",7,"^9",69,"^:",26,"^39",["^16",["^3:",["^16",[["~$el","~$attribs"]]]]],"~:doc","To be used with inject-element-attribs, generates an unique :key\n  attrib for each SVG element w/o :key attrib. Returns updated attribs."],"^I","~$thi.ng.geom.svg.adapter/key-attrib-injector","^6","thi/ng/geom/svg/adapter.cljc","^:",26,"^3=",["^16",[["^3F","^3G"]]],"^3>",null,"^3?",["^16",[null,null]],"^8",1,"^3@",false,"^7",69,"^3A",["^H",[null,"~$clj","^3B"]],"^9",69,"^3C",2,"^3D",true,"^39",["^16",["^3:",["^16",[["^3F","^3G"]]]]],"^3H","To be used with inject-element-attribs, generates an unique :key\n  attrib for each SVG element w/o :key attrib. Returns updated attribs."],"~$inject-element-attribs",["^ ","^38",null,"^5",["^ ","^6","thi/ng/geom/svg/adapter.cljc","^7",76,"^8",7,"^9",76,"^:",29,"^39",["^16",["^3:",["^16",[["~$root"],["~$f","^3L"]]]]],"^3H","Walks SVG DOM tree with thi.ng.dstruct.core/postwalk and applies\n  given function to each element node. The fn takes 2 args: the\n  element itself and its attribute map. The fn's return value will be\n  used as the new attribute map.","~:top-fn",["^ ","^3@",false,"~:fixed-arity",2,"^3C",2,"^3=",["^16",[["^3L"],["~$f","^3L"]]],"^39",["^16",[["^3L"],["~$f","^3L"]]],"^3?",["^16",[null,null]]]],"^I","~$thi.ng.geom.svg.adapter/inject-element-attribs","^6","thi/ng/geom/svg/adapter.cljc","^:",29,"^3M",["^ ","^3@",false,"^3N",2,"^3C",2,"^3=",["^16",[["^3L"],["~$f","^3L"]]],"^39",["^16",[["^3L"],["~$f","^3L"]]],"^3?",["^16",[null,null]]],"^3=",["^16",[["^3L"],["~$f","^3L"]]],"^3>",null,"^3N",2,"^3?",["^16",[null,null]],"^8",1,"^3@",false,"~:methods",[["^ ","^3N",1,"^3@",false,"~:tag","^3B"],["^ ","^3N",2,"^3@",false,"^3Q","^3B"]],"^7",76,"^9",76,"^3C",2,"^3D",true,"^39",["^16",[["^3L"],["~$f","^3L"]]],"^3H","Walks SVG DOM tree with thi.ng.dstruct.core/postwalk and applies\n  given function to each element node. The fn takes 2 args: the\n  element itself and its attribute map. The fn's return value will be\n  used as the new attribute map."]],"^14",["^ ","^P","^P"],"~:cljs.analyzer/constants",["^ ","^W",["^H",["~:__start","~:r","~:key","~:points","~:__segment","~:size","~:p","~:__end"]],"~:order",["^3U","^3S","^3X","~:p","~:r","^3V","^3W","^3T"]],"^1:",["^ ","^X",["^H",[]]],"^1;",["^ "],"^1<",["^Q","^P","^S","^R","^O","^U","^T"]],"^L","^J","~:ns-specs",["^ "],"~:ns-spec-vars",[],"~:compiler-options",["^1J",[["^40","~:static-fns"],true,["^40","~:elide-asserts"],false,["^40","~:optimize-constants"],null,["^40","^1A"],null,["^40","~:external-config"],null,["^40","~:tooling-config"],null,["^40","~:emit-constants"],null,["^40","~:load-tests"],null,["^40","~:form-size-threshold"],null,["^40","~:infer-externs"],true,["^40","^1C"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^40","~:fn-invoke-direct"],null,["^40","~:source-map"],"/dev/null"]]]